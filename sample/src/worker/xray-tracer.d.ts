export declare class xRayTracer {
    id: number;
    flags: Uint8Array;
    pixelMemory: Uint8ClampedArray;
    sampleMemory: Float32Array;
    camera: number;
    scene: number;
    full_width: number;
    full_height: number;
    width: number;
    height: number;
    xoffset: number;
    yoffset: number;
    cameraSamples: number;
    absCameraSamples: number;
    hitSamples: number;
    bounces: number;
    iterations: number;
    private locked;
    sampler: any;
    buffer: number;
    samplesPerPixel: number;
    stratifiedSampling: boolean;
    AdaptiveSamples: number;
    FireflySamples: number;
    FireflyThreshold: number;
    constructor(data?: any);
    init(data: any): void;
    updateRenderRegion(width: number, height: number, xoffset: number, yoffset: number): void;
    private lock();
    trace(data: any): boolean;
    run(): void;
    updatePixel(color: any, si: number): void;
    checkSamples(): string;
}
