0000000: 0061 736d             ; WASM_BINARY_MAGIC
0000004: 0d00 0000             ; WASM_BINARY_VERSION
 - section: Type [0x01]
0000008: 01                    ; section code
0000009: b3                    ; section size
0000009: 60                    ; func sig 0
000000a: 00                    ; num params
000000b: 01                    ; num results
000000c: 7f                    ; I32
000000d: 60                    ; func sig 1
000000e: 01                    ; num params
000000f: 7f                    ; I32
0000010: 01                    ; num results
0000011: 7f                    ; I32
0000012: 60                    ; func sig 2
0000013: 01                    ; num params
0000014: 7f                    ; I32
0000016: 60                    ; func sig 3
0000017: 02                    ; num params
0000018: 7f                    ; I32
0000019: 7f                    ; I32
000001b: 60                    ; func sig 4
000001c: 01                    ; num params
000001d: 7c                    ; F64
000001e: 01                    ; num results
000001f: 7c                    ; F64
0000020: 60                    ; func sig 5
0000021: 01                    ; num params
0000022: 7d                    ; F32
0000023: 01                    ; num results
0000024: 7d                    ; F32
0000025: 60                    ; func sig 6
0000026: 02                    ; num params
0000027: 7c                    ; F64
0000028: 7c                    ; F64
0000029: 01                    ; num results
000002a: 7c                    ; F64
000002b: 60                    ; func sig 7
000002c: 02                    ; num params
000002d: 7d                    ; F32
000002e: 7d                    ; F32
000002f: 01                    ; num results
0000030: 7d                    ; F32
0000031: 60                    ; func sig 8
0000032: 02                    ; num params
0000033: 7f                    ; I32
0000034: 7f                    ; I32
0000035: 01                    ; num results
0000036: 7f                    ; I32
0000037: 60                    ; func sig 9
0000038: 03                    ; num params
0000039: 7f                    ; I32
000003a: 7f                    ; I32
000003b: 7f                    ; I32
000003d: 60                    ; func sig 10
000003e: 03                    ; num params
000003f: 7f                    ; I32
0000040: 7f                    ; I32
0000041: 7f                    ; I32
0000042: 01                    ; num results
0000043: 7f                    ; I32
0000044: 60                    ; func sig 11
0000045: 02                    ; num params
0000046: 7f                    ; I32
0000047: 7f                    ; I32
0000048: 01                    ; num results
0000049: 7c                    ; F64
000004a: 60                    ; func sig 12
000004b: 03                    ; num params
000004c: 7f                    ; I32
000004d: 7f                    ; I32
000004e: 7c                    ; F64
0000050: 60                    ; func sig 13
0000051: 00                    ; num params
0000052: 01                    ; num results
0000053: 7d                    ; F32
0000054: 60                    ; func sig 14
0000055: 00                    ; num params
0000056: 01                    ; num results
0000057: 7c                    ; F64
0000058: 60                    ; func sig 15
0000059: 04                    ; num params
000005a: 7f                    ; I32
000005b: 7d                    ; F32
000005c: 7d                    ; F32
000005d: 7d                    ; F32
000005e: 01                    ; num results
000005f: 7f                    ; I32
0000060: 60                    ; func sig 16
0000061: 03                    ; num params
0000062: 7d                    ; F32
0000063: 7d                    ; F32
0000064: 7d                    ; F32
0000065: 01                    ; num results
0000066: 7f                    ; I32
0000067: 60                    ; func sig 17
0000068: 01                    ; num params
0000069: 7f                    ; I32
000006a: 01                    ; num results
000006b: 7d                    ; F32
000006c: 60                    ; func sig 18
000006d: 02                    ; num params
000006e: 7f                    ; I32
000006f: 7d                    ; F32
0000070: 01                    ; num results
0000071: 7d                    ; F32
0000072: 60                    ; func sig 19
0000073: 02                    ; num params
0000074: 7f                    ; I32
0000075: 7f                    ; I32
0000076: 01                    ; num results
0000077: 7d                    ; F32
0000078: 60                    ; func sig 20
0000079: 03                    ; num params
000007a: 7f                    ; I32
000007b: 7d                    ; F32
000007c: 7f                    ; I32
000007d: 01                    ; num results
000007e: 7f                    ; I32
000007f: 60                    ; func sig 21
0000080: 05                    ; num params
0000081: 7f                    ; I32
0000082: 7f                    ; I32
0000083: 7d                    ; F32
0000084: 7d                    ; F32
0000085: 7f                    ; I32
0000086: 01                    ; num results
0000087: 7f                    ; I32
0000088: 60                    ; func sig 22
0000089: 04                    ; num params
000008a: 7f                    ; I32
000008b: 7f                    ; I32
000008c: 7d                    ; F32
000008d: 7d                    ; F32
000008e: 01                    ; num results
000008f: 7d                    ; F32
0000090: 60                    ; func sig 23
0000091: 04                    ; num params
0000092: 7f                    ; I32
0000093: 7c                    ; F64
0000094: 7c                    ; F64
0000095: 7c                    ; F64
0000096: 01                    ; num results
0000097: 7f                    ; I32
0000098: 60                    ; func sig 24
0000099: 03                    ; num params
000009a: 7c                    ; F64
000009b: 7c                    ; F64
000009c: 7c                    ; F64
000009d: 01                    ; num results
000009e: 7f                    ; I32
000009f: 60                    ; func sig 25
00000a0: 03                    ; num params
00000a1: 7f                    ; I32
00000a2: 7c                    ; F64
00000a3: 7f                    ; I32
00000a4: 01                    ; num results
00000a5: 7f                    ; I32
00000a6: 60                    ; func sig 26
00000a7: 01                    ; num params
00000a8: 7f                    ; I32
00000a9: 01                    ; num results
00000aa: 7c                    ; F64
00000ab: 60                    ; func sig 27
00000ac: 04                    ; num params
00000ad: 7f                    ; I32
00000ae: 7f                    ; I32
00000af: 7c                    ; F64
00000b0: 7f                    ; I32
00000b1: 01                    ; num results
00000b2: 7f                    ; I32
00000b3: 60                    ; func sig 28
00000b4: 04                    ; num params
00000b5: 7f                    ; I32
00000b6: 7f                    ; I32
00000b7: 7f                    ; I32
00000b8: 7f                    ; I32
00000b9: 01                    ; num results
00000ba: 7f                    ; I32
 - section: Import [0x02]
00000be: 02                    ; section code
00000bf: 57                    ; section size
00000be: 07                    ; num imports
import func (0) foreign random
import func (1) Math abs
import func (2) Math floor
import func (3) Math max
import func (4) Math min
import func (5) Math pow
import func (6) Math sqrt
 - section: Function [0x03]
0000117: 03                    ; section code
0000118: 51                    ; section size
0000117: 50                    ; num functions
0000118: 01                    ; func 7 sig malloc
0000119: 02                    ; func 8 sig free
000011a: 01                    ; func 9 sig getFreeChunk
000011b: 01                    ; func 10 sig findChunk
000011c: 00                    ; func 11 sig getHeapPtr
000011d: 01                    ; func 12 sig nextFree
000011e: 03                    ; func 13 sig setHeadSize
000011f: 03                    ; func 14 sig setFoot
0000120: 02                    ; func 15 sig setInuse
0000121: 02                    ; func 16 sig clearInuse
0000122: 01                    ; func 17 sig getChunkSize
0000123: 05                    ; func 18 sig absf32
0000124: 05                    ; func 19 sig sqrtf32
0000125: 07                    ; func 20 sig powf32
0000126: 07                    ; func 21 sig minf32
0000127: 07                    ; func 22 sig maxf32
0000128: 08                    ; func 23 sig Array_op_get
0000129: 09                    ; func 24 sig Array_op_set
000012a: 0a                    ; func 25 sig Array__set
000012b: 08                    ; func 26 sig Array_new
000012c: 01                    ; func 27 sig Array_length
000012d: 08                    ; func 28 sig Float64Array__set
000012e: 01                    ; func 29 sig Float64Array_new
000012f: 01                    ; func 30 sig Float64Array_length
0000130: 0b                    ; func 31 sig Float64Array_op_get
0000131: 0c                    ; func 32 sig Float64Array_op_set
0000132: 0d                    ; func 33 sig randomFloat32
0000133: 0e                    ; func 34 sig randomFloat64
0000134: 0f                    ; func 35 sig Vector3__set
0000135: 10                    ; func 36 sig Vector3_new
0000136: 08                    ; func 37 sig Vector3_isEqual
0000137: 01                    ; func 38 sig Vector3_isZero
0000138: 0f                    ; func 39 sig Vector3_set
0000139: 08                    ; func 40 sig Vector3_copy
000013a: 01                    ; func 41 sig Vector3_clone
000013b: 11                    ; func 42 sig Vector3_length
000013c: 12                    ; func 43 sig Vector3_lengthN
000013d: 13                    ; func 44 sig Vector3_dot
000013e: 0a                    ; func 45 sig Vector3_cross
000013f: 08                    ; func 46 sig Vector3_normalize
0000140: 08                    ; func 47 sig Vector3_abs
0000141: 0a                    ; func 48 sig Vector3_add
0000142: 0a                    ; func 49 sig Vector3_sub
0000143: 0a                    ; func 50 sig Vector3_mul
0000144: 0a                    ; func 51 sig Vector3_div
0000145: 0a                    ; func 52 sig Vector3_mod
0000146: 14                    ; func 53 sig Vector3_addScalar
0000147: 14                    ; func 54 sig Vector3_subScalar
0000148: 14                    ; func 55 sig Vector3_mulScalar
0000149: 14                    ; func 56 sig Vector3_divScalar
000014a: 0a                    ; func 57 sig Vector3_min
000014b: 0a                    ; func 58 sig Vector3_max
000014c: 0a                    ; func 59 sig Vector3_minAxis
000014d: 13                    ; func 60 sig Vector3_minComponent
000014e: 13                    ; func 61 sig Vector3_maxComponent
000014f: 0a                    ; func 62 sig Vector3_reflect
0000150: 15                    ; func 63 sig Vector3_refract
0000151: 16                    ; func 64 sig Vector3_reflectance
0000152: 14                    ; func 65 sig Vector3_pow
0000153: 01                    ; func 66 sig randomUnitVector3
0000154: 17                    ; func 67 sig Color__set
0000155: 18                    ; func 68 sig Color_new
0000156: 17                    ; func 69 sig Color_set
0000157: 08                    ; func 70 sig Color_hexColor
0000158: 0a                    ; func 71 sig Color_add
0000159: 0a                    ; func 72 sig Color_sub
000015a: 0a                    ; func 73 sig Color_mul
000015b: 19                    ; func 74 sig Color_mulScalar
000015c: 0a                    ; func 75 sig Color_div
000015d: 19                    ; func 76 sig Color_divScalar
000015e: 0a                    ; func 77 sig Color_min
000015f: 0a                    ; func 78 sig Color_max
0000160: 1a                    ; func 79 sig Color_minComponent
0000161: 1a                    ; func 80 sig Color_maxComponent
0000162: 19                    ; func 81 sig Color_pow
0000163: 1b                    ; func 82 sig Color_mix
0000164: 1c                    ; func 83 sig Image__set
0000165: 0a                    ; func 84 sig Image_new
0000166: 0a                    ; func 85 sig Image_pixOffset
0000167: 03                    ; func 86 sig Image_setRaw
 - section: Memory [0x05]
000016a: 05                    ; section code
000016b: 03                    ; section size
000016a: 01                    ; num memories
000016b: 00                    ; memory flags
000016c: 01                    ; memory initial pages
 - section: Export [0x07]
000016f: 07                    ; section code
0000170: 32                    ; section size
000016f: 43                    ; num exports
0000170: 06                    ; export name length
0000174: memory // export name
0000177: 00                    ; export kind
0000178: 00                    ; export memory index
0000179: 06                    ; export name length
000017d: malloc // export name
0000180: 00                    ; export kind
0000181: 07                    ; export func index
0000182: 04                    ; export name length
0000186: free // export name
0000187: 00                    ; export kind
0000188: 08                    ; export func index
0000189: 0a                    ; export name length
000018d: getHeapPtr // export name
0000194: 00                    ; export kind
0000195: 0b                    ; export func index
0000196: 0c                    ; export name length
000019a: Array_op_get // export name
00001a3: 00                    ; export kind
00001a4: 17                    ; export func index
00001a5: 0c                    ; export name length
00001a9: Array_op_set // export name
00001b2: 00                    ; export kind
00001b3: 18                    ; export func index
00001b4: 0a                    ; export name length
00001b8: Array__set // export name
00001bf: 00                    ; export kind
00001c0: 19                    ; export func index
00001c1: 09                    ; export name length
00001c5: Array_new // export name
00001cb: 00                    ; export kind
00001cc: 1a                    ; export func index
00001cd: 0c                    ; export name length
00001d1: Array_length // export name
00001da: 00                    ; export kind
00001db: 1b                    ; export func index
00001dc: 11                    ; export name length
00001e0: Float64Array__set // export name
00001ee: 00                    ; export kind
00001ef: 1c                    ; export func index
00001f0: 10                    ; export name length
00001f4: Float64Array_new // export name
0000201: 00                    ; export kind
0000202: 1d                    ; export func index
0000203: 13                    ; export name length
0000207: Float64Array_length // export name
0000217: 00                    ; export kind
0000218: 1e                    ; export func index
0000219: 13                    ; export name length
000021d: Float64Array_op_get // export name
000022d: 00                    ; export kind
000022e: 1f                    ; export func index
000022f: 13                    ; export name length
0000233: Float64Array_op_set // export name
0000243: 00                    ; export kind
0000244: 20                    ; export func index
0000245: 0d                    ; export name length
0000249: randomFloat32 // export name
0000253: 00                    ; export kind
0000254: 21                    ; export func index
0000255: 0d                    ; export name length
0000259: randomFloat64 // export name
0000263: 00                    ; export kind
0000264: 22                    ; export func index
0000265: 0c                    ; export name length
0000269: Vector3__set // export name
0000272: 00                    ; export kind
0000273: 23                    ; export func index
0000274: 0b                    ; export name length
0000278: Vector3_new // export name
0000280: 00                    ; export kind
0000281: 24                    ; export func index
0000282: 0f                    ; export name length
0000286: Vector3_isEqual // export name
0000292: 00                    ; export kind
0000293: 25                    ; export func index
0000294: 0e                    ; export name length
0000298: Vector3_isZero // export name
00002a3: 00                    ; export kind
00002a4: 26                    ; export func index
00002a5: 0b                    ; export name length
00002a9: Vector3_set // export name
00002b1: 00                    ; export kind
00002b2: 27                    ; export func index
00002b3: 0c                    ; export name length
00002b7: Vector3_copy // export name
00002c0: 00                    ; export kind
00002c1: 28                    ; export func index
00002c2: 0d                    ; export name length
00002c6: Vector3_clone // export name
00002d0: 00                    ; export kind
00002d1: 29                    ; export func index
00002d2: 0e                    ; export name length
00002d6: Vector3_length // export name
00002e1: 00                    ; export kind
00002e2: 2a                    ; export func index
00002e3: 0f                    ; export name length
00002e7: Vector3_lengthN // export name
00002f3: 00                    ; export kind
00002f4: 2b                    ; export func index
00002f5: 0b                    ; export name length
00002f9: Vector3_dot // export name
0000301: 00                    ; export kind
0000302: 2c                    ; export func index
0000303: 0d                    ; export name length
0000307: Vector3_cross // export name
0000311: 00                    ; export kind
0000312: 2d                    ; export func index
0000313: 11                    ; export name length
0000317: Vector3_normalize // export name
0000325: 00                    ; export kind
0000326: 2e                    ; export func index
0000327: 0b                    ; export name length
000032b: Vector3_abs // export name
0000333: 00                    ; export kind
0000334: 2f                    ; export func index
0000335: 0b                    ; export name length
0000339: Vector3_add // export name
0000341: 00                    ; export kind
0000342: 30                    ; export func index
0000343: 0b                    ; export name length
0000347: Vector3_sub // export name
000034f: 00                    ; export kind
0000350: 31                    ; export func index
0000351: 0b                    ; export name length
0000355: Vector3_mul // export name
000035d: 00                    ; export kind
000035e: 32                    ; export func index
000035f: 0b                    ; export name length
0000363: Vector3_div // export name
000036b: 00                    ; export kind
000036c: 33                    ; export func index
000036d: 0b                    ; export name length
0000371: Vector3_mod // export name
0000379: 00                    ; export kind
000037a: 34                    ; export func index
000037b: 11                    ; export name length
000037f: Vector3_addScalar // export name
000038d: 00                    ; export kind
000038e: 35                    ; export func index
000038f: 11                    ; export name length
0000393: Vector3_subScalar // export name
00003a1: 00                    ; export kind
00003a2: 36                    ; export func index
00003a3: 11                    ; export name length
00003a7: Vector3_mulScalar // export name
00003b5: 00                    ; export kind
00003b6: 37                    ; export func index
00003b7: 11                    ; export name length
00003bb: Vector3_divScalar // export name
00003c9: 00                    ; export kind
00003ca: 38                    ; export func index
00003cb: 0b                    ; export name length
00003cf: Vector3_min // export name
00003d7: 00                    ; export kind
00003d8: 39                    ; export func index
00003d9: 0b                    ; export name length
00003dd: Vector3_max // export name
00003e5: 00                    ; export kind
00003e6: 3a                    ; export func index
00003e7: 0f                    ; export name length
00003eb: Vector3_minAxis // export name
00003f7: 00                    ; export kind
00003f8: 3b                    ; export func index
00003f9: 14                    ; export name length
00003fd: Vector3_minComponent // export name
000040e: 00                    ; export kind
000040f: 3c                    ; export func index
0000410: 14                    ; export name length
0000414: Vector3_maxComponent // export name
0000425: 00                    ; export kind
0000426: 3d                    ; export func index
0000427: 0f                    ; export name length
000042b: Vector3_reflect // export name
0000437: 00                    ; export kind
0000438: 3e                    ; export func index
0000439: 0f                    ; export name length
000043d: Vector3_refract // export name
0000449: 00                    ; export kind
000044a: 3f                    ; export func index
000044b: 13                    ; export name length
000044f: Vector3_reflectance // export name
000045f: 00                    ; export kind
0000460: 40                    ; export func index
0000461: 0b                    ; export name length
0000465: Vector3_pow // export name
000046d: 00                    ; export kind
000046e: 41                    ; export func index
000046f: 11                    ; export name length
0000473: randomUnitVector3 // export name
0000481: 00                    ; export kind
0000482: 42                    ; export func index
0000483: 0a                    ; export name length
0000487: Color__set // export name
000048e: 00                    ; export kind
000048f: 43                    ; export func index
0000490: 09                    ; export name length
0000494: Color_new // export name
000049a: 00                    ; export kind
000049b: 44                    ; export func index
000049c: 09                    ; export name length
00004a0: Color_set // export name
00004a6: 00                    ; export kind
00004a7: 45                    ; export func index
00004a8: 0e                    ; export name length
00004ac: Color_hexColor // export name
00004b7: 00                    ; export kind
00004b8: 46                    ; export func index
00004b9: 09                    ; export name length
00004bd: Color_add // export name
00004c3: 00                    ; export kind
00004c4: 47                    ; export func index
00004c5: 09                    ; export name length
00004c9: Color_sub // export name
00004cf: 00                    ; export kind
00004d0: 48                    ; export func index
00004d1: 09                    ; export name length
00004d5: Color_mul // export name
00004db: 00                    ; export kind
00004dc: 49                    ; export func index
00004dd: 0f                    ; export name length
00004e1: Color_mulScalar // export name
00004ed: 00                    ; export kind
00004ee: 4a                    ; export func index
00004ef: 09                    ; export name length
00004f3: Color_div // export name
00004f9: 00                    ; export kind
00004fa: 4b                    ; export func index
00004fb: 0f                    ; export name length
00004ff: Color_divScalar // export name
000050b: 00                    ; export kind
000050c: 4c                    ; export func index
000050d: 09                    ; export name length
0000511: Color_min // export name
0000517: 00                    ; export kind
0000518: 4d                    ; export func index
0000519: 09                    ; export name length
000051d: Color_max // export name
0000523: 00                    ; export kind
0000524: 4e                    ; export func index
0000525: 12                    ; export name length
0000529: Color_minComponent // export name
0000538: 00                    ; export kind
0000539: 4f                    ; export func index
000053a: 12                    ; export name length
000053e: Color_maxComponent // export name
000054d: 00                    ; export kind
000054e: 50                    ; export func index
000054f: 09                    ; export name length
0000553: Color_pow // export name
0000559: 00                    ; export kind
000055a: 51                    ; export func index
000055b: 09                    ; export name length
000055f: Color_mix // export name
0000565: 00                    ; export kind
0000566: 52                    ; export func index
0000567: 0a                    ; export name length
000056b: Image__set // export name
0000572: 00                    ; export kind
0000573: 53                    ; export func index
0000574: 09                    ; export name length
0000578: Image_new // export name
000057e: 00                    ; export kind
000057f: 54                    ; export func index
0000580: 0f                    ; export name length
0000584: Image_pixOffset // export name
0000590: 00                    ; export kind
0000591: 55                    ; export func index
0000592: 0c                    ; export name length
0000596: Image_setRaw // export name
000059f: 00                    ; export kind
00005a0: 56                    ; export func index
 - section: Code [0x0a]
00005a4: 0a                    ; section code
00005a5: 0c                    ; section size
00005a4: 50                    ; num functions
 - func body 0 (malloc)
00005a7: ad                    ; func body size
00005a5: 06                    ; local count
00005a6: 01                    ; local index
00005a7: 7f                    ; I32
00005a8: 01                    ; local index
00005a9: 7f                    ; I32
00005aa: 01                    ; local index
00005ab: 7f                    ; I32
00005ac: 01                    ; local index
00005ad: 7f                    ; I32
00005ae: 01                    ; local index
00005af: 7f                    ; I32
00005b0: 01                    ; local index
00005b1: 7f                    ; I32
00005b2: 41                    ; i32.const
00005b3: 08                    ; i32 literal
00005b4: 21                    ; set_local
00005b5: 01                    ; local index
00005b6: 20                    ; get_local
00005b7: 00                    ; local index
00005b8: 20                    ; get_local
00005b9: 01                    ; local index
00005ba: 41                    ; i32.const
00005bb: 01                    ; i32 literal
00005bc: 6b                    ; i32.sub
00005bd: 6a                    ; i32.add
00005be: 41                    ; i32.const
00005bf: -1                    ; i32 literal
00005c0: 20                    ; get_local
00005c1: 01                    ; local index
00005c2: 41                    ; i32.const
00005c3: 01                    ; i32 literal
00005c4: 6b                    ; i32.sub
00005c5: 73                    ; i32.xor
00005c6: 71                    ; i32.and
00005c7: 21                    ; set_local
00005c8: 00                    ; local index
00005c9: 20                    ; get_local
00005ca: 00                    ; local index
00005cb: 41                    ; i32.const
00005cc: 08                    ; i32 literal
00005cd: 6a                    ; i32.add
00005ce: 21                    ; set_local
00005cf: 02                    ; local index
00005d0: 20                    ; get_local
00005d1: 02                    ; local index
00005d2: 10                    ; call
00005d3: 09                    ; call func index (9)
00005d4: 21                    ; set_local
00005d5: 03                    ; local index
00005d6: 20                    ; get_local
00005d7: 03                    ; local index
00005d8: 41                    ; i32.const
00005d9: 00                    ; i32 literal
00005da: 4a                    ; i32.gt_s
00005db: 04                    ; if
0000037: 40                    ; block_type
00005dd: 02                    ; block
00005de: 40                    ; block_type
00005df: 20                    ; get_local
00005e0: 03                    ; local index
00005e1: 0f                    ; return
00005e2: 0b                    ; end
00005e3: 0b                    ; end
00005e4: 41                    ; i32.const
00005e5: 00                    ; i32 literal
00005e6: 28                    ; i32.load
00005e7: 02                    ; alignment
00005e8: 0c                    ; load offset
00005e9: 20                    ; get_local
00005ea: 01                    ; local index
00005eb: 41                    ; i32.const
00005ec: 01                    ; i32 literal
00005ed: 6b                    ; i32.sub
00005ee: 6a                    ; i32.add
00005ef: 41                    ; i32.const
00005f0: -1                    ; i32 literal
00005f1: 20                    ; get_local
00005f2: 01                    ; local index
00005f3: 41                    ; i32.const
00005f4: 01                    ; i32 literal
00005f5: 6b                    ; i32.sub
00005f6: 73                    ; i32.xor
00005f7: 71                    ; i32.and
00005f8: 21                    ; set_local
00005f9: 04                    ; local index
00005fa: 20                    ; get_local
00005fb: 04                    ; local index
00005fc: 20                    ; get_local
00005fd: 02                    ; local index
00005fe: 6a                    ; i32.add
00005ff: 21                    ; set_local
0000600: 05                    ; local index
0000601: 20                    ; get_local
0000602: 04                    ; local index
0000603: 41                    ; i32.const
0000604: 04                    ; i32 literal
0000605: 6a                    ; i32.add
0000606: 21                    ; set_local
0000607: 06                    ; local index
0000608: 20                    ; get_local
0000609: 06                    ; local index
000060a: 20                    ; get_local
000060b: 02                    ; local index
000060c: 10                    ; call
000060d: 0d                    ; call func index (13)
000060e: 20                    ; get_local
000060f: 06                    ; local index
0000610: 41                    ; i32.const
0000611: 04                    ; i32 literal
0000612: 6a                    ; i32.add
0000613: 10                    ; call
0000614: 0f                    ; call func index (15)
0000615: 20                    ; get_local
0000616: 06                    ; local index
0000617: 20                    ; get_local
0000618: 02                    ; local index
0000619: 10                    ; call
000061a: 0e                    ; call func index (14)
000061b: 41                    ; i32.const
000061c: 00                    ; i32 literal
000061d: 20                    ; get_local
000061e: 05                    ; local index
000061f: 41                    ; i32.const
0000620: 04                    ; i32 literal
0000621: 6a                    ; i32.add
0000622: 36                    ; i32.store
0000623: 02                    ; alignment
0000624: 0c                    ; load offset
0000625: 20                    ; get_local
0000626: 04                    ; local index
0000627: 41                    ; i32.const
0000628: 08                    ; i32 literal
0000629: 6a                    ; i32.add
000062a: 21                    ; set_local
000062b: 04                    ; local index
000062c: 20                    ; get_local
000062d: 04                    ; local index
000062e: 21                    ; set_local
000062f: 06                    ; local index
0000630: 02                    ; block
000008c: 40                    ; block_type
0000632: 03                    ; loop
000008e: 40                    ; block_type
0000634: 20                    ; get_local
0000635: 06                    ; local index
0000636: 20                    ; get_local
0000637: 05                    ; local index
0000638: 48                    ; i32.lt_s
0000639: 45                    ; i32.eqz
000063a: 0d                    ; br_if
000063c: 20                    ; get_local
000063d: 06                    ; local index
000063e: 41                    ; i32.const
000063f: 00                    ; i32 literal
0000640: 36                    ; i32.store
0000641: 02                    ; alignment
0000642: 00                    ; load offset
0000643: 20                    ; get_local
0000644: 06                    ; local index
0000645: 41                    ; i32.const
0000646: 04                    ; i32 literal
0000647: 6a                    ; i32.add
0000648: 21                    ; set_local
0000649: 06                    ; local index
000064a: 0c                    ; br
000064c: 0b                    ; end
000064d: 0b                    ; end
000064e: 20                    ; get_local
000064f: 04                    ; local index
0000650: 0f                    ; return
0000651: 0b                    ; end
 - func body 1 (free)
0000655: 7b                    ; func body size
0000654: 01                    ; local count
0000655: 01                    ; local index
0000656: 7f                    ; I32
0000657: 20                    ; get_local
0000658: 00                    ; local index
0000659: 10                    ; call
000065a: 10                    ; call func index (16)
000065b: 41                    ; i32.const
000065c: 00                    ; i32 literal
000065d: 28                    ; i32.load
000065e: 02                    ; alignment
000065f: 18                    ; load offset
0000660: 41                    ; i32.const
0000661: 00                    ; i32 literal
0000662: 46                    ; i32.eq
0000663: 04                    ; if
0000010: 40                    ; block_type
0000665: 02                    ; block
0000666: 40                    ; block_type
0000667: 41                    ; i32.const
0000668: 00                    ; i32 literal
0000669: 20                    ; get_local
000066a: 00                    ; local index
000066b: 36                    ; i32.store
000066c: 02                    ; alignment
000066d: 18                    ; load offset
000066e: 0b                    ; end
000066f: 0b                    ; end
0000670: 41                    ; i32.const
0000671: 00                    ; i32 literal
0000672: 41                    ; i32.const
0000673: 00                    ; i32 literal
0000674: 28                    ; i32.load
0000675: 02                    ; alignment
0000676: 10                    ; load offset
0000677: 20                    ; get_local
0000678: 00                    ; local index
0000679: 10                    ; call
000067a: 11                    ; call func index (17)
000067b: 6a                    ; i32.add
000067c: 36                    ; i32.store
000067d: 02                    ; alignment
000067e: 10                    ; load offset
000067f: 20                    ; get_local
0000680: 00                    ; local index
0000681: 41                    ; i32.const
0000682: 04                    ; i32 literal
0000683: 6a                    ; i32.add
0000684: 21                    ; set_local
0000685: 01                    ; local index
0000686: 41                    ; i32.const
0000687: 00                    ; i32 literal
0000688: 28                    ; i32.load
0000689: 02                    ; alignment
000068a: 1c                    ; load offset
000068b: 41                    ; i32.const
000068c: 00                    ; i32 literal
000068d: 4b                    ; i32.gt_u
000068e: 04                    ; if
000003b: 40                    ; block_type
0000690: 02                    ; block
0000691: 40                    ; block_type
0000692: 20                    ; get_local
0000693: 01                    ; local index
0000694: 41                    ; i32.const
0000695: 00                    ; i32 literal
0000696: 28                    ; i32.load
0000697: 02                    ; alignment
0000698: 1c                    ; load offset
0000699: 36                    ; i32.store
000069a: 02                    ; alignment
000069b: 00                    ; load offset
000069c: 41                    ; i32.const
000069d: 00                    ; i32 literal
000069e: 28                    ; i32.load
000069f: 02                    ; alignment
00006a0: 1c                    ; load offset
00006a1: 20                    ; get_local
00006a2: 00                    ; local index
00006a3: 36                    ; i32.store
00006a4: 02                    ; alignment
00006a5: 00                    ; load offset
00006a6: 0b                    ; end
00006a7: 05                    ; else
00006a8: 02                    ; block
00006a9: 40                    ; block_type
00006aa: 20                    ; get_local
00006ab: 01                    ; local index
00006ac: 41                    ; i32.const
00006ad: 00                    ; i32 literal
00006ae: 36                    ; i32.store
00006af: 02                    ; alignment
00006b0: 00                    ; load offset
00006b1: 0b                    ; end
00006b2: 0b                    ; end
00006b3: 20                    ; get_local
00006b4: 00                    ; local index
00006b5: 41                    ; i32.const
00006b6: 00                    ; i32 literal
00006b7: 36                    ; i32.store
00006b8: 02                    ; alignment
00006b9: 00                    ; load offset
00006ba: 41                    ; i32.const
00006bb: 00                    ; i32 literal
00006bc: 20                    ; get_local
00006bd: 00                    ; local index
00006be: 36                    ; i32.store
00006bf: 02                    ; alignment
00006c0: 1c                    ; load offset
00006c1: 41                    ; i32.const
00006c2: 00                    ; i32 literal
00006c3: 41                    ; i32.const
00006c4: 00                    ; i32 literal
00006c5: 28                    ; i32.load
00006c6: 02                    ; alignment
00006c7: 14                    ; load offset
00006c8: 41                    ; i32.const
00006c9: 01                    ; i32 literal
00006ca: 6a                    ; i32.add
00006cb: 36                    ; i32.store
00006cc: 02                    ; alignment
00006cd: 14                    ; load offset
00006ce: 0b                    ; end
 - func body 2 (getFreeChunk)
00006d1: 75                    ; func body size
00006d0: 01                    ; local count
00006d1: 01                    ; local index
00006d2: 7f                    ; I32
00006d3: 41                    ; i32.const
00006d4: 00                    ; i32 literal
00006d5: 28                    ; i32.load
00006d6: 02                    ; alignment
00006d7: 14                    ; load offset
00006d8: 41                    ; i32.const
00006d9: 00                    ; i32 literal
00006da: 4b                    ; i32.gt_u
00006db: 04                    ; if
000000c: 40                    ; block_type
00006dd: 02                    ; block
00006de: 40                    ; block_type
00006df: 20                    ; get_local
00006e0: 00                    ; local index
00006e1: 10                    ; call
00006e2: 0a                    ; call func index (10)
00006e3: 21                    ; set_local
00006e4: 01                    ; local index
00006e5: 20                    ; get_local
00006e6: 01                    ; local index
00006e7: 41                    ; i32.const
00006e8: 00                    ; i32 literal
00006e9: 4a                    ; i32.gt_s
00006ea: 04                    ; if
000001b: 40                    ; block_type
00006ec: 02                    ; block
00006ed: 40                    ; block_type
00006ee: 20                    ; get_local
00006ef: 01                    ; local index
00006f0: 41                    ; i32.const
00006f1: 00                    ; i32 literal
00006f2: 28                    ; i32.load
00006f3: 02                    ; alignment
00006f4: 18                    ; load offset
00006f5: 46                    ; i32.eq
00006f6: 04                    ; if
0000027: 40                    ; block_type
00006f8: 02                    ; block
00006f9: 40                    ; block_type
00006fa: 41                    ; i32.const
00006fb: 00                    ; i32 literal
00006fc: 20                    ; get_local
00006fd: 01                    ; local index
00006fe: 10                    ; call
00006ff: 0c                    ; call func index (12)
0000700: 36                    ; i32.store
0000701: 02                    ; alignment
0000702: 18                    ; load offset
0000703: 0b                    ; end
0000704: 0b                    ; end
0000705: 20                    ; get_local
0000706: 01                    ; local index
0000707: 41                    ; i32.const
0000708: 00                    ; i32 literal
0000709: 28                    ; i32.load
000070a: 02                    ; alignment
000070b: 1c                    ; load offset
000070c: 46                    ; i32.eq
000070d: 04                    ; if
000003e: 40                    ; block_type
000070f: 02                    ; block
0000710: 40                    ; block_type
0000711: 41                    ; i32.const
0000712: 00                    ; i32 literal
0000713: 41                    ; i32.const
0000714: 00                    ; i32 literal
0000715: 36                    ; i32.store
0000716: 02                    ; alignment
0000717: 1c                    ; load offset
0000718: 0b                    ; end
0000719: 0b                    ; end
000071a: 41                    ; i32.const
000071b: 00                    ; i32 literal
000071c: 41                    ; i32.const
000071d: 00                    ; i32 literal
000071e: 28                    ; i32.load
000071f: 02                    ; alignment
0000720: 14                    ; load offset
0000721: 41                    ; i32.const
0000722: 01                    ; i32 literal
0000723: 6b                    ; i32.sub
0000724: 36                    ; i32.store
0000725: 02                    ; alignment
0000726: 14                    ; load offset
0000727: 20                    ; get_local
0000728: 01                    ; local index
0000729: 10                    ; call
000072a: 0f                    ; call func index (15)
000072b: 41                    ; i32.const
000072c: 00                    ; i32 literal
000072d: 41                    ; i32.const
000072e: 00                    ; i32 literal
000072f: 28                    ; i32.load
0000730: 02                    ; alignment
0000731: 10                    ; load offset
0000732: 20                    ; get_local
0000733: 01                    ; local index
0000734: 10                    ; call
0000735: 11                    ; call func index (17)
0000736: 6b                    ; i32.sub
0000737: 36                    ; i32.store
0000738: 02                    ; alignment
0000739: 10                    ; load offset
000073a: 20                    ; get_local
000073b: 01                    ; local index
000073c: 0f                    ; return
000073d: 0b                    ; end
000073e: 0b                    ; end
000073f: 0b                    ; end
0000740: 0b                    ; end
0000741: 41                    ; i32.const
0000742: 00                    ; i32 literal
0000743: 0f                    ; return
0000744: 0b                    ; end
 - func body 3 (findChunk)
0000747: 35                    ; func body size
0000746: 01                    ; local count
0000747: 01                    ; local index
0000748: 7f                    ; I32
0000749: 41                    ; i32.const
000074a: 00                    ; i32 literal
000074b: 28                    ; i32.load
000074c: 02                    ; alignment
000074d: 18                    ; load offset
000074e: 21                    ; set_local
000074f: 01                    ; local index
0000750: 02                    ; block
000000b: 40                    ; block_type
0000752: 03                    ; loop
000000d: 40                    ; block_type
0000754: 20                    ; get_local
0000755: 01                    ; local index
0000756: 41                    ; i32.const
0000757: 00                    ; i32 literal
0000758: 47                    ; i32.ne
0000759: 45                    ; i32.eqz
000075a: 0d                    ; br_if
000075c: 20                    ; get_local
000075d: 01                    ; local index
000075e: 10                    ; call
000075f: 11                    ; call func index (17)
0000760: 20                    ; get_local
0000761: 00                    ; local index
0000762: 46                    ; i32.eq
0000763: 04                    ; if
000001e: 40                    ; block_type
0000765: 02                    ; block
0000766: 40                    ; block_type
0000767: 20                    ; get_local
0000768: 01                    ; local index
0000769: 0f                    ; return
000076a: 0b                    ; end
000076b: 0b                    ; end
000076c: 20                    ; get_local
000076d: 01                    ; local index
000076e: 28                    ; i32.load
000076f: 02                    ; alignment
0000770: 00                    ; load offset
0000771: 21                    ; set_local
0000772: 01                    ; local index
0000773: 0c                    ; br
0000775: 0b                    ; end
0000776: 0b                    ; end
0000777: 41                    ; i32.const
0000778: 00                    ; i32 literal
0000779: 0f                    ; return
000077a: 0b                    ; end
 - func body 4 (getHeapPtr)
000077d: 08                    ; func body size
000077c: 00                    ; local count
000077d: 41                    ; i32.const
000077e: 00                    ; i32 literal
000077f: 28                    ; i32.load
0000780: 02                    ; alignment
0000781: 0c                    ; load offset
0000782: 0f                    ; return
0000783: 0b                    ; end
 - func body 5 (nextFree)
0000786: 08                    ; func body size
0000785: 00                    ; local count
0000786: 20                    ; get_local
0000787: 00                    ; local index
0000788: 28                    ; i32.load
0000789: 02                    ; alignment
000078a: 00                    ; load offset
000078b: 0f                    ; return
000078c: 0b                    ; end
 - func body 6 (setHeadSize)
000078f: 12                    ; func body size
000078e: 00                    ; local count
000078f: 20                    ; get_local
0000790: 00                    ; local index
0000791: 20                    ; get_local
0000792: 00                    ; local index
0000793: 28                    ; i32.load
0000794: 02                    ; alignment
0000795: 00                    ; load offset
0000796: 41                    ; i32.const
0000797: 07                    ; i32 literal
0000798: 71                    ; i32.and
0000799: 20                    ; get_local
000079a: 01                    ; local index
000079b: 72                    ; i32.or
000079c: 36                    ; i32.store
000079d: 02                    ; alignment
000079e: 00                    ; load offset
000079f: 0b                    ; end
 - func body 7 (setFoot)
00007a2: 1b                    ; func body size
00007a1: 02                    ; local count
00007a2: 01                    ; local index
00007a3: 7f                    ; I32
00007a4: 01                    ; local index
00007a5: 7f                    ; I32
00007a6: 20                    ; get_local
00007a7: 00                    ; local index
00007a8: 28                    ; i32.load
00007a9: 02                    ; alignment
00007aa: 00                    ; load offset
00007ab: 21                    ; set_local
00007ac: 02                    ; local index
00007ad: 20                    ; get_local
00007ae: 00                    ; local index
00007af: 20                    ; get_local
00007b0: 02                    ; local index
00007b1: 6a                    ; i32.add
00007b2: 21                    ; set_local
00007b3: 03                    ; local index
00007b4: 20                    ; get_local
00007b5: 03                    ; local index
00007b6: 20                    ; get_local
00007b7: 01                    ; local index
00007b8: 36                    ; i32.store
00007b9: 02                    ; alignment
00007ba: 00                    ; load offset
00007bb: 0b                    ; end
 - func body 8 (setInuse)
00007be: 18                    ; func body size
00007bd: 01                    ; local count
00007be: 01                    ; local index
00007bf: 7f                    ; I32
00007c0: 20                    ; get_local
00007c1: 00                    ; local index
00007c2: 41                    ; i32.const
00007c3: 04                    ; i32 literal
00007c4: 6b                    ; i32.sub
00007c5: 21                    ; set_local
00007c6: 01                    ; local index
00007c7: 20                    ; get_local
00007c8: 01                    ; local index
00007c9: 20                    ; get_local
00007ca: 01                    ; local index
00007cb: 28                    ; i32.load
00007cc: 02                    ; alignment
00007cd: 00                    ; load offset
00007ce: 41                    ; i32.const
00007cf: 01                    ; i32 literal
00007d0: 72                    ; i32.or
00007d1: 36                    ; i32.store
00007d2: 02                    ; alignment
00007d3: 00                    ; load offset
00007d4: 0b                    ; end
 - func body 9 (clearInuse)
00007d7: 18                    ; func body size
00007d6: 01                    ; local count
00007d7: 01                    ; local index
00007d8: 7f                    ; I32
00007d9: 20                    ; get_local
00007da: 00                    ; local index
00007db: 41                    ; i32.const
00007dc: 04                    ; i32 literal
00007dd: 6b                    ; i32.sub
00007de: 21                    ; set_local
00007df: 01                    ; local index
00007e0: 20                    ; get_local
00007e1: 01                    ; local index
00007e2: 20                    ; get_local
00007e3: 01                    ; local index
00007e4: 28                    ; i32.load
00007e5: 02                    ; alignment
00007e6: 00                    ; load offset
00007e7: 41                    ; i32.const
00007e8: -2                    ; i32 literal
00007e9: 71                    ; i32.and
00007ea: 36                    ; i32.store
00007eb: 02                    ; alignment
00007ec: 00                    ; load offset
00007ed: 0b                    ; end
 - func body 10 (getChunkSize)
00007f0: 14                    ; func body size
00007ef: 01                    ; local count
00007f0: 01                    ; local index
00007f1: 7f                    ; I32
00007f2: 20                    ; get_local
00007f3: 00                    ; local index
00007f4: 41                    ; i32.const
00007f5: 04                    ; i32 literal
00007f6: 6b                    ; i32.sub
00007f7: 21                    ; set_local
00007f8: 01                    ; local index
00007f9: 20                    ; get_local
00007fa: 01                    ; local index
00007fb: 28                    ; i32.load
00007fc: 02                    ; alignment
00007fd: 00                    ; load offset
00007fe: 41                    ; i32.const
00007ff: -2                    ; i32 literal
0000800: 71                    ; i32.and
0000801: 0f                    ; return
0000802: 0b                    ; end
 - func body 11 (absf32)
0000805: 09                    ; func body size
0000804: 00                    ; local count
0000805: 20                    ; get_local
0000806: 00                    ; local index
0000807: bb                    ; f64.promote/f32
0000808: 10                    ; call
0000809: 01                    ; call func index (1)
000080a: b6                    ; f32.demote/f64
000080b: 0f                    ; return
000080c: 0b                    ; end
 - func body 12 (sqrtf32)
000080f: 09                    ; func body size
000080e: 00                    ; local count
000080f: 20                    ; get_local
0000810: 00                    ; local index
0000811: bb                    ; f64.promote/f32
0000812: 10                    ; call
0000813: 06                    ; call func index (6)
0000814: b6                    ; f32.demote/f64
0000815: 0f                    ; return
0000816: 0b                    ; end
 - func body 13 (powf32)
0000819: 0c                    ; func body size
0000818: 00                    ; local count
0000819: 20                    ; get_local
000081a: 00                    ; local index
000081b: bb                    ; f64.promote/f32
000081c: 20                    ; get_local
000081d: 01                    ; local index
000081e: bb                    ; f64.promote/f32
000081f: 10                    ; call
0000820: 05                    ; call func index (5)
0000821: b6                    ; f32.demote/f64
0000822: 0f                    ; return
0000823: 0b                    ; end
 - func body 14 (minf32)
0000826: 0c                    ; func body size
0000825: 00                    ; local count
0000826: 20                    ; get_local
0000827: 00                    ; local index
0000828: bb                    ; f64.promote/f32
0000829: 20                    ; get_local
000082a: 01                    ; local index
000082b: bb                    ; f64.promote/f32
000082c: 10                    ; call
000082d: 04                    ; call func index (4)
000082e: b6                    ; f32.demote/f64
000082f: 0f                    ; return
0000830: 0b                    ; end
 - func body 15 (maxf32)
0000833: 0c                    ; func body size
0000832: 00                    ; local count
0000833: 20                    ; get_local
0000834: 00                    ; local index
0000835: bb                    ; f64.promote/f32
0000836: 20                    ; get_local
0000837: 01                    ; local index
0000838: bb                    ; f64.promote/f32
0000839: 10                    ; call
000083a: 03                    ; call func index (3)
000083b: b6                    ; f32.demote/f64
000083c: 0f                    ; return
000083d: 0b                    ; end
 - func body 16 (Array_op_get)
0000840: 2b                    ; func body size
000083f: 00                    ; local count
0000840: 20                    ; get_local
0000841: 01                    ; local index
0000842: 20                    ; get_local
0000843: 00                    ; local index
0000844: 28                    ; i32.load
0000845: 02                    ; alignment
0000846: 00                    ; load offset
0000847: 20                    ; get_local
0000848: 00                    ; local index
0000849: 28                    ; i32.load
000084a: 02                    ; alignment
000084b: 04                    ; load offset
000084c: 6d                    ; i32.div_s
000084d: 48                    ; i32.lt_s
000084e: 04                    ; if
0000010: 40                    ; block_type
0000850: 02                    ; block
0000851: 40                    ; block_type
0000852: 20                    ; get_local
0000853: 00                    ; local index
0000854: 41                    ; i32.const
0000855: 20                    ; i32 literal
0000856: 6a                    ; i32.add
0000857: 20                    ; get_local
0000858: 01                    ; local index
0000859: 41                    ; i32.const
000085a: 02                    ; i32 literal
000085b: 74                    ; i32.shl
000085c: 41                    ; i32.const
000085d: 02                    ; i32 literal
000085e: 74                    ; i32.shl
000085f: 6a                    ; i32.add
0000860: 28                    ; i32.load
0000861: 02                    ; alignment
0000862: 00                    ; load offset
0000863: 0f                    ; return
0000864: 0b                    ; end
0000865: 0b                    ; end
0000866: 41                    ; i32.const
0000867: 00                    ; i32 literal
0000868: 0f                    ; return
0000869: 0b                    ; end
 - func body 17 (Array_op_set)
000086c: 15                    ; func body size
000086b: 00                    ; local count
000086c: 20                    ; get_local
000086d: 00                    ; local index
000086e: 41                    ; i32.const
000086f: 20                    ; i32 literal
0000870: 6a                    ; i32.add
0000871: 20                    ; get_local
0000872: 01                    ; local index
0000873: 41                    ; i32.const
0000874: 02                    ; i32 literal
0000875: 74                    ; i32.shl
0000876: 41                    ; i32.const
0000877: 02                    ; i32 literal
0000878: 74                    ; i32.shl
0000879: 6a                    ; i32.add
000087a: 20                    ; get_local
000087b: 02                    ; local index
000087c: 36                    ; i32.store
000087d: 02                    ; alignment
000087e: 00                    ; load offset
000087f: 0b                    ; end
 - func body 18 (Array__set)
0000882: 13                    ; func body size
0000881: 00                    ; local count
0000882: 20                    ; get_local
0000883: 00                    ; local index
0000884: 20                    ; get_local
0000885: 01                    ; local index
0000886: 36                    ; i32.store
0000887: 02                    ; alignment
0000888: 00                    ; load offset
0000889: 20                    ; get_local
000088a: 00                    ; local index
000088b: 20                    ; get_local
000088c: 02                    ; local index
000088d: 36                    ; i32.store
000088e: 02                    ; alignment
000088f: 04                    ; load offset
0000890: 20                    ; get_local
0000891: 00                    ; local index
0000892: 0f                    ; return
0000893: 0b                    ; end
 - func body 19 (Array_new)
0000896: 0f                    ; func body size
0000895: 00                    ; local count
0000896: 20                    ; get_local
0000898: 41                    ; i32.const
000089a: 6a                    ; i32.add
000089b: 10                    ; call
000089c: 07                    ; call func index (7)
000089d: 20                    ; get_local
000089e: 00                    ; local index
000089f: 20                    ; get_local
00008a0: 01                    ; local index
00008a1: 10                    ; call
00008a2: 19                    ; call func index (25)
00008a3: 0b                    ; end
 - func body 20 (Array_length)
00008a6: 0e                    ; func body size
00008a5: 00                    ; local count
00008a6: 20                    ; get_local
00008a7: 00                    ; local index
00008a8: 28                    ; i32.load
00008a9: 02                    ; alignment
00008aa: 00                    ; load offset
00008ab: 20                    ; get_local
00008ac: 00                    ; local index
00008ad: 28                    ; i32.load
00008ae: 02                    ; alignment
00008af: 04                    ; load offset
00008b0: 6d                    ; i32.div_s
00008b1: 0f                    ; return
00008b2: 0b                    ; end
 - func body 21 (Float64Array__set)
00008b5: 16                    ; func body size
00008b4: 00                    ; local count
00008b5: 20                    ; get_local
00008b6: 00                    ; local index
00008b7: 20                    ; get_local
00008b8: 01                    ; local index
00008b9: 36                    ; i32.store
00008ba: 02                    ; alignment
00008bb: 00                    ; load offset
00008bc: 20                    ; get_local
00008bd: 00                    ; local index
00008be: 20                    ; get_local
00008bf: 01                    ; local index
00008c0: 41                    ; i32.const
00008c1: 03                    ; i32 literal
00008c2: 74                    ; i32.shl
00008c3: 36                    ; i32.store
00008c4: 02                    ; alignment
00008c5: 04                    ; load offset
00008c6: 20                    ; get_local
00008c7: 00                    ; local index
00008c8: 0f                    ; return
00008c9: 0b                    ; end
 - func body 22 (Float64Array_new)
00008cc: 10                    ; func body size
00008cb: 00                    ; local count
00008cc: 20                    ; get_local
00008ce: 41                    ; i32.const
00008d0: 74                    ; i32.shl
00008d1: 41                    ; i32.const
00008d3: 6a                    ; i32.add
00008d4: 10                    ; call
00008d5: 07                    ; call func index (7)
00008d6: 20                    ; get_local
00008d7: 00                    ; local index
00008d8: 10                    ; call
00008d9: 1c                    ; call func index (28)
00008da: 0b                    ; end
 - func body 23 (Float64Array_length)
00008dd: 08                    ; func body size
00008dc: 00                    ; local count
00008dd: 20                    ; get_local
00008de: 00                    ; local index
00008df: 28                    ; i32.load
00008e0: 02                    ; alignment
00008e1: 00                    ; load offset
00008e2: 0f                    ; return
00008e3: 0b                    ; end
 - func body 24 (Float64Array_op_get)
00008e6: 2b                    ; func body size
00008e5: 00                    ; local count
00008e6: 20                    ; get_local
00008e7: 01                    ; local index
00008e8: 20                    ; get_local
00008e9: 00                    ; local index
00008ea: 10                    ; call
00008eb: 1e                    ; call func index (30)
00008ec: 48                    ; i32.lt_s
00008ed: 04                    ; if
0000009: 40                    ; block_type
00008ef: 02                    ; block
00008f0: 40                    ; block_type
00008f1: 20                    ; get_local
00008f2: 00                    ; local index
00008f3: 41                    ; i32.const
00008f4: 20                    ; i32 literal
00008f5: 6a                    ; i32.add
00008f6: 20                    ; get_local
00008f7: 01                    ; local index
00008f8: 41                    ; i32.const
00008f9: 03                    ; i32 literal
00008fa: 74                    ; i32.shl
00008fb: 41                    ; i32.const
00008fc: 02                    ; i32 literal
00008fd: 74                    ; i32.shl
00008fe: 6a                    ; i32.add
00008ff: 2b                    ; f64.load
0000900: 03                    ; alignment
0000901: 00                    ; load offset
0000902: 0f                    ; return
0000903: 0b                    ; end
0000904: 0b                    ; end
0000905: 44                    ; f64.const
0000906: 00                    ; f64 literal
000090e: 0f                    ; return
000090f: 0b                    ; end
 - func body 25 (Float64Array_op_set)
0000912: 15                    ; func body size
0000911: 00                    ; local count
0000912: 20                    ; get_local
0000913: 00                    ; local index
0000914: 41                    ; i32.const
0000915: 20                    ; i32 literal
0000916: 6a                    ; i32.add
0000917: 20                    ; get_local
0000918: 01                    ; local index
0000919: 41                    ; i32.const
000091a: 03                    ; i32 literal
000091b: 74                    ; i32.shl
000091c: 41                    ; i32.const
000091d: 02                    ; i32 literal
000091e: 74                    ; i32.shl
000091f: 6a                    ; i32.add
0000920: 20                    ; get_local
0000921: 02                    ; local index
0000922: 39                    ; f64.store
0000923: 03                    ; alignment
0000924: 00                    ; load offset
0000925: 0b                    ; end
 - func body 26 (randomFloat32)
0000928: 0c                    ; func body size
0000927: 00                    ; local count
0000928: 10                    ; call
0000929: 00                    ; call func index (0)
000092a: 41                    ; i32.const
000092b: 00                    ; i32 literal
000092c: 28                    ; i32.load
000092d: 02                    ; alignment
000092e: 20                    ; load offset
000092f: 6d                    ; i32.div_s
0000930: b2                    ; f32.convert_s/i32
0000931: 0f                    ; return
0000932: 0b                    ; end
 - func body 27 (randomFloat64)
0000935: 06                    ; func body size
0000934: 00                    ; local count
0000935: 10                    ; call
0000936: 00                    ; call func index (0)
0000937: b7                    ; f64.convert_s/i32
0000938: 0f                    ; return
0000939: 0b                    ; end
 - func body 28 (Vector3__set)
000093c: 1a                    ; func body size
000093b: 00                    ; local count
000093c: 20                    ; get_local
000093d: 00                    ; local index
000093e: 20                    ; get_local
000093f: 01                    ; local index
0000940: 38                    ; f32.store
0000941: 02                    ; alignment
0000942: 00                    ; load offset
0000943: 20                    ; get_local
0000944: 00                    ; local index
0000945: 20                    ; get_local
0000946: 02                    ; local index
0000947: 38                    ; f32.store
0000948: 02                    ; alignment
0000949: 04                    ; load offset
000094a: 20                    ; get_local
000094b: 00                    ; local index
000094c: 20                    ; get_local
000094d: 03                    ; local index
000094e: 38                    ; f32.store
000094f: 02                    ; alignment
0000950: 08                    ; load offset
0000951: 20                    ; get_local
0000952: 00                    ; local index
0000953: 0f                    ; return
0000954: 0b                    ; end
 - func body 29 (Vector3_new)
0000957: 0e                    ; func body size
0000956: 00                    ; local count
0000957: 41                    ; i32.const
0000958: 0c                    ; i32 literal
0000959: 10                    ; call
000095a: 07                    ; call func index (7)
000095b: 20                    ; get_local
000095c: 00                    ; local index
000095d: 20                    ; get_local
000095e: 01                    ; local index
000095f: 20                    ; get_local
0000960: 02                    ; local index
0000961: 10                    ; call
0000962: 23                    ; call func index (35)
0000963: 0b                    ; end
 - func body 30 (Vector3_isEqual)
0000966: 2c                    ; func body size
0000965: 00                    ; local count
0000966: 20                    ; get_local
0000967: 00                    ; local index
0000968: 2a                    ; f32.load
0000969: 02                    ; alignment
000096a: 00                    ; load offset
000096b: 20                    ; get_local
000096c: 01                    ; local index
000096d: 2a                    ; f32.load
000096e: 02                    ; alignment
000096f: 00                    ; load offset
0000970: 5b                    ; f32.eq
0000971: 20                    ; get_local
0000972: 00                    ; local index
0000973: 2a                    ; f32.load
0000974: 02                    ; alignment
0000975: 04                    ; load offset
0000976: 20                    ; get_local
0000977: 01                    ; local index
0000978: 2a                    ; f32.load
0000979: 02                    ; alignment
000097a: 04                    ; load offset
000097b: 5b                    ; f32.eq
000097c: 71                    ; i32.and
000097d: 41                    ; i32.const
000097e: 01                    ; i32 literal
000097f: 46                    ; i32.eq
0000980: 20                    ; get_local
0000981: 00                    ; local index
0000982: 2a                    ; f32.load
0000983: 02                    ; alignment
0000984: 08                    ; load offset
0000985: 20                    ; get_local
0000986: 01                    ; local index
0000987: 2a                    ; f32.load
0000988: 02                    ; alignment
0000989: 08                    ; load offset
000098a: 5b                    ; f32.eq
000098b: 71                    ; i32.and
000098c: 41                    ; i32.const
000098d: 01                    ; i32 literal
000098e: 46                    ; i32.eq
000098f: 0f                    ; return
0000990: 0b                    ; end
 - func body 31 (Vector3_isZero)
0000993: 32                    ; func body size
0000992: 01                    ; local count
0000993: 01                    ; local index
0000994: 7f                    ; I32
0000995: 20                    ; get_local
0000996: 00                    ; local index
0000997: 2a                    ; f32.load
0000998: 02                    ; alignment
0000999: 00                    ; load offset
000099a: 43                    ; f32.const
000099b: 00                    ; f32 literal
000099f: 5b                    ; f32.eq
00009a0: 20                    ; get_local
00009a1: 00                    ; local index
00009a2: 2a                    ; f32.load
00009a3: 02                    ; alignment
00009a4: 04                    ; load offset
00009a5: 43                    ; f32.const
00009a6: 00                    ; f32 literal
00009aa: 5b                    ; f32.eq
00009ab: 71                    ; i32.and
00009ac: 41                    ; i32.const
00009ad: 01                    ; i32 literal
00009ae: 46                    ; i32.eq
00009af: 20                    ; get_local
00009b0: 00                    ; local index
00009b1: 2a                    ; f32.load
00009b2: 02                    ; alignment
00009b3: 08                    ; load offset
00009b4: 43                    ; f32.const
00009b5: 00                    ; f32 literal
00009b9: 5b                    ; f32.eq
00009ba: 71                    ; i32.and
00009bb: 41                    ; i32.const
00009bc: 01                    ; i32 literal
00009bd: 46                    ; i32.eq
00009be: 21                    ; set_local
00009bf: 01                    ; local index
00009c0: 20                    ; get_local
00009c1: 01                    ; local index
00009c2: 0f                    ; return
00009c3: 0b                    ; end
 - func body 32 (Vector3_set)
00009c6: 1a                    ; func body size
00009c5: 00                    ; local count
00009c6: 20                    ; get_local
00009c7: 00                    ; local index
00009c8: 20                    ; get_local
00009c9: 01                    ; local index
00009ca: 38                    ; f32.store
00009cb: 02                    ; alignment
00009cc: 00                    ; load offset
00009cd: 20                    ; get_local
00009ce: 00                    ; local index
00009cf: 20                    ; get_local
00009d0: 02                    ; local index
00009d1: 38                    ; f32.store
00009d2: 02                    ; alignment
00009d3: 04                    ; load offset
00009d4: 20                    ; get_local
00009d5: 00                    ; local index
00009d6: 20                    ; get_local
00009d7: 03                    ; local index
00009d8: 38                    ; f32.store
00009d9: 02                    ; alignment
00009da: 08                    ; load offset
00009db: 20                    ; get_local
00009dc: 00                    ; local index
00009dd: 0f                    ; return
00009de: 0b                    ; end
 - func body 33 (Vector3_copy)
00009e1: 23                    ; func body size
00009e0: 00                    ; local count
00009e1: 20                    ; get_local
00009e2: 00                    ; local index
00009e3: 20                    ; get_local
00009e4: 01                    ; local index
00009e5: 2a                    ; f32.load
00009e6: 02                    ; alignment
00009e7: 00                    ; load offset
00009e8: 38                    ; f32.store
00009e9: 02                    ; alignment
00009ea: 00                    ; load offset
00009eb: 20                    ; get_local
00009ec: 00                    ; local index
00009ed: 20                    ; get_local
00009ee: 01                    ; local index
00009ef: 2a                    ; f32.load
00009f0: 02                    ; alignment
00009f1: 04                    ; load offset
00009f2: 38                    ; f32.store
00009f3: 02                    ; alignment
00009f4: 04                    ; load offset
00009f5: 20                    ; get_local
00009f6: 00                    ; local index
00009f7: 20                    ; get_local
00009f8: 01                    ; local index
00009f9: 2a                    ; f32.load
00009fa: 02                    ; alignment
00009fb: 08                    ; load offset
00009fc: 38                    ; f32.store
00009fd: 02                    ; alignment
00009fe: 08                    ; load offset
00009ff: 20                    ; get_local
0000a00: 00                    ; local index
0000a01: 0f                    ; return
0000a02: 0b                    ; end
 - func body 34 (Vector3_clone)
0000a05: 18                    ; func body size
0000a04: 00                    ; local count
0000a05: 41                    ; i32.const
0000a06: 0c                    ; i32 literal
0000a07: 10                    ; call
0000a08: 07                    ; call func index (7)
0000a09: 20                    ; get_local
0000a0a: 00                    ; local index
0000a0b: 2a                    ; f32.load
0000a0c: 02                    ; alignment
0000a0d: 00                    ; load offset
0000a0e: 20                    ; get_local
0000a0f: 00                    ; local index
0000a10: 2a                    ; f32.load
0000a11: 02                    ; alignment
0000a12: 04                    ; load offset
0000a13: 20                    ; get_local
0000a14: 00                    ; local index
0000a15: 2a                    ; f32.load
0000a16: 02                    ; alignment
0000a17: 08                    ; load offset
0000a18: 10                    ; call
0000a19: 23                    ; call func index (35)
0000a1a: 0f                    ; return
0000a1b: 0b                    ; end
 - func body 35 (Vector3_length)
0000a1e: 28                    ; func body size
0000a1d: 00                    ; local count
0000a1e: 20                    ; get_local
0000a1f: 00                    ; local index
0000a20: 2a                    ; f32.load
0000a21: 02                    ; alignment
0000a22: 00                    ; load offset
0000a23: 20                    ; get_local
0000a24: 00                    ; local index
0000a25: 2a                    ; f32.load
0000a26: 02                    ; alignment
0000a27: 00                    ; load offset
0000a28: 94                    ; f32.mul
0000a29: 20                    ; get_local
0000a2a: 00                    ; local index
0000a2b: 2a                    ; f32.load
0000a2c: 02                    ; alignment
0000a2d: 04                    ; load offset
0000a2e: 20                    ; get_local
0000a2f: 00                    ; local index
0000a30: 2a                    ; f32.load
0000a31: 02                    ; alignment
0000a32: 04                    ; load offset
0000a33: 94                    ; f32.mul
0000a34: 92                    ; f32.add
0000a35: 20                    ; get_local
0000a36: 00                    ; local index
0000a37: 2a                    ; f32.load
0000a38: 02                    ; alignment
0000a39: 08                    ; load offset
0000a3a: 20                    ; get_local
0000a3b: 00                    ; local index
0000a3c: 2a                    ; f32.load
0000a3d: 02                    ; alignment
0000a3e: 08                    ; load offset
0000a3f: 94                    ; f32.mul
0000a40: 92                    ; f32.add
0000a41: 10                    ; call
0000a42: 13                    ; call func index (19)
0000a43: 0f                    ; return
0000a44: 0b                    ; end
 - func body 36 (Vector3_lengthN)
0000a47: 69                    ; func body size
0000a46: 06                    ; local count
0000a47: 01                    ; local index
0000a48: 7f                    ; I32
0000a49: 01                    ; local index
0000a4a: 7d                    ; F32
0000a4b: 01                    ; local index
0000a4c: 7d                    ; F32
0000a4d: 01                    ; local index
0000a4e: 7d                    ; F32
0000a4f: 01                    ; local index
0000a50: 7d                    ; F32
0000a51: 01                    ; local index
0000a52: 7d                    ; F32
0000a53: 20                    ; get_local
0000a54: 01                    ; local index
0000a55: 43                    ; f32.const
0000a56: 02                    ; f32 literal
0000a5a: 5b                    ; f32.eq
0000a5b: 04                    ; if
0000016: 40                    ; block_type
0000a5d: 02                    ; block
0000a5e: 40                    ; block_type
0000a5f: 20                    ; get_local
0000a60: 00                    ; local index
0000a61: 10                    ; call
0000a62: 2a                    ; call func index (42)
0000a63: 0f                    ; return
0000a64: 0b                    ; end
0000a65: 0b                    ; end
0000a66: 20                    ; get_local
0000a67: 00                    ; local index
0000a68: 41                    ; i32.const
0000a69: 00                    ; i32 literal
0000a6a: 10                    ; call
0000a6b: 2f                    ; call func index (47)
0000a6c: 21                    ; set_local
0000a6d: 02                    ; local index
0000a6e: 20                    ; get_local
0000a6f: 02                    ; local index
0000a70: 2a                    ; f32.load
0000a71: 02                    ; alignment
0000a72: 00                    ; load offset
0000a73: 20                    ; get_local
0000a74: 01                    ; local index
0000a75: 10                    ; call
0000a76: 14                    ; call func index (20)
0000a77: 21                    ; set_local
0000a78: 03                    ; local index
0000a79: 20                    ; get_local
0000a7a: 02                    ; local index
0000a7b: 2a                    ; f32.load
0000a7c: 02                    ; alignment
0000a7d: 04                    ; load offset
0000a7e: 20                    ; get_local
0000a7f: 01                    ; local index
0000a80: 10                    ; call
0000a81: 14                    ; call func index (20)
0000a82: 21                    ; set_local
0000a83: 04                    ; local index
0000a84: 20                    ; get_local
0000a85: 02                    ; local index
0000a86: 2a                    ; f32.load
0000a87: 02                    ; alignment
0000a88: 08                    ; load offset
0000a89: 20                    ; get_local
0000a8a: 01                    ; local index
0000a8b: 10                    ; call
0000a8c: 14                    ; call func index (20)
0000a8d: 21                    ; set_local
0000a8e: 05                    ; local index
0000a8f: 20                    ; get_local
0000a90: 03                    ; local index
0000a91: 20                    ; get_local
0000a92: 04                    ; local index
0000a93: 92                    ; f32.add
0000a94: 20                    ; get_local
0000a95: 05                    ; local index
0000a96: 92                    ; f32.add
0000a97: 21                    ; set_local
0000a98: 06                    ; local index
0000a99: 20                    ; get_local
0000a9a: 06                    ; local index
0000a9b: 43                    ; f32.const
0000a9c: 01                    ; f32 literal
0000aa0: 20                    ; get_local
0000aa1: 01                    ; local index
0000aa2: 95                    ; f32.div
0000aa3: 10                    ; call
0000aa4: 14                    ; call func index (20)
0000aa5: 21                    ; set_local
0000aa6: 07                    ; local index
0000aa7: 20                    ; get_local
0000aa8: 02                    ; local index
0000aa9: 10                    ; call
0000aaa: 08                    ; call func index (8)
0000aab: 20                    ; get_local
0000aac: 07                    ; local index
0000aad: 0f                    ; return
0000aae: 0b                    ; end
 - func body 37 (Vector3_dot)
0000ab1: 26                    ; func body size
0000ab0: 00                    ; local count
0000ab1: 20                    ; get_local
0000ab2: 00                    ; local index
0000ab3: 2a                    ; f32.load
0000ab4: 02                    ; alignment
0000ab5: 00                    ; load offset
0000ab6: 20                    ; get_local
0000ab7: 01                    ; local index
0000ab8: 2a                    ; f32.load
0000ab9: 02                    ; alignment
0000aba: 00                    ; load offset
0000abb: 94                    ; f32.mul
0000abc: 20                    ; get_local
0000abd: 00                    ; local index
0000abe: 2a                    ; f32.load
0000abf: 02                    ; alignment
0000ac0: 04                    ; load offset
0000ac1: 20                    ; get_local
0000ac2: 01                    ; local index
0000ac3: 2a                    ; f32.load
0000ac4: 02                    ; alignment
0000ac5: 04                    ; load offset
0000ac6: 94                    ; f32.mul
0000ac7: 92                    ; f32.add
0000ac8: 20                    ; get_local
0000ac9: 00                    ; local index
0000aca: 2a                    ; f32.load
0000acb: 02                    ; alignment
0000acc: 08                    ; load offset
0000acd: 20                    ; get_local
0000ace: 01                    ; local index
0000acf: 2a                    ; f32.load
0000ad0: 02                    ; alignment
0000ad1: 08                    ; load offset
0000ad2: 94                    ; f32.mul
0000ad3: 92                    ; f32.add
0000ad4: 0f                    ; return
0000ad5: 0b                    ; end
 - func body 38 (Vector3_cross)
0000ad8: 5d                    ; func body size
0000ad7: 00                    ; local count
0000ad8: 20                    ; get_local
0000ad9: 02                    ; local index
0000ada: 41                    ; i32.const
0000adb: 00                    ; i32 literal
0000adc: 47                    ; i32.ne
0000add: 04                    ; if
0000007: 7f                    ; I32
0000adf: 20                    ; get_local
0000ae0: 02                    ; local index
0000ae1: 05                    ; else
0000ae2: 41                    ; i32.const
0000ae3: 0c                    ; i32 literal
0000ae4: 10                    ; call
0000ae5: 07                    ; call func index (7)
0000ae6: 0b                    ; end
0000ae7: 21                    ; set_local
0000ae8: 02                    ; local index
0000ae9: 20                    ; get_local
0000aea: 02                    ; local index
0000aeb: 20                    ; get_local
0000aec: 00                    ; local index
0000aed: 2a                    ; f32.load
0000aee: 02                    ; alignment
0000aef: 04                    ; load offset
0000af0: 20                    ; get_local
0000af1: 01                    ; local index
0000af2: 2a                    ; f32.load
0000af3: 02                    ; alignment
0000af4: 08                    ; load offset
0000af5: 94                    ; f32.mul
0000af6: 20                    ; get_local
0000af7: 00                    ; local index
0000af8: 2a                    ; f32.load
0000af9: 02                    ; alignment
0000afa: 08                    ; load offset
0000afb: 20                    ; get_local
0000afc: 01                    ; local index
0000afd: 2a                    ; f32.load
0000afe: 02                    ; alignment
0000aff: 04                    ; load offset
0000b00: 94                    ; f32.mul
0000b01: 93                    ; f32.sub
0000b02: 20                    ; get_local
0000b03: 00                    ; local index
0000b04: 2a                    ; f32.load
0000b05: 02                    ; alignment
0000b06: 08                    ; load offset
0000b07: 20                    ; get_local
0000b08: 01                    ; local index
0000b09: 2a                    ; f32.load
0000b0a: 02                    ; alignment
0000b0b: 00                    ; load offset
0000b0c: 94                    ; f32.mul
0000b0d: 20                    ; get_local
0000b0e: 00                    ; local index
0000b0f: 2a                    ; f32.load
0000b10: 02                    ; alignment
0000b11: 00                    ; load offset
0000b12: 20                    ; get_local
0000b13: 01                    ; local index
0000b14: 2a                    ; f32.load
0000b15: 02                    ; alignment
0000b16: 08                    ; load offset
0000b17: 94                    ; f32.mul
0000b18: 93                    ; f32.sub
0000b19: 20                    ; get_local
0000b1a: 00                    ; local index
0000b1b: 2a                    ; f32.load
0000b1c: 02                    ; alignment
0000b1d: 00                    ; load offset
0000b1e: 20                    ; get_local
0000b1f: 01                    ; local index
0000b20: 2a                    ; f32.load
0000b21: 02                    ; alignment
0000b22: 04                    ; load offset
0000b23: 94                    ; f32.mul
0000b24: 20                    ; get_local
0000b25: 00                    ; local index
0000b26: 2a                    ; f32.load
0000b27: 02                    ; alignment
0000b28: 04                    ; load offset
0000b29: 20                    ; get_local
0000b2a: 01                    ; local index
0000b2b: 2a                    ; f32.load
0000b2c: 02                    ; alignment
0000b2d: 00                    ; load offset
0000b2e: 94                    ; f32.mul
0000b2f: 93                    ; f32.sub
0000b30: 10                    ; call
0000b31: 27                    ; call func index (39)
0000b32: 0f                    ; return
0000b33: 0b                    ; end
 - func body 39 (Vector3_normalize)
0000b36: 38                    ; func body size
0000b35: 01                    ; local count
0000b36: 01                    ; local index
0000b37: 7d                    ; F32
0000b38: 20                    ; get_local
0000b39: 01                    ; local index
0000b3a: 41                    ; i32.const
0000b3b: 00                    ; i32 literal
0000b3c: 47                    ; i32.ne
0000b3d: 04                    ; if
0000009: 7f                    ; I32
0000b3f: 20                    ; get_local
0000b40: 01                    ; local index
0000b41: 05                    ; else
0000b42: 41                    ; i32.const
0000b43: 0c                    ; i32 literal
0000b44: 10                    ; call
0000b45: 07                    ; call func index (7)
0000b46: 0b                    ; end
0000b47: 21                    ; set_local
0000b48: 01                    ; local index
0000b49: 20                    ; get_local
0000b4a: 00                    ; local index
0000b4b: 10                    ; call
0000b4c: 2a                    ; call func index (42)
0000b4d: 21                    ; set_local
0000b4e: 02                    ; local index
0000b4f: 20                    ; get_local
0000b50: 01                    ; local index
0000b51: 20                    ; get_local
0000b52: 00                    ; local index
0000b53: 2a                    ; f32.load
0000b54: 02                    ; alignment
0000b55: 00                    ; load offset
0000b56: 20                    ; get_local
0000b57: 02                    ; local index
0000b58: 95                    ; f32.div
0000b59: 20                    ; get_local
0000b5a: 00                    ; local index
0000b5b: 2a                    ; f32.load
0000b5c: 02                    ; alignment
0000b5d: 04                    ; load offset
0000b5e: 20                    ; get_local
0000b5f: 02                    ; local index
0000b60: 95                    ; f32.div
0000b61: 20                    ; get_local
0000b62: 00                    ; local index
0000b63: 2a                    ; f32.load
0000b64: 02                    ; alignment
0000b65: 08                    ; load offset
0000b66: 20                    ; get_local
0000b67: 02                    ; local index
0000b68: 95                    ; f32.div
0000b69: 10                    ; call
0000b6a: 27                    ; call func index (39)
0000b6b: 0f                    ; return
0000b6c: 0b                    ; end
 - func body 40 (Vector3_abs)
0000b6f: 2d                    ; func body size
0000b6e: 00                    ; local count
0000b6f: 20                    ; get_local
0000b70: 01                    ; local index
0000b71: 41                    ; i32.const
0000b72: 00                    ; i32 literal
0000b73: 47                    ; i32.ne
0000b74: 04                    ; if
0000007: 7f                    ; I32
0000b76: 20                    ; get_local
0000b77: 01                    ; local index
0000b78: 05                    ; else
0000b79: 41                    ; i32.const
0000b7a: 0c                    ; i32 literal
0000b7b: 10                    ; call
0000b7c: 07                    ; call func index (7)
0000b7d: 0b                    ; end
0000b7e: 21                    ; set_local
0000b7f: 01                    ; local index
0000b80: 20                    ; get_local
0000b81: 01                    ; local index
0000b82: 20                    ; get_local
0000b83: 00                    ; local index
0000b84: 2a                    ; f32.load
0000b85: 02                    ; alignment
0000b86: 00                    ; load offset
0000b87: 10                    ; call
0000b88: 12                    ; call func index (18)
0000b89: 20                    ; get_local
0000b8a: 00                    ; local index
0000b8b: 2a                    ; f32.load
0000b8c: 02                    ; alignment
0000b8d: 04                    ; load offset
0000b8e: 10                    ; call
0000b8f: 12                    ; call func index (18)
0000b90: 20                    ; get_local
0000b91: 00                    ; local index
0000b92: 2a                    ; f32.load
0000b93: 02                    ; alignment
0000b94: 08                    ; load offset
0000b95: 10                    ; call
0000b96: 12                    ; call func index (18)
0000b97: 10                    ; call
0000b98: 27                    ; call func index (39)
0000b99: 0f                    ; return
0000b9a: 0b                    ; end
 - func body 41 (Vector3_add)
0000b9d: 39                    ; func body size
0000b9c: 00                    ; local count
0000b9d: 20                    ; get_local
0000b9e: 02                    ; local index
0000b9f: 41                    ; i32.const
0000ba0: 00                    ; i32 literal
0000ba1: 47                    ; i32.ne
0000ba2: 04                    ; if
0000007: 7f                    ; I32
0000ba4: 20                    ; get_local
0000ba5: 02                    ; local index
0000ba6: 05                    ; else
0000ba7: 41                    ; i32.const
0000ba8: 0c                    ; i32 literal
0000ba9: 10                    ; call
0000baa: 07                    ; call func index (7)
0000bab: 0b                    ; end
0000bac: 21                    ; set_local
0000bad: 02                    ; local index
0000bae: 20                    ; get_local
0000baf: 02                    ; local index
0000bb0: 20                    ; get_local
0000bb1: 00                    ; local index
0000bb2: 2a                    ; f32.load
0000bb3: 02                    ; alignment
0000bb4: 00                    ; load offset
0000bb5: 20                    ; get_local
0000bb6: 01                    ; local index
0000bb7: 2a                    ; f32.load
0000bb8: 02                    ; alignment
0000bb9: 00                    ; load offset
0000bba: 92                    ; f32.add
0000bbb: 20                    ; get_local
0000bbc: 00                    ; local index
0000bbd: 2a                    ; f32.load
0000bbe: 02                    ; alignment
0000bbf: 04                    ; load offset
0000bc0: 20                    ; get_local
0000bc1: 01                    ; local index
0000bc2: 2a                    ; f32.load
0000bc3: 02                    ; alignment
0000bc4: 04                    ; load offset
0000bc5: 92                    ; f32.add
0000bc6: 20                    ; get_local
0000bc7: 00                    ; local index
0000bc8: 2a                    ; f32.load
0000bc9: 02                    ; alignment
0000bca: 08                    ; load offset
0000bcb: 20                    ; get_local
0000bcc: 01                    ; local index
0000bcd: 2a                    ; f32.load
0000bce: 02                    ; alignment
0000bcf: 08                    ; load offset
0000bd0: 92                    ; f32.add
0000bd1: 10                    ; call
0000bd2: 27                    ; call func index (39)
0000bd3: 0f                    ; return
0000bd4: 0b                    ; end
 - func body 42 (Vector3_sub)
0000bd7: 39                    ; func body size
0000bd6: 00                    ; local count
0000bd7: 20                    ; get_local
0000bd8: 02                    ; local index
0000bd9: 41                    ; i32.const
0000bda: 00                    ; i32 literal
0000bdb: 47                    ; i32.ne
0000bdc: 04                    ; if
0000007: 7f                    ; I32
0000bde: 20                    ; get_local
0000bdf: 02                    ; local index
0000be0: 05                    ; else
0000be1: 41                    ; i32.const
0000be2: 0c                    ; i32 literal
0000be3: 10                    ; call
0000be4: 07                    ; call func index (7)
0000be5: 0b                    ; end
0000be6: 21                    ; set_local
0000be7: 02                    ; local index
0000be8: 20                    ; get_local
0000be9: 02                    ; local index
0000bea: 20                    ; get_local
0000beb: 00                    ; local index
0000bec: 2a                    ; f32.load
0000bed: 02                    ; alignment
0000bee: 00                    ; load offset
0000bef: 20                    ; get_local
0000bf0: 01                    ; local index
0000bf1: 2a                    ; f32.load
0000bf2: 02                    ; alignment
0000bf3: 00                    ; load offset
0000bf4: 93                    ; f32.sub
0000bf5: 20                    ; get_local
0000bf6: 00                    ; local index
0000bf7: 2a                    ; f32.load
0000bf8: 02                    ; alignment
0000bf9: 04                    ; load offset
0000bfa: 20                    ; get_local
0000bfb: 01                    ; local index
0000bfc: 2a                    ; f32.load
0000bfd: 02                    ; alignment
0000bfe: 04                    ; load offset
0000bff: 93                    ; f32.sub
0000c00: 20                    ; get_local
0000c01: 00                    ; local index
0000c02: 2a                    ; f32.load
0000c03: 02                    ; alignment
0000c04: 08                    ; load offset
0000c05: 20                    ; get_local
0000c06: 01                    ; local index
0000c07: 2a                    ; f32.load
0000c08: 02                    ; alignment
0000c09: 08                    ; load offset
0000c0a: 93                    ; f32.sub
0000c0b: 10                    ; call
0000c0c: 27                    ; call func index (39)
0000c0d: 0f                    ; return
0000c0e: 0b                    ; end
 - func body 43 (Vector3_mul)
0000c11: 39                    ; func body size
0000c10: 00                    ; local count
0000c11: 20                    ; get_local
0000c12: 02                    ; local index
0000c13: 41                    ; i32.const
0000c14: 00                    ; i32 literal
0000c15: 47                    ; i32.ne
0000c16: 04                    ; if
0000007: 7f                    ; I32
0000c18: 20                    ; get_local
0000c19: 02                    ; local index
0000c1a: 05                    ; else
0000c1b: 41                    ; i32.const
0000c1c: 0c                    ; i32 literal
0000c1d: 10                    ; call
0000c1e: 07                    ; call func index (7)
0000c1f: 0b                    ; end
0000c20: 21                    ; set_local
0000c21: 02                    ; local index
0000c22: 20                    ; get_local
0000c23: 02                    ; local index
0000c24: 20                    ; get_local
0000c25: 00                    ; local index
0000c26: 2a                    ; f32.load
0000c27: 02                    ; alignment
0000c28: 00                    ; load offset
0000c29: 20                    ; get_local
0000c2a: 01                    ; local index
0000c2b: 2a                    ; f32.load
0000c2c: 02                    ; alignment
0000c2d: 00                    ; load offset
0000c2e: 94                    ; f32.mul
0000c2f: 20                    ; get_local
0000c30: 00                    ; local index
0000c31: 2a                    ; f32.load
0000c32: 02                    ; alignment
0000c33: 04                    ; load offset
0000c34: 20                    ; get_local
0000c35: 01                    ; local index
0000c36: 2a                    ; f32.load
0000c37: 02                    ; alignment
0000c38: 04                    ; load offset
0000c39: 94                    ; f32.mul
0000c3a: 20                    ; get_local
0000c3b: 00                    ; local index
0000c3c: 2a                    ; f32.load
0000c3d: 02                    ; alignment
0000c3e: 08                    ; load offset
0000c3f: 20                    ; get_local
0000c40: 01                    ; local index
0000c41: 2a                    ; f32.load
0000c42: 02                    ; alignment
0000c43: 08                    ; load offset
0000c44: 94                    ; f32.mul
0000c45: 10                    ; call
0000c46: 27                    ; call func index (39)
0000c47: 0f                    ; return
0000c48: 0b                    ; end
 - func body 44 (Vector3_div)
0000c4b: 39                    ; func body size
0000c4a: 00                    ; local count
0000c4b: 20                    ; get_local
0000c4c: 02                    ; local index
0000c4d: 41                    ; i32.const
0000c4e: 00                    ; i32 literal
0000c4f: 47                    ; i32.ne
0000c50: 04                    ; if
0000007: 7f                    ; I32
0000c52: 20                    ; get_local
0000c53: 02                    ; local index
0000c54: 05                    ; else
0000c55: 41                    ; i32.const
0000c56: 0c                    ; i32 literal
0000c57: 10                    ; call
0000c58: 07                    ; call func index (7)
0000c59: 0b                    ; end
0000c5a: 21                    ; set_local
0000c5b: 02                    ; local index
0000c5c: 20                    ; get_local
0000c5d: 02                    ; local index
0000c5e: 20                    ; get_local
0000c5f: 00                    ; local index
0000c60: 2a                    ; f32.load
0000c61: 02                    ; alignment
0000c62: 00                    ; load offset
0000c63: 20                    ; get_local
0000c64: 01                    ; local index
0000c65: 2a                    ; f32.load
0000c66: 02                    ; alignment
0000c67: 00                    ; load offset
0000c68: 95                    ; f32.div
0000c69: 20                    ; get_local
0000c6a: 00                    ; local index
0000c6b: 2a                    ; f32.load
0000c6c: 02                    ; alignment
0000c6d: 04                    ; load offset
0000c6e: 20                    ; get_local
0000c6f: 01                    ; local index
0000c70: 2a                    ; f32.load
0000c71: 02                    ; alignment
0000c72: 04                    ; load offset
0000c73: 95                    ; f32.div
0000c74: 20                    ; get_local
0000c75: 00                    ; local index
0000c76: 2a                    ; f32.load
0000c77: 02                    ; alignment
0000c78: 08                    ; load offset
0000c79: 20                    ; get_local
0000c7a: 01                    ; local index
0000c7b: 2a                    ; f32.load
0000c7c: 02                    ; alignment
0000c7d: 08                    ; load offset
0000c7e: 95                    ; f32.div
0000c7f: 10                    ; call
0000c80: 27                    ; call func index (39)
0000c81: 0f                    ; return
0000c82: 0b                    ; end
 - func body 45 (Vector3_mod)
0000c85: 63                    ; func body size
0000c84: 00                    ; local count
0000c85: 20                    ; get_local
0000c86: 02                    ; local index
0000c87: 41                    ; i32.const
0000c88: 00                    ; i32 literal
0000c89: 47                    ; i32.ne
0000c8a: 04                    ; if
0000007: 7f                    ; I32
0000c8c: 20                    ; get_local
0000c8d: 02                    ; local index
0000c8e: 05                    ; else
0000c8f: 41                    ; i32.const
0000c90: 0c                    ; i32 literal
0000c91: 10                    ; call
0000c92: 07                    ; call func index (7)
0000c93: 0b                    ; end
0000c94: 21                    ; set_local
0000c95: 02                    ; local index
0000c96: 20                    ; get_local
0000c97: 02                    ; local index
0000c98: 20                    ; get_local
0000c99: 00                    ; local index
0000c9a: 2a                    ; f32.load
0000c9b: 02                    ; alignment
0000c9c: 00                    ; load offset
0000c9d: 20                    ; get_local
0000c9e: 01                    ; local index
0000c9f: 2a                    ; f32.load
0000ca0: 02                    ; alignment
0000ca1: 00                    ; load offset
0000ca2: 20                    ; get_local
0000ca3: 00                    ; local index
0000ca4: 2a                    ; f32.load
0000ca5: 02                    ; alignment
0000ca6: 00                    ; load offset
0000ca7: 20                    ; get_local
0000ca8: 01                    ; local index
0000ca9: 2a                    ; f32.load
0000caa: 02                    ; alignment
0000cab: 00                    ; load offset
0000cac: 95                    ; f32.div
0000cad: 10                    ; call
0000cae: 02                    ; call func index (2)
0000caf: 94                    ; f32.mul
0000cb0: 93                    ; f32.sub
0000cb1: 20                    ; get_local
0000cb2: 00                    ; local index
0000cb3: 2a                    ; f32.load
0000cb4: 02                    ; alignment
0000cb5: 04                    ; load offset
0000cb6: 20                    ; get_local
0000cb7: 01                    ; local index
0000cb8: 2a                    ; f32.load
0000cb9: 02                    ; alignment
0000cba: 04                    ; load offset
0000cbb: 20                    ; get_local
0000cbc: 00                    ; local index
0000cbd: 2a                    ; f32.load
0000cbe: 02                    ; alignment
0000cbf: 04                    ; load offset
0000cc0: 20                    ; get_local
0000cc1: 01                    ; local index
0000cc2: 2a                    ; f32.load
0000cc3: 02                    ; alignment
0000cc4: 04                    ; load offset
0000cc5: 95                    ; f32.div
0000cc6: 10                    ; call
0000cc7: 02                    ; call func index (2)
0000cc8: 94                    ; f32.mul
0000cc9: 93                    ; f32.sub
0000cca: 20                    ; get_local
0000ccb: 00                    ; local index
0000ccc: 2a                    ; f32.load
0000ccd: 02                    ; alignment
0000cce: 08                    ; load offset
0000ccf: 20                    ; get_local
0000cd0: 01                    ; local index
0000cd1: 2a                    ; f32.load
0000cd2: 02                    ; alignment
0000cd3: 08                    ; load offset
0000cd4: 20                    ; get_local
0000cd5: 00                    ; local index
0000cd6: 2a                    ; f32.load
0000cd7: 02                    ; alignment
0000cd8: 08                    ; load offset
0000cd9: 20                    ; get_local
0000cda: 01                    ; local index
0000cdb: 2a                    ; f32.load
0000cdc: 02                    ; alignment
0000cdd: 08                    ; load offset
0000cde: 95                    ; f32.div
0000cdf: 10                    ; call
0000ce0: 02                    ; call func index (2)
0000ce1: 94                    ; f32.mul
0000ce2: 93                    ; f32.sub
0000ce3: 10                    ; call
0000ce4: 27                    ; call func index (39)
0000ce5: 0f                    ; return
0000ce6: 0b                    ; end
 - func body 46 (Vector3_addScalar)
0000ce9: 30                    ; func body size
0000ce8: 00                    ; local count
0000ce9: 20                    ; get_local
0000cea: 02                    ; local index
0000ceb: 41                    ; i32.const
0000cec: 00                    ; i32 literal
0000ced: 47                    ; i32.ne
0000cee: 04                    ; if
0000007: 7f                    ; I32
0000cf0: 20                    ; get_local
0000cf1: 02                    ; local index
0000cf2: 05                    ; else
0000cf3: 41                    ; i32.const
0000cf4: 0c                    ; i32 literal
0000cf5: 10                    ; call
0000cf6: 07                    ; call func index (7)
0000cf7: 0b                    ; end
0000cf8: 21                    ; set_local
0000cf9: 02                    ; local index
0000cfa: 20                    ; get_local
0000cfb: 02                    ; local index
0000cfc: 20                    ; get_local
0000cfd: 00                    ; local index
0000cfe: 2a                    ; f32.load
0000cff: 02                    ; alignment
0000d00: 00                    ; load offset
0000d01: 20                    ; get_local
0000d02: 01                    ; local index
0000d03: 92                    ; f32.add
0000d04: 20                    ; get_local
0000d05: 00                    ; local index
0000d06: 2a                    ; f32.load
0000d07: 02                    ; alignment
0000d08: 04                    ; load offset
0000d09: 20                    ; get_local
0000d0a: 01                    ; local index
0000d0b: 92                    ; f32.add
0000d0c: 20                    ; get_local
0000d0d: 00                    ; local index
0000d0e: 2a                    ; f32.load
0000d0f: 02                    ; alignment
0000d10: 08                    ; load offset
0000d11: 20                    ; get_local
0000d12: 01                    ; local index
0000d13: 92                    ; f32.add
0000d14: 10                    ; call
0000d15: 27                    ; call func index (39)
0000d16: 0f                    ; return
0000d17: 0b                    ; end
 - func body 47 (Vector3_subScalar)
0000d1a: 30                    ; func body size
0000d19: 00                    ; local count
0000d1a: 20                    ; get_local
0000d1b: 02                    ; local index
0000d1c: 41                    ; i32.const
0000d1d: 00                    ; i32 literal
0000d1e: 47                    ; i32.ne
0000d1f: 04                    ; if
0000007: 7f                    ; I32
0000d21: 20                    ; get_local
0000d22: 02                    ; local index
0000d23: 05                    ; else
0000d24: 41                    ; i32.const
0000d25: 0c                    ; i32 literal
0000d26: 10                    ; call
0000d27: 07                    ; call func index (7)
0000d28: 0b                    ; end
0000d29: 21                    ; set_local
0000d2a: 02                    ; local index
0000d2b: 20                    ; get_local
0000d2c: 02                    ; local index
0000d2d: 20                    ; get_local
0000d2e: 00                    ; local index
0000d2f: 2a                    ; f32.load
0000d30: 02                    ; alignment
0000d31: 00                    ; load offset
0000d32: 20                    ; get_local
0000d33: 01                    ; local index
0000d34: 93                    ; f32.sub
0000d35: 20                    ; get_local
0000d36: 00                    ; local index
0000d37: 2a                    ; f32.load
0000d38: 02                    ; alignment
0000d39: 04                    ; load offset
0000d3a: 20                    ; get_local
0000d3b: 01                    ; local index
0000d3c: 93                    ; f32.sub
0000d3d: 20                    ; get_local
0000d3e: 00                    ; local index
0000d3f: 2a                    ; f32.load
0000d40: 02                    ; alignment
0000d41: 08                    ; load offset
0000d42: 20                    ; get_local
0000d43: 01                    ; local index
0000d44: 93                    ; f32.sub
0000d45: 10                    ; call
0000d46: 27                    ; call func index (39)
0000d47: 0f                    ; return
0000d48: 0b                    ; end
 - func body 48 (Vector3_mulScalar)
0000d4b: 30                    ; func body size
0000d4a: 00                    ; local count
0000d4b: 20                    ; get_local
0000d4c: 02                    ; local index
0000d4d: 41                    ; i32.const
0000d4e: 00                    ; i32 literal
0000d4f: 47                    ; i32.ne
0000d50: 04                    ; if
0000007: 7f                    ; I32
0000d52: 20                    ; get_local
0000d53: 02                    ; local index
0000d54: 05                    ; else
0000d55: 41                    ; i32.const
0000d56: 0c                    ; i32 literal
0000d57: 10                    ; call
0000d58: 07                    ; call func index (7)
0000d59: 0b                    ; end
0000d5a: 21                    ; set_local
0000d5b: 02                    ; local index
0000d5c: 20                    ; get_local
0000d5d: 02                    ; local index
0000d5e: 20                    ; get_local
0000d5f: 00                    ; local index
0000d60: 2a                    ; f32.load
0000d61: 02                    ; alignment
0000d62: 00                    ; load offset
0000d63: 20                    ; get_local
0000d64: 01                    ; local index
0000d65: 94                    ; f32.mul
0000d66: 20                    ; get_local
0000d67: 00                    ; local index
0000d68: 2a                    ; f32.load
0000d69: 02                    ; alignment
0000d6a: 04                    ; load offset
0000d6b: 20                    ; get_local
0000d6c: 01                    ; local index
0000d6d: 94                    ; f32.mul
0000d6e: 20                    ; get_local
0000d6f: 00                    ; local index
0000d70: 2a                    ; f32.load
0000d71: 02                    ; alignment
0000d72: 08                    ; load offset
0000d73: 20                    ; get_local
0000d74: 01                    ; local index
0000d75: 94                    ; f32.mul
0000d76: 10                    ; call
0000d77: 27                    ; call func index (39)
0000d78: 0f                    ; return
0000d79: 0b                    ; end
 - func body 49 (Vector3_divScalar)
0000d7c: 30                    ; func body size
0000d7b: 00                    ; local count
0000d7c: 20                    ; get_local
0000d7d: 02                    ; local index
0000d7e: 41                    ; i32.const
0000d7f: 00                    ; i32 literal
0000d80: 47                    ; i32.ne
0000d81: 04                    ; if
0000007: 7f                    ; I32
0000d83: 20                    ; get_local
0000d84: 02                    ; local index
0000d85: 05                    ; else
0000d86: 41                    ; i32.const
0000d87: 0c                    ; i32 literal
0000d88: 10                    ; call
0000d89: 07                    ; call func index (7)
0000d8a: 0b                    ; end
0000d8b: 21                    ; set_local
0000d8c: 02                    ; local index
0000d8d: 20                    ; get_local
0000d8e: 02                    ; local index
0000d8f: 20                    ; get_local
0000d90: 00                    ; local index
0000d91: 2a                    ; f32.load
0000d92: 02                    ; alignment
0000d93: 00                    ; load offset
0000d94: 20                    ; get_local
0000d95: 01                    ; local index
0000d96: 95                    ; f32.div
0000d97: 20                    ; get_local
0000d98: 00                    ; local index
0000d99: 2a                    ; f32.load
0000d9a: 02                    ; alignment
0000d9b: 04                    ; load offset
0000d9c: 20                    ; get_local
0000d9d: 01                    ; local index
0000d9e: 95                    ; f32.div
0000d9f: 20                    ; get_local
0000da0: 00                    ; local index
0000da1: 2a                    ; f32.load
0000da2: 02                    ; alignment
0000da3: 08                    ; load offset
0000da4: 20                    ; get_local
0000da5: 01                    ; local index
0000da6: 95                    ; f32.div
0000da7: 10                    ; call
0000da8: 27                    ; call func index (39)
0000da9: 0f                    ; return
0000daa: 0b                    ; end
 - func body 50 (Vector3_min)
0000dad: 3c                    ; func body size
0000dac: 00                    ; local count
0000dad: 20                    ; get_local
0000dae: 02                    ; local index
0000daf: 41                    ; i32.const
0000db0: 00                    ; i32 literal
0000db1: 47                    ; i32.ne
0000db2: 04                    ; if
0000007: 7f                    ; I32
0000db4: 20                    ; get_local
0000db5: 02                    ; local index
0000db6: 05                    ; else
0000db7: 41                    ; i32.const
0000db8: 0c                    ; i32 literal
0000db9: 10                    ; call
0000dba: 07                    ; call func index (7)
0000dbb: 0b                    ; end
0000dbc: 21                    ; set_local
0000dbd: 02                    ; local index
0000dbe: 20                    ; get_local
0000dbf: 02                    ; local index
0000dc0: 20                    ; get_local
0000dc1: 00                    ; local index
0000dc2: 2a                    ; f32.load
0000dc3: 02                    ; alignment
0000dc4: 00                    ; load offset
0000dc5: 20                    ; get_local
0000dc6: 01                    ; local index
0000dc7: 2a                    ; f32.load
0000dc8: 02                    ; alignment
0000dc9: 00                    ; load offset
0000dca: 10                    ; call
0000dcb: 15                    ; call func index (21)
0000dcc: 20                    ; get_local
0000dcd: 00                    ; local index
0000dce: 2a                    ; f32.load
0000dcf: 02                    ; alignment
0000dd0: 04                    ; load offset
0000dd1: 20                    ; get_local
0000dd2: 01                    ; local index
0000dd3: 2a                    ; f32.load
0000dd4: 02                    ; alignment
0000dd5: 04                    ; load offset
0000dd6: 10                    ; call
0000dd7: 15                    ; call func index (21)
0000dd8: 20                    ; get_local
0000dd9: 00                    ; local index
0000dda: 2a                    ; f32.load
0000ddb: 02                    ; alignment
0000ddc: 08                    ; load offset
0000ddd: 20                    ; get_local
0000dde: 01                    ; local index
0000ddf: 2a                    ; f32.load
0000de0: 02                    ; alignment
0000de1: 08                    ; load offset
0000de2: 10                    ; call
0000de3: 15                    ; call func index (21)
0000de4: 10                    ; call
0000de5: 27                    ; call func index (39)
0000de6: 0f                    ; return
0000de7: 0b                    ; end
 - func body 51 (Vector3_max)
0000dea: 3c                    ; func body size
0000de9: 00                    ; local count
0000dea: 20                    ; get_local
0000deb: 02                    ; local index
0000dec: 41                    ; i32.const
0000ded: 00                    ; i32 literal
0000dee: 47                    ; i32.ne
0000def: 04                    ; if
0000007: 7f                    ; I32
0000df1: 20                    ; get_local
0000df2: 02                    ; local index
0000df3: 05                    ; else
0000df4: 41                    ; i32.const
0000df5: 0c                    ; i32 literal
0000df6: 10                    ; call
0000df7: 07                    ; call func index (7)
0000df8: 0b                    ; end
0000df9: 21                    ; set_local
0000dfa: 02                    ; local index
0000dfb: 20                    ; get_local
0000dfc: 02                    ; local index
0000dfd: 20                    ; get_local
0000dfe: 00                    ; local index
0000dff: 2a                    ; f32.load
0000e00: 02                    ; alignment
0000e01: 00                    ; load offset
0000e02: 20                    ; get_local
0000e03: 01                    ; local index
0000e04: 2a                    ; f32.load
0000e05: 02                    ; alignment
0000e06: 00                    ; load offset
0000e07: 10                    ; call
0000e08: 16                    ; call func index (22)
0000e09: 20                    ; get_local
0000e0a: 00                    ; local index
0000e0b: 2a                    ; f32.load
0000e0c: 02                    ; alignment
0000e0d: 04                    ; load offset
0000e0e: 20                    ; get_local
0000e0f: 01                    ; local index
0000e10: 2a                    ; f32.load
0000e11: 02                    ; alignment
0000e12: 04                    ; load offset
0000e13: 10                    ; call
0000e14: 16                    ; call func index (22)
0000e15: 20                    ; get_local
0000e16: 00                    ; local index
0000e17: 2a                    ; f32.load
0000e18: 02                    ; alignment
0000e19: 08                    ; load offset
0000e1a: 20                    ; get_local
0000e1b: 01                    ; local index
0000e1c: 2a                    ; f32.load
0000e1d: 02                    ; alignment
0000e1e: 08                    ; load offset
0000e1f: 10                    ; call
0000e20: 16                    ; call func index (22)
0000e21: 10                    ; call
0000e22: 27                    ; call func index (39)
0000e23: 0f                    ; return
0000e24: 0b                    ; end
 - func body 52 (Vector3_minAxis)
0000e28: 9c                    ; func body size
0000e26: 03                    ; local count
0000e27: 01                    ; local index
0000e28: 7d                    ; F32
0000e29: 01                    ; local index
0000e2a: 7d                    ; F32
0000e2b: 01                    ; local index
0000e2c: 7d                    ; F32
0000e2d: 20                    ; get_local
0000e2e: 02                    ; local index
0000e2f: 41                    ; i32.const
0000e30: 00                    ; i32 literal
0000e31: 47                    ; i32.ne
0000e32: 04                    ; if
000000d: 7f                    ; I32
0000e34: 20                    ; get_local
0000e35: 02                    ; local index
0000e36: 05                    ; else
0000e37: 41                    ; i32.const
0000e38: 0c                    ; i32 literal
0000e39: 10                    ; call
0000e3a: 07                    ; call func index (7)
0000e3b: 0b                    ; end
0000e3c: 21                    ; set_local
0000e3d: 02                    ; local index
0000e3e: 20                    ; get_local
0000e3f: 00                    ; local index
0000e40: 2a                    ; f32.load
0000e41: 02                    ; alignment
0000e42: 00                    ; load offset
0000e43: 10                    ; call
0000e44: 12                    ; call func index (18)
0000e45: 21                    ; set_local
0000e46: 03                    ; local index
0000e47: 20                    ; get_local
0000e48: 00                    ; local index
0000e49: 2a                    ; f32.load
0000e4a: 02                    ; alignment
0000e4b: 04                    ; load offset
0000e4c: 10                    ; call
0000e4d: 12                    ; call func index (18)
0000e4e: 21                    ; set_local
0000e4f: 04                    ; local index
0000e50: 20                    ; get_local
0000e51: 00                    ; local index
0000e52: 2a                    ; f32.load
0000e53: 02                    ; alignment
0000e54: 08                    ; load offset
0000e55: 10                    ; call
0000e56: 12                    ; call func index (18)
0000e57: 21                    ; set_local
0000e58: 05                    ; local index
0000e59: 20                    ; get_local
0000e5a: 03                    ; local index
0000e5b: 20                    ; get_local
0000e5c: 04                    ; local index
0000e5d: 5f                    ; f32.le
0000e5e: 20                    ; get_local
0000e5f: 03                    ; local index
0000e60: 20                    ; get_local
0000e61: 05                    ; local index
0000e62: 5f                    ; f32.le
0000e63: 71                    ; i32.and
0000e64: 41                    ; i32.const
0000e65: 01                    ; i32 literal
0000e66: 46                    ; i32.eq
0000e67: 04                    ; if
0000042: 40                    ; block_type
0000e69: 02                    ; block
0000e6a: 40                    ; block_type
0000e6b: 20                    ; get_local
0000e6c: 02                    ; local index
0000e6d: 43                    ; f32.const
0000e6e: 01                    ; f32 literal
0000e72: 43                    ; f32.const
0000e73: 00                    ; f32 literal
0000e77: 43                    ; f32.const
0000e78: 00                    ; f32 literal
0000e7c: 10                    ; call
0000e7d: 27                    ; call func index (39)
0000e7e: 0f                    ; return
0000e7f: 0b                    ; end
0000e80: 05                    ; else
0000e81: 02                    ; block
0000e82: 40                    ; block_type
0000e83: 20                    ; get_local
0000e84: 04                    ; local index
0000e85: 20                    ; get_local
0000e86: 03                    ; local index
0000e87: 5f                    ; f32.le
0000e88: 20                    ; get_local
0000e89: 04                    ; local index
0000e8a: 20                    ; get_local
0000e8b: 05                    ; local index
0000e8c: 5f                    ; f32.le
0000e8d: 71                    ; i32.and
0000e8e: 41                    ; i32.const
0000e8f: 01                    ; i32 literal
0000e90: 46                    ; i32.eq
0000e91: 04                    ; if
000006c: 40                    ; block_type
0000e93: 02                    ; block
0000e94: 40                    ; block_type
0000e95: 20                    ; get_local
0000e96: 02                    ; local index
0000e97: 43                    ; f32.const
0000e98: 00                    ; f32 literal
0000e9c: 43                    ; f32.const
0000e9d: 01                    ; f32 literal
0000ea1: 43                    ; f32.const
0000ea2: 00                    ; f32 literal
0000ea6: 10                    ; call
0000ea7: 27                    ; call func index (39)
0000ea8: 0f                    ; return
0000ea9: 0b                    ; end
0000eaa: 0b                    ; end
0000eab: 0b                    ; end
0000eac: 0b                    ; end
0000ead: 20                    ; get_local
0000eae: 02                    ; local index
0000eaf: 43                    ; f32.const
0000eb0: 00                    ; f32 literal
0000eb4: 43                    ; f32.const
0000eb5: 00                    ; f32 literal
0000eb9: 43                    ; f32.const
0000eba: 01                    ; f32 literal
0000ebe: 10                    ; call
0000ebf: 27                    ; call func index (39)
0000ec0: 0f                    ; return
0000ec1: 0b                    ; end
 - func body 53 (Vector3_minComponent)
0000ec5: 16                    ; func body size
0000ec4: 00                    ; local count
0000ec5: 20                    ; get_local
0000ec6: 00                    ; local index
0000ec7: 2a                    ; f32.load
0000ec8: 02                    ; alignment
0000ec9: 00                    ; load offset
0000eca: 20                    ; get_local
0000ecb: 00                    ; local index
0000ecc: 2a                    ; f32.load
0000ecd: 02                    ; alignment
0000ece: 04                    ; load offset
0000ecf: 10                    ; call
0000ed0: 15                    ; call func index (21)
0000ed1: 20                    ; get_local
0000ed2: 00                    ; local index
0000ed3: 2a                    ; f32.load
0000ed4: 02                    ; alignment
0000ed5: 08                    ; load offset
0000ed6: 10                    ; call
0000ed7: 15                    ; call func index (21)
0000ed8: 0f                    ; return
0000ed9: 0b                    ; end
 - func body 54 (Vector3_maxComponent)
0000edc: 16                    ; func body size
0000edb: 00                    ; local count
0000edc: 20                    ; get_local
0000edd: 00                    ; local index
0000ede: 2a                    ; f32.load
0000edf: 02                    ; alignment
0000ee0: 00                    ; load offset
0000ee1: 20                    ; get_local
0000ee2: 00                    ; local index
0000ee3: 2a                    ; f32.load
0000ee4: 02                    ; alignment
0000ee5: 04                    ; load offset
0000ee6: 10                    ; call
0000ee7: 16                    ; call func index (22)
0000ee8: 20                    ; get_local
0000ee9: 00                    ; local index
0000eea: 2a                    ; f32.load
0000eeb: 02                    ; alignment
0000eec: 08                    ; load offset
0000eed: 10                    ; call
0000eee: 16                    ; call func index (22)
0000eef: 0f                    ; return
0000ef0: 0b                    ; end
 - func body 55 (Vector3_reflect)
0000ef3: 1f                    ; func body size
0000ef2: 00                    ; local count
0000ef3: 20                    ; get_local
0000ef4: 00                    ; local index
0000ef5: 43                    ; f32.const
0000ef6: 02                    ; f32 literal
0000efa: 20                    ; get_local
0000efb: 00                    ; local index
0000efc: 20                    ; get_local
0000efd: 01                    ; local index
0000efe: 10                    ; call
0000eff: 2c                    ; call func index (44)
0000f00: 94                    ; f32.mul
0000f01: 20                    ; get_local
0000f02: 02                    ; local index
0000f03: 10                    ; call
0000f04: 37                    ; call func index (55)
0000f05: 21                    ; set_local
0000f06: 02                    ; local index
0000f07: 20                    ; get_local
0000f08: 01                    ; local index
0000f09: 20                    ; get_local
0000f0a: 02                    ; local index
0000f0b: 20                    ; get_local
0000f0c: 02                    ; local index
0000f0d: 10                    ; call
0000f0e: 31                    ; call func index (49)
0000f0f: 0f                    ; return
0000f10: 0b                    ; end
 - func body 56 (Vector3_refract)
0000f14: 9e                    ; func body size
0000f12: 05                    ; local count
0000f13: 01                    ; local index
0000f14: 7d                    ; F32
0000f15: 01                    ; local index
0000f16: 7d                    ; F32
0000f17: 01                    ; local index
0000f18: 7d                    ; F32
0000f19: 01                    ; local index
0000f1a: 7d                    ; F32
0000f1b: 01                    ; local index
0000f1c: 7f                    ; I32
0000f1d: 20                    ; get_local
0000f1e: 04                    ; local index
0000f1f: 41                    ; i32.const
0000f20: 00                    ; i32 literal
0000f21: 47                    ; i32.ne
0000f22: 04                    ; if
0000011: 7f                    ; I32
0000f24: 20                    ; get_local
0000f25: 04                    ; local index
0000f26: 05                    ; else
0000f27: 41                    ; i32.const
0000f28: 0c                    ; i32 literal
0000f29: 10                    ; call
0000f2a: 07                    ; call func index (7)
0000f2b: 0b                    ; end
0000f2c: 21                    ; set_local
0000f2d: 04                    ; local index
0000f2e: 20                    ; get_local
0000f2f: 02                    ; local index
0000f30: 20                    ; get_local
0000f31: 03                    ; local index
0000f32: 95                    ; f32.div
0000f33: 21                    ; set_local
0000f34: 05                    ; local index
0000f35: 43                    ; f32.const
0000f36: 00                    ; f32 literal
0000f3e: 20                    ; get_local
0000f3f: 00                    ; local index
0000f40: 20                    ; get_local
0000f41: 01                    ; local index
0000f42: 10                    ; call
0000f43: 2c                    ; call func index (44)
0000f44: 93                    ; f32.sub
0000f45: 21                    ; set_local
0000f46: 06                    ; local index
0000f47: 20                    ; get_local
0000f48: 05                    ; local index
0000f49: 20                    ; get_local
0000f4a: 05                    ; local index
0000f4b: 94                    ; f32.mul
0000f4c: 43                    ; f32.const
0000f4d: 01                    ; f32 literal
0000f51: 20                    ; get_local
0000f52: 06                    ; local index
0000f53: 20                    ; get_local
0000f54: 06                    ; local index
0000f55: 94                    ; f32.mul
0000f56: 93                    ; f32.sub
0000f57: 94                    ; f32.mul
0000f58: 21                    ; set_local
0000f59: 07                    ; local index
0000f5a: 20                    ; get_local
0000f5b: 07                    ; local index
0000f5c: 43                    ; f32.const
0000f5d: 01                    ; f32 literal
0000f61: 5e                    ; f32.gt
0000f62: 04                    ; if
0000051: 40                    ; block_type
0000f64: 02                    ; block
0000f65: 40                    ; block_type
0000f66: 20                    ; get_local
0000f67: 04                    ; local index
0000f68: 43                    ; f32.const
0000f69: 00                    ; f32 literal
0000f6d: 43                    ; f32.const
0000f6e: 00                    ; f32 literal
0000f72: 43                    ; f32.const
0000f73: 00                    ; f32 literal
0000f77: 10                    ; call
0000f78: 27                    ; call func index (39)
0000f79: 0f                    ; return
0000f7a: 0b                    ; end
0000f7b: 0b                    ; end
0000f7c: 43                    ; f32.const
0000f7d: 01                    ; f32 literal
0000f81: 20                    ; get_local
0000f82: 07                    ; local index
0000f83: 93                    ; f32.sub
0000f84: 10                    ; call
0000f85: 13                    ; call func index (19)
0000f86: 21                    ; set_local
0000f87: 08                    ; local index
0000f88: 20                    ; get_local
0000f89: 01                    ; local index
0000f8a: 20                    ; get_local
0000f8b: 05                    ; local index
0000f8c: 20                    ; get_local
0000f8d: 04                    ; local index
0000f8e: 10                    ; call
0000f8f: 37                    ; call func index (55)
0000f90: 20                    ; get_local
0000f91: 00                    ; local index
0000f92: 20                    ; get_local
0000f93: 05                    ; local index
0000f94: 20                    ; get_local
0000f95: 06                    ; local index
0000f96: 20                    ; get_local
0000f97: 08                    ; local index
0000f98: 93                    ; f32.sub
0000f99: 94                    ; f32.mul
0000f9a: 41                    ; i32.const
0000f9b: 00                    ; i32 literal
0000f9c: 10                    ; call
0000f9d: 37                    ; call func index (55)
0000f9e: 21                    ; set_local
0000f9f: 09                    ; local index
0000fa0: 20                    ; get_local
0000fa1: 04                    ; local index
0000fa2: 20                    ; get_local
0000fa3: 09                    ; local index
0000fa4: 20                    ; get_local
0000fa5: 04                    ; local index
0000fa6: 10                    ; call
0000fa7: 30                    ; call func index (48)
0000fa8: 20                    ; get_local
0000fa9: 09                    ; local index
0000faa: 10                    ; call
0000fab: 08                    ; call func index (8)
0000fac: 20                    ; get_local
0000fad: 04                    ; local index
0000fae: 0f                    ; return
0000faf: 0b                    ; end
 - func body 57 (Vector3_reflectance)
0000fb4: 9e                    ; func body size
0000fb2: 06                    ; local count
0000fb3: 01                    ; local index
0000fb4: 7d                    ; F32
0000fb5: 01                    ; local index
0000fb6: 7d                    ; F32
0000fb7: 01                    ; local index
0000fb8: 7d                    ; F32
0000fb9: 01                    ; local index
0000fba: 7d                    ; F32
0000fbb: 01                    ; local index
0000fbc: 7d                    ; F32
0000fbd: 01                    ; local index
0000fbe: 7d                    ; F32
0000fbf: 20                    ; get_local
0000fc0: 02                    ; local index
0000fc1: 20                    ; get_local
0000fc2: 03                    ; local index
0000fc3: 95                    ; f32.div
0000fc4: 21                    ; set_local
0000fc5: 04                    ; local index
0000fc6: 43                    ; f32.const
0000fc7: 00                    ; f32 literal
0000fcf: 20                    ; get_local
0000fd0: 00                    ; local index
0000fd1: 20                    ; get_local
0000fd2: 01                    ; local index
0000fd3: 10                    ; call
0000fd4: 2c                    ; call func index (44)
0000fd5: 93                    ; f32.sub
0000fd6: 21                    ; set_local
0000fd7: 05                    ; local index
0000fd8: 20                    ; get_local
0000fd9: 04                    ; local index
0000fda: 20                    ; get_local
0000fdb: 04                    ; local index
0000fdc: 94                    ; f32.mul
0000fdd: 43                    ; f32.const
0000fde: 01                    ; f32 literal
0000fe2: 20                    ; get_local
0000fe3: 05                    ; local index
0000fe4: 20                    ; get_local
0000fe5: 05                    ; local index
0000fe6: 94                    ; f32.mul
0000fe7: 93                    ; f32.sub
0000fe8: 94                    ; f32.mul
0000fe9: 21                    ; set_local
0000fea: 06                    ; local index
0000feb: 20                    ; get_local
0000fec: 06                    ; local index
0000fed: 43                    ; f32.const
0000fee: 01                    ; f32 literal
0000ff2: 5e                    ; f32.gt
0000ff3: 04                    ; if
0000042: 40                    ; block_type
0000ff5: 02                    ; block
0000ff6: 40                    ; block_type
0000ff7: 43                    ; f32.const
0000ff8: 01                    ; f32 literal
0000ffc: 0f                    ; return
0000ffd: 0b                    ; end
0000ffe: 0b                    ; end
0000fff: 43                    ; f32.const
0001000: 01                    ; f32 literal
0001004: 20                    ; get_local
0001005: 06                    ; local index
0001006: 93                    ; f32.sub
0001007: 10                    ; call
0001008: 13                    ; call func index (19)
0001009: 21                    ; set_local
000100a: 07                    ; local index
000100b: 20                    ; get_local
000100c: 02                    ; local index
000100d: 20                    ; get_local
000100e: 05                    ; local index
000100f: 94                    ; f32.mul
0001010: 20                    ; get_local
0001011: 03                    ; local index
0001012: 20                    ; get_local
0001013: 07                    ; local index
0001014: 94                    ; f32.mul
0001015: 93                    ; f32.sub
0001016: 20                    ; get_local
0001017: 02                    ; local index
0001018: 20                    ; get_local
0001019: 05                    ; local index
000101a: 94                    ; f32.mul
000101b: 20                    ; get_local
000101c: 03                    ; local index
000101d: 20                    ; get_local
000101e: 07                    ; local index
000101f: 94                    ; f32.mul
0001020: 92                    ; f32.add
0001021: 95                    ; f32.div
0001022: 21                    ; set_local
0001023: 08                    ; local index
0001024: 20                    ; get_local
0001025: 03                    ; local index
0001026: 20                    ; get_local
0001027: 05                    ; local index
0001028: 94                    ; f32.mul
0001029: 20                    ; get_local
000102a: 02                    ; local index
000102b: 20                    ; get_local
000102c: 07                    ; local index
000102d: 94                    ; f32.mul
000102e: 93                    ; f32.sub
000102f: 20                    ; get_local
0001030: 03                    ; local index
0001031: 20                    ; get_local
0001032: 05                    ; local index
0001033: 94                    ; f32.mul
0001034: 20                    ; get_local
0001035: 02                    ; local index
0001036: 20                    ; get_local
0001037: 07                    ; local index
0001038: 94                    ; f32.mul
0001039: 92                    ; f32.add
000103a: 95                    ; f32.div
000103b: 21                    ; set_local
000103c: 09                    ; local index
000103d: 20                    ; get_local
000103e: 08                    ; local index
000103f: 20                    ; get_local
0001040: 08                    ; local index
0001041: 94                    ; f32.mul
0001042: 20                    ; get_local
0001043: 09                    ; local index
0001044: 20                    ; get_local
0001045: 09                    ; local index
0001046: 94                    ; f32.mul
0001047: 92                    ; f32.add
0001048: 43                    ; f32.const
0001049: 02                    ; f32 literal
000104d: 95                    ; f32.div
000104e: 0f                    ; return
000104f: 0b                    ; end
 - func body 58 (Vector3_pow)
0001053: 33                    ; func body size
0001052: 00                    ; local count
0001053: 20                    ; get_local
0001054: 02                    ; local index
0001055: 41                    ; i32.const
0001056: 00                    ; i32 literal
0001057: 47                    ; i32.ne
0001058: 04                    ; if
0000007: 7f                    ; I32
000105a: 20                    ; get_local
000105b: 02                    ; local index
000105c: 05                    ; else
000105d: 41                    ; i32.const
000105e: 0c                    ; i32 literal
000105f: 10                    ; call
0001060: 07                    ; call func index (7)
0001061: 0b                    ; end
0001062: 21                    ; set_local
0001063: 02                    ; local index
0001064: 20                    ; get_local
0001065: 02                    ; local index
0001066: 20                    ; get_local
0001067: 00                    ; local index
0001068: 2a                    ; f32.load
0001069: 02                    ; alignment
000106a: 00                    ; load offset
000106b: 20                    ; get_local
000106c: 01                    ; local index
000106d: 10                    ; call
000106e: 14                    ; call func index (20)
000106f: 20                    ; get_local
0001070: 00                    ; local index
0001071: 2a                    ; f32.load
0001072: 02                    ; alignment
0001073: 04                    ; load offset
0001074: 20                    ; get_local
0001075: 01                    ; local index
0001076: 10                    ; call
0001077: 14                    ; call func index (20)
0001078: 20                    ; get_local
0001079: 00                    ; local index
000107a: 2a                    ; f32.load
000107b: 02                    ; alignment
000107c: 08                    ; load offset
000107d: 20                    ; get_local
000107e: 01                    ; local index
000107f: 10                    ; call
0001080: 14                    ; call func index (20)
0001081: 10                    ; call
0001082: 27                    ; call func index (39)
0001083: 0f                    ; return
0001084: 0b                    ; end
 - func body 59 (randomUnitVector3)
0001088: ac                    ; func body size
0001086: 03                    ; local count
0001087: 01                    ; local index
0001088: 7d                    ; F32
0001089: 01                    ; local index
000108a: 7d                    ; F32
000108b: 01                    ; local index
000108c: 7d                    ; F32
000108d: 10                    ; call
000108e: 21                    ; call func index (33)
000108f: 43                    ; f32.const
0001090: 02                    ; f32 literal
0001094: 94                    ; f32.mul
0001095: 43                    ; f32.const
0001096: 01                    ; f32 literal
000109a: 93                    ; f32.sub
000109b: 21                    ; set_local
000109c: 01                    ; local index
000109d: 10                    ; call
000109e: 21                    ; call func index (33)
000109f: 43                    ; f32.const
00010a0: 02                    ; f32 literal
00010a4: 94                    ; f32.mul
00010a5: 43                    ; f32.const
00010a6: 01                    ; f32 literal
00010aa: 93                    ; f32.sub
00010ab: 21                    ; set_local
00010ac: 02                    ; local index
00010ad: 10                    ; call
00010ae: 21                    ; call func index (33)
00010af: 43                    ; f32.const
00010b0: 02                    ; f32 literal
00010b4: 94                    ; f32.mul
00010b5: 43                    ; f32.const
00010b6: 01                    ; f32 literal
00010ba: 93                    ; f32.sub
00010bb: 21                    ; set_local
00010bc: 03                    ; local index
00010bd: 02                    ; block
0000038: 40                    ; block_type
00010bf: 03                    ; loop
000003a: 40                    ; block_type
00010c1: 20                    ; get_local
00010c2: 01                    ; local index
00010c3: 20                    ; get_local
00010c4: 01                    ; local index
00010c5: 94                    ; f32.mul
00010c6: 20                    ; get_local
00010c7: 02                    ; local index
00010c8: 20                    ; get_local
00010c9: 02                    ; local index
00010ca: 94                    ; f32.mul
00010cb: 92                    ; f32.add
00010cc: 20                    ; get_local
00010cd: 03                    ; local index
00010ce: 20                    ; get_local
00010cf: 03                    ; local index
00010d0: 94                    ; f32.mul
00010d1: 92                    ; f32.add
00010d2: 43                    ; f32.const
00010d3: 01                    ; f32 literal
00010d7: 5e                    ; f32.gt
00010d8: 45                    ; i32.eqz
00010d9: 0d                    ; br_if
00010db: 10                    ; call
00010dc: 21                    ; call func index (33)
00010dd: 43                    ; f32.const
00010de: 02                    ; f32 literal
00010e2: 94                    ; f32.mul
00010e3: 43                    ; f32.const
00010e4: 01                    ; f32 literal
00010e8: 93                    ; f32.sub
00010e9: 21                    ; set_local
00010ea: 01                    ; local index
00010eb: 10                    ; call
00010ec: 21                    ; call func index (33)
00010ed: 43                    ; f32.const
00010ee: 02                    ; f32 literal
00010f2: 94                    ; f32.mul
00010f3: 43                    ; f32.const
00010f4: 01                    ; f32 literal
00010f8: 93                    ; f32.sub
00010f9: 21                    ; set_local
00010fa: 02                    ; local index
00010fb: 10                    ; call
00010fc: 21                    ; call func index (33)
00010fd: 43                    ; f32.const
00010fe: 02                    ; f32 literal
0001102: 94                    ; f32.mul
0001103: 43                    ; f32.const
0001104: 01                    ; f32 literal
0001108: 93                    ; f32.sub
0001109: 21                    ; set_local
000110a: 03                    ; local index
000110b: 0c                    ; br
000110d: 0b                    ; end
000110e: 0b                    ; end
000110f: 20                    ; get_local
0001110: 00                    ; local index
0001111: 41                    ; i32.const
0001112: 00                    ; i32 literal
0001113: 47                    ; i32.ne
0001114: 04                    ; if
000008f: 7f                    ; I32
0001116: 20                    ; get_local
0001117: 00                    ; local index
0001118: 05                    ; else
0001119: 41                    ; i32.const
000111a: 0c                    ; i32 literal
000111b: 10                    ; call
000111c: 07                    ; call func index (7)
000111d: 0b                    ; end
000111e: 21                    ; set_local
000111f: 00                    ; local index
0001120: 20                    ; get_local
0001121: 00                    ; local index
0001122: 20                    ; get_local
0001123: 01                    ; local index
0001124: 20                    ; get_local
0001125: 02                    ; local index
0001126: 20                    ; get_local
0001127: 03                    ; local index
0001128: 10                    ; call
0001129: 27                    ; call func index (39)
000112a: 20                    ; get_local
000112b: 00                    ; local index
000112c: 20                    ; get_local
000112d: 00                    ; local index
000112e: 10                    ; call
000112f: 2e                    ; call func index (46)
0001130: 0f                    ; return
0001131: 0b                    ; end
 - func body 60 (Color__set)
0001135: 1a                    ; func body size
0001134: 00                    ; local count
0001135: 20                    ; get_local
0001136: 00                    ; local index
0001137: 20                    ; get_local
0001138: 01                    ; local index
0001139: 39                    ; f64.store
000113a: 03                    ; alignment
000113b: 00                    ; load offset
000113c: 20                    ; get_local
000113d: 00                    ; local index
000113e: 20                    ; get_local
000113f: 02                    ; local index
0001140: 39                    ; f64.store
0001141: 03                    ; alignment
0001142: 08                    ; load offset
0001143: 20                    ; get_local
0001144: 00                    ; local index
0001145: 20                    ; get_local
0001146: 03                    ; local index
0001147: 39                    ; f64.store
0001148: 03                    ; alignment
0001149: 10                    ; load offset
000114a: 20                    ; get_local
000114b: 00                    ; local index
000114c: 0f                    ; return
000114d: 0b                    ; end
 - func body 61 (Color_new)
0001150: 0e                    ; func body size
000114f: 00                    ; local count
0001150: 41                    ; i32.const
0001151: 18                    ; i32 literal
0001152: 10                    ; call
0001153: 07                    ; call func index (7)
0001154: 20                    ; get_local
0001155: 00                    ; local index
0001156: 20                    ; get_local
0001157: 01                    ; local index
0001158: 20                    ; get_local
0001159: 02                    ; local index
000115a: 10                    ; call
000115b: 43                    ; call func index (67)
000115c: 0b                    ; end
 - func body 62 (Color_set)
000115f: 1a                    ; func body size
000115e: 00                    ; local count
000115f: 20                    ; get_local
0001160: 00                    ; local index
0001161: 20                    ; get_local
0001162: 01                    ; local index
0001163: 39                    ; f64.store
0001164: 03                    ; alignment
0001165: 00                    ; load offset
0001166: 20                    ; get_local
0001167: 00                    ; local index
0001168: 20                    ; get_local
0001169: 02                    ; local index
000116a: 39                    ; f64.store
000116b: 03                    ; alignment
000116c: 08                    ; load offset
000116d: 20                    ; get_local
000116e: 00                    ; local index
000116f: 20                    ; get_local
0001170: 03                    ; local index
0001171: 39                    ; f64.store
0001172: 03                    ; alignment
0001173: 10                    ; load offset
0001174: 20                    ; get_local
0001175: 00                    ; local index
0001176: 0f                    ; return
0001177: 0b                    ; end
 - func body 63 (Color_hexColor)
000117a: 55                    ; func body size
0001179: 04                    ; local count
000117a: 01                    ; local index
000117b: 7f                    ; I32
000117c: 01                    ; local index
000117d: 7f                    ; I32
000117e: 01                    ; local index
000117f: 7f                    ; I32
0001180: 01                    ; local index
0001181: 7f                    ; I32
0001182: 20                    ; get_local
0001183: 01                    ; local index
0001184: 41                    ; i32.const
0001185: 10                    ; i32 literal
0001186: 75                    ; i32.shr_s
0001187: 41                    ; i32.const
0001188: ff                    ; i32 literal
000118a: 71                    ; i32.and
000118b: 41                    ; i32.const
000118c: ff                    ; i32 literal
000118e: 6d                    ; i32.div_s
000118f: 21                    ; set_local
0001190: 02                    ; local index
0001191: 20                    ; get_local
0001192: 01                    ; local index
0001193: 41                    ; i32.const
0001194: 08                    ; i32 literal
0001195: 75                    ; i32.shr_s
0001196: 41                    ; i32.const
0001197: ff                    ; i32 literal
0001199: 71                    ; i32.and
000119a: 41                    ; i32.const
000119b: ff                    ; i32 literal
000119d: 6d                    ; i32.div_s
000119e: 21                    ; set_local
000119f: 03                    ; local index
00011a0: 20                    ; get_local
00011a1: 01                    ; local index
00011a2: 41                    ; i32.const
00011a3: ff                    ; i32 literal
00011a5: 71                    ; i32.and
00011a6: 41                    ; i32.const
00011a7: ff                    ; i32 literal
00011a9: 6d                    ; i32.div_s
00011aa: 21                    ; set_local
00011ab: 04                    ; local index
00011ac: 41                    ; i32.const
00011ad: 18                    ; i32 literal
00011ae: 10                    ; call
00011af: 07                    ; call func index (7)
00011b0: 20                    ; get_local
00011b1: 02                    ; local index
00011b2: b7                    ; f64.convert_s/i32
00011b3: 20                    ; get_local
00011b4: 03                    ; local index
00011b5: b7                    ; f64.convert_s/i32
00011b6: 20                    ; get_local
00011b7: 04                    ; local index
00011b8: b7                    ; f64.convert_s/i32
00011b9: 10                    ; call
00011ba: 43                    ; call func index (67)
00011bb: 21                    ; set_local
00011bc: 05                    ; local index
00011bd: 20                    ; get_local
00011be: 05                    ; local index
00011bf: 44                    ; f64.const
00011c0: 34                    ; f64 literal
00011c8: 20                    ; get_local
00011c9: 05                    ; local index
00011ca: 10                    ; call
00011cb: 51                    ; call func index (81)
00011cc: 0f                    ; return
00011cd: 0b                    ; end
 - func body 64 (Color_add)
00011d0: 39                    ; func body size
00011cf: 00                    ; local count
00011d0: 20                    ; get_local
00011d1: 02                    ; local index
00011d2: 41                    ; i32.const
00011d3: 00                    ; i32 literal
00011d4: 47                    ; i32.ne
00011d5: 04                    ; if
0000007: 7f                    ; I32
00011d7: 20                    ; get_local
00011d8: 02                    ; local index
00011d9: 05                    ; else
00011da: 41                    ; i32.const
00011db: 18                    ; i32 literal
00011dc: 10                    ; call
00011dd: 07                    ; call func index (7)
00011de: 0b                    ; end
00011df: 21                    ; set_local
00011e0: 02                    ; local index
00011e1: 20                    ; get_local
00011e2: 02                    ; local index
00011e3: 20                    ; get_local
00011e4: 00                    ; local index
00011e5: 2b                    ; f64.load
00011e6: 03                    ; alignment
00011e7: 00                    ; load offset
00011e8: 20                    ; get_local
00011e9: 01                    ; local index
00011ea: 2b                    ; f64.load
00011eb: 03                    ; alignment
00011ec: 00                    ; load offset
00011ed: a0                    ; f64.add
00011ee: 20                    ; get_local
00011ef: 00                    ; local index
00011f0: 2b                    ; f64.load
00011f1: 03                    ; alignment
00011f2: 08                    ; load offset
00011f3: 20                    ; get_local
00011f4: 01                    ; local index
00011f5: 2b                    ; f64.load
00011f6: 03                    ; alignment
00011f7: 08                    ; load offset
00011f8: a0                    ; f64.add
00011f9: 20                    ; get_local
00011fa: 00                    ; local index
00011fb: 2b                    ; f64.load
00011fc: 03                    ; alignment
00011fd: 10                    ; load offset
00011fe: 20                    ; get_local
00011ff: 01                    ; local index
0001200: 2b                    ; f64.load
0001201: 03                    ; alignment
0001202: 10                    ; load offset
0001203: a0                    ; f64.add
0001204: 10                    ; call
0001205: 45                    ; call func index (69)
0001206: 0f                    ; return
0001207: 0b                    ; end
 - func body 65 (Color_sub)
000120a: 39                    ; func body size
0001209: 00                    ; local count
000120a: 20                    ; get_local
000120b: 02                    ; local index
000120c: 41                    ; i32.const
000120d: 00                    ; i32 literal
000120e: 47                    ; i32.ne
000120f: 04                    ; if
0000007: 7f                    ; I32
0001211: 20                    ; get_local
0001212: 02                    ; local index
0001213: 05                    ; else
0001214: 41                    ; i32.const
0001215: 18                    ; i32 literal
0001216: 10                    ; call
0001217: 07                    ; call func index (7)
0001218: 0b                    ; end
0001219: 21                    ; set_local
000121a: 02                    ; local index
000121b: 20                    ; get_local
000121c: 02                    ; local index
000121d: 20                    ; get_local
000121e: 00                    ; local index
000121f: 2b                    ; f64.load
0001220: 03                    ; alignment
0001221: 00                    ; load offset
0001222: 20                    ; get_local
0001223: 01                    ; local index
0001224: 2b                    ; f64.load
0001225: 03                    ; alignment
0001226: 00                    ; load offset
0001227: a1                    ; f64.sub
0001228: 20                    ; get_local
0001229: 00                    ; local index
000122a: 2b                    ; f64.load
000122b: 03                    ; alignment
000122c: 08                    ; load offset
000122d: 20                    ; get_local
000122e: 01                    ; local index
000122f: 2b                    ; f64.load
0001230: 03                    ; alignment
0001231: 08                    ; load offset
0001232: a1                    ; f64.sub
0001233: 20                    ; get_local
0001234: 00                    ; local index
0001235: 2b                    ; f64.load
0001236: 03                    ; alignment
0001237: 10                    ; load offset
0001238: 20                    ; get_local
0001239: 01                    ; local index
000123a: 2b                    ; f64.load
000123b: 03                    ; alignment
000123c: 10                    ; load offset
000123d: a1                    ; f64.sub
000123e: 10                    ; call
000123f: 45                    ; call func index (69)
0001240: 0f                    ; return
0001241: 0b                    ; end
 - func body 66 (Color_mul)
0001244: 39                    ; func body size
0001243: 00                    ; local count
0001244: 20                    ; get_local
0001245: 02                    ; local index
0001246: 41                    ; i32.const
0001247: 00                    ; i32 literal
0001248: 47                    ; i32.ne
0001249: 04                    ; if
0000007: 7f                    ; I32
000124b: 20                    ; get_local
000124c: 02                    ; local index
000124d: 05                    ; else
000124e: 41                    ; i32.const
000124f: 18                    ; i32 literal
0001250: 10                    ; call
0001251: 07                    ; call func index (7)
0001252: 0b                    ; end
0001253: 21                    ; set_local
0001254: 02                    ; local index
0001255: 20                    ; get_local
0001256: 02                    ; local index
0001257: 20                    ; get_local
0001258: 00                    ; local index
0001259: 2b                    ; f64.load
000125a: 03                    ; alignment
000125b: 00                    ; load offset
000125c: 20                    ; get_local
000125d: 01                    ; local index
000125e: 2b                    ; f64.load
000125f: 03                    ; alignment
0001260: 00                    ; load offset
0001261: a2                    ; f64.mul
0001262: 20                    ; get_local
0001263: 00                    ; local index
0001264: 2b                    ; f64.load
0001265: 03                    ; alignment
0001266: 08                    ; load offset
0001267: 20                    ; get_local
0001268: 01                    ; local index
0001269: 2b                    ; f64.load
000126a: 03                    ; alignment
000126b: 08                    ; load offset
000126c: a2                    ; f64.mul
000126d: 20                    ; get_local
000126e: 00                    ; local index
000126f: 2b                    ; f64.load
0001270: 03                    ; alignment
0001271: 10                    ; load offset
0001272: 20                    ; get_local
0001273: 01                    ; local index
0001274: 2b                    ; f64.load
0001275: 03                    ; alignment
0001276: 10                    ; load offset
0001277: a2                    ; f64.mul
0001278: 10                    ; call
0001279: 45                    ; call func index (69)
000127a: 0f                    ; return
000127b: 0b                    ; end
 - func body 67 (Color_mulScalar)
000127e: 30                    ; func body size
000127d: 00                    ; local count
000127e: 20                    ; get_local
000127f: 02                    ; local index
0001280: 41                    ; i32.const
0001281: 00                    ; i32 literal
0001282: 47                    ; i32.ne
0001283: 04                    ; if
0000007: 7f                    ; I32
0001285: 20                    ; get_local
0001286: 02                    ; local index
0001287: 05                    ; else
0001288: 41                    ; i32.const
0001289: 18                    ; i32 literal
000128a: 10                    ; call
000128b: 07                    ; call func index (7)
000128c: 0b                    ; end
000128d: 21                    ; set_local
000128e: 02                    ; local index
000128f: 20                    ; get_local
0001290: 02                    ; local index
0001291: 20                    ; get_local
0001292: 00                    ; local index
0001293: 2b                    ; f64.load
0001294: 03                    ; alignment
0001295: 00                    ; load offset
0001296: 20                    ; get_local
0001297: 01                    ; local index
0001298: a2                    ; f64.mul
0001299: 20                    ; get_local
000129a: 00                    ; local index
000129b: 2b                    ; f64.load
000129c: 03                    ; alignment
000129d: 08                    ; load offset
000129e: 20                    ; get_local
000129f: 01                    ; local index
00012a0: a2                    ; f64.mul
00012a1: 20                    ; get_local
00012a2: 00                    ; local index
00012a3: 2b                    ; f64.load
00012a4: 03                    ; alignment
00012a5: 10                    ; load offset
00012a6: 20                    ; get_local
00012a7: 01                    ; local index
00012a8: a2                    ; f64.mul
00012a9: 10                    ; call
00012aa: 45                    ; call func index (69)
00012ab: 0f                    ; return
00012ac: 0b                    ; end
 - func body 68 (Color_div)
00012af: 39                    ; func body size
00012ae: 00                    ; local count
00012af: 20                    ; get_local
00012b0: 02                    ; local index
00012b1: 41                    ; i32.const
00012b2: 00                    ; i32 literal
00012b3: 47                    ; i32.ne
00012b4: 04                    ; if
0000007: 7f                    ; I32
00012b6: 20                    ; get_local
00012b7: 02                    ; local index
00012b8: 05                    ; else
00012b9: 41                    ; i32.const
00012ba: 18                    ; i32 literal
00012bb: 10                    ; call
00012bc: 07                    ; call func index (7)
00012bd: 0b                    ; end
00012be: 21                    ; set_local
00012bf: 02                    ; local index
00012c0: 20                    ; get_local
00012c1: 02                    ; local index
00012c2: 20                    ; get_local
00012c3: 00                    ; local index
00012c4: 2b                    ; f64.load
00012c5: 03                    ; alignment
00012c6: 00                    ; load offset
00012c7: 20                    ; get_local
00012c8: 01                    ; local index
00012c9: 2b                    ; f64.load
00012ca: 03                    ; alignment
00012cb: 00                    ; load offset
00012cc: a3                    ; f64.div
00012cd: 20                    ; get_local
00012ce: 00                    ; local index
00012cf: 2b                    ; f64.load
00012d0: 03                    ; alignment
00012d1: 08                    ; load offset
00012d2: 20                    ; get_local
00012d3: 01                    ; local index
00012d4: 2b                    ; f64.load
00012d5: 03                    ; alignment
00012d6: 08                    ; load offset
00012d7: a3                    ; f64.div
00012d8: 20                    ; get_local
00012d9: 00                    ; local index
00012da: 2b                    ; f64.load
00012db: 03                    ; alignment
00012dc: 10                    ; load offset
00012dd: 20                    ; get_local
00012de: 01                    ; local index
00012df: 2b                    ; f64.load
00012e0: 03                    ; alignment
00012e1: 10                    ; load offset
00012e2: a3                    ; f64.div
00012e3: 10                    ; call
00012e4: 45                    ; call func index (69)
00012e5: 0f                    ; return
00012e6: 0b                    ; end
 - func body 69 (Color_divScalar)
00012e9: 30                    ; func body size
00012e8: 00                    ; local count
00012e9: 20                    ; get_local
00012ea: 02                    ; local index
00012eb: 41                    ; i32.const
00012ec: 00                    ; i32 literal
00012ed: 47                    ; i32.ne
00012ee: 04                    ; if
0000007: 7f                    ; I32
00012f0: 20                    ; get_local
00012f1: 02                    ; local index
00012f2: 05                    ; else
00012f3: 41                    ; i32.const
00012f4: 18                    ; i32 literal
00012f5: 10                    ; call
00012f6: 07                    ; call func index (7)
00012f7: 0b                    ; end
00012f8: 21                    ; set_local
00012f9: 02                    ; local index
00012fa: 20                    ; get_local
00012fb: 02                    ; local index
00012fc: 20                    ; get_local
00012fd: 00                    ; local index
00012fe: 2b                    ; f64.load
00012ff: 03                    ; alignment
0001300: 00                    ; load offset
0001301: 20                    ; get_local
0001302: 01                    ; local index
0001303: a3                    ; f64.div
0001304: 20                    ; get_local
0001305: 00                    ; local index
0001306: 2b                    ; f64.load
0001307: 03                    ; alignment
0001308: 08                    ; load offset
0001309: 20                    ; get_local
000130a: 01                    ; local index
000130b: a3                    ; f64.div
000130c: 20                    ; get_local
000130d: 00                    ; local index
000130e: 2b                    ; f64.load
000130f: 03                    ; alignment
0001310: 10                    ; load offset
0001311: 20                    ; get_local
0001312: 01                    ; local index
0001313: a3                    ; f64.div
0001314: 10                    ; call
0001315: 45                    ; call func index (69)
0001316: 0f                    ; return
0001317: 0b                    ; end
 - func body 70 (Color_min)
000131a: 3c                    ; func body size
0001319: 00                    ; local count
000131a: 20                    ; get_local
000131b: 02                    ; local index
000131c: 41                    ; i32.const
000131d: 00                    ; i32 literal
000131e: 47                    ; i32.ne
000131f: 04                    ; if
0000007: 7f                    ; I32
0001321: 20                    ; get_local
0001322: 02                    ; local index
0001323: 05                    ; else
0001324: 41                    ; i32.const
0001325: 18                    ; i32 literal
0001326: 10                    ; call
0001327: 07                    ; call func index (7)
0001328: 0b                    ; end
0001329: 21                    ; set_local
000132a: 02                    ; local index
000132b: 20                    ; get_local
000132c: 02                    ; local index
000132d: 20                    ; get_local
000132e: 00                    ; local index
000132f: 2b                    ; f64.load
0001330: 03                    ; alignment
0001331: 00                    ; load offset
0001332: 20                    ; get_local
0001333: 01                    ; local index
0001334: 2b                    ; f64.load
0001335: 03                    ; alignment
0001336: 00                    ; load offset
0001337: 10                    ; call
0001338: 04                    ; call func index (4)
0001339: 20                    ; get_local
000133a: 00                    ; local index
000133b: 2b                    ; f64.load
000133c: 03                    ; alignment
000133d: 08                    ; load offset
000133e: 20                    ; get_local
000133f: 01                    ; local index
0001340: 2b                    ; f64.load
0001341: 03                    ; alignment
0001342: 08                    ; load offset
0001343: 10                    ; call
0001344: 04                    ; call func index (4)
0001345: 20                    ; get_local
0001346: 00                    ; local index
0001347: 2b                    ; f64.load
0001348: 03                    ; alignment
0001349: 10                    ; load offset
000134a: 20                    ; get_local
000134b: 01                    ; local index
000134c: 2b                    ; f64.load
000134d: 03                    ; alignment
000134e: 10                    ; load offset
000134f: 10                    ; call
0001350: 04                    ; call func index (4)
0001351: 10                    ; call
0001352: 45                    ; call func index (69)
0001353: 0f                    ; return
0001354: 0b                    ; end
 - func body 71 (Color_max)
0001357: 3c                    ; func body size
0001356: 00                    ; local count
0001357: 20                    ; get_local
0001358: 02                    ; local index
0001359: 41                    ; i32.const
000135a: 00                    ; i32 literal
000135b: 47                    ; i32.ne
000135c: 04                    ; if
0000007: 7f                    ; I32
000135e: 20                    ; get_local
000135f: 02                    ; local index
0001360: 05                    ; else
0001361: 41                    ; i32.const
0001362: 18                    ; i32 literal
0001363: 10                    ; call
0001364: 07                    ; call func index (7)
0001365: 0b                    ; end
0001366: 21                    ; set_local
0001367: 02                    ; local index
0001368: 20                    ; get_local
0001369: 02                    ; local index
000136a: 20                    ; get_local
000136b: 00                    ; local index
000136c: 2b                    ; f64.load
000136d: 03                    ; alignment
000136e: 00                    ; load offset
000136f: 20                    ; get_local
0001370: 01                    ; local index
0001371: 2b                    ; f64.load
0001372: 03                    ; alignment
0001373: 00                    ; load offset
0001374: 10                    ; call
0001375: 03                    ; call func index (3)
0001376: 20                    ; get_local
0001377: 00                    ; local index
0001378: 2b                    ; f64.load
0001379: 03                    ; alignment
000137a: 08                    ; load offset
000137b: 20                    ; get_local
000137c: 01                    ; local index
000137d: 2b                    ; f64.load
000137e: 03                    ; alignment
000137f: 08                    ; load offset
0001380: 10                    ; call
0001381: 03                    ; call func index (3)
0001382: 20                    ; get_local
0001383: 00                    ; local index
0001384: 2b                    ; f64.load
0001385: 03                    ; alignment
0001386: 10                    ; load offset
0001387: 20                    ; get_local
0001388: 01                    ; local index
0001389: 2b                    ; f64.load
000138a: 03                    ; alignment
000138b: 10                    ; load offset
000138c: 10                    ; call
000138d: 03                    ; call func index (3)
000138e: 10                    ; call
000138f: 45                    ; call func index (69)
0001390: 0f                    ; return
0001391: 0b                    ; end
 - func body 72 (Color_minComponent)
0001394: 16                    ; func body size
0001393: 00                    ; local count
0001394: 20                    ; get_local
0001395: 00                    ; local index
0001396: 2b                    ; f64.load
0001397: 03                    ; alignment
0001398: 00                    ; load offset
0001399: 20                    ; get_local
000139a: 00                    ; local index
000139b: 2b                    ; f64.load
000139c: 03                    ; alignment
000139d: 08                    ; load offset
000139e: 10                    ; call
000139f: 04                    ; call func index (4)
00013a0: 20                    ; get_local
00013a1: 00                    ; local index
00013a2: 2b                    ; f64.load
00013a3: 03                    ; alignment
00013a4: 10                    ; load offset
00013a5: 10                    ; call
00013a6: 04                    ; call func index (4)
00013a7: 0f                    ; return
00013a8: 0b                    ; end
 - func body 73 (Color_maxComponent)
00013ab: 16                    ; func body size
00013aa: 00                    ; local count
00013ab: 20                    ; get_local
00013ac: 00                    ; local index
00013ad: 2b                    ; f64.load
00013ae: 03                    ; alignment
00013af: 00                    ; load offset
00013b0: 20                    ; get_local
00013b1: 00                    ; local index
00013b2: 2b                    ; f64.load
00013b3: 03                    ; alignment
00013b4: 08                    ; load offset
00013b5: 10                    ; call
00013b6: 03                    ; call func index (3)
00013b7: 20                    ; get_local
00013b8: 00                    ; local index
00013b9: 2b                    ; f64.load
00013ba: 03                    ; alignment
00013bb: 10                    ; load offset
00013bc: 10                    ; call
00013bd: 03                    ; call func index (3)
00013be: 0f                    ; return
00013bf: 0b                    ; end
 - func body 74 (Color_pow)
00013c2: 33                    ; func body size
00013c1: 00                    ; local count
00013c2: 20                    ; get_local
00013c3: 02                    ; local index
00013c4: 41                    ; i32.const
00013c5: 00                    ; i32 literal
00013c6: 47                    ; i32.ne
00013c7: 04                    ; if
0000007: 7f                    ; I32
00013c9: 20                    ; get_local
00013ca: 02                    ; local index
00013cb: 05                    ; else
00013cc: 41                    ; i32.const
00013cd: 18                    ; i32 literal
00013ce: 10                    ; call
00013cf: 07                    ; call func index (7)
00013d0: 0b                    ; end
00013d1: 21                    ; set_local
00013d2: 02                    ; local index
00013d3: 20                    ; get_local
00013d4: 02                    ; local index
00013d5: 20                    ; get_local
00013d6: 00                    ; local index
00013d7: 2b                    ; f64.load
00013d8: 03                    ; alignment
00013d9: 00                    ; load offset
00013da: 20                    ; get_local
00013db: 01                    ; local index
00013dc: 10                    ; call
00013dd: 05                    ; call func index (5)
00013de: 20                    ; get_local
00013df: 00                    ; local index
00013e0: 2b                    ; f64.load
00013e1: 03                    ; alignment
00013e2: 08                    ; load offset
00013e3: 20                    ; get_local
00013e4: 01                    ; local index
00013e5: 10                    ; call
00013e6: 05                    ; call func index (5)
00013e7: 20                    ; get_local
00013e8: 00                    ; local index
00013e9: 2b                    ; f64.load
00013ea: 03                    ; alignment
00013eb: 10                    ; load offset
00013ec: 20                    ; get_local
00013ed: 01                    ; local index
00013ee: 10                    ; call
00013ef: 05                    ; call func index (5)
00013f0: 10                    ; call
00013f1: 45                    ; call func index (69)
00013f2: 0f                    ; return
00013f3: 0b                    ; end
 - func body 75 (Color_mix)
00013f6: 33                    ; func body size
00013f5: 01                    ; local count
00013f6: 01                    ; local index
00013f7: 7f                    ; I32
00013f8: 20                    ; get_local
00013f9: 00                    ; local index
00013fa: 44                    ; f64.const
00013fb: 01                    ; f64 literal
0001403: 20                    ; get_local
0001404: 02                    ; local index
0001405: a1                    ; f64.sub
0001406: 20                    ; get_local
0001407: 03                    ; local index
0001408: 10                    ; call
0001409: 4a                    ; call func index (74)
000140a: 21                    ; set_local
000140b: 03                    ; local index
000140c: 20                    ; get_local
000140d: 01                    ; local index
000140e: 20                    ; get_local
000140f: 02                    ; local index
0001410: 41                    ; i32.const
0001411: 00                    ; i32 literal
0001412: 10                    ; call
0001413: 4a                    ; call func index (74)
0001414: 21                    ; set_local
0001415: 04                    ; local index
0001416: 20                    ; get_local
0001417: 03                    ; local index
0001418: 20                    ; get_local
0001419: 04                    ; local index
000141a: 20                    ; get_local
000141b: 03                    ; local index
000141c: 10                    ; call
000141d: 47                    ; call func index (71)
000141e: 21                    ; set_local
000141f: 03                    ; local index
0001420: 20                    ; get_local
0001421: 04                    ; local index
0001422: 10                    ; call
0001423: 08                    ; call func index (8)
0001424: 20                    ; get_local
0001425: 03                    ; local index
0001426: 0f                    ; return
0001427: 0b                    ; end
 - func body 76 (Image__set)
000142a: 2f                    ; func body size
0001429: 01                    ; local count
000142a: 01                    ; local index
000142b: 7f                    ; I32
000142c: 20                    ; get_local
000142d: 00                    ; local index
000142e: 20                    ; get_local
000142f: 01                    ; local index
0001430: 36                    ; i32.store
0001431: 02                    ; alignment
0001432: 00                    ; load offset
0001433: 20                    ; get_local
0001434: 00                    ; local index
0001435: 20                    ; get_local
0001436: 02                    ; local index
0001437: 36                    ; i32.store
0001438: 02                    ; alignment
0001439: 04                    ; load offset
000143a: 20                    ; get_local
000143b: 00                    ; local index
000143c: 20                    ; get_local
000143d: 03                    ; local index
000143e: 3a                    ; i32.store8
000143f: 00                    ; alignment
0001440: 08                    ; load offset
0001441: 20                    ; get_local
0001442: 01                    ; local index
0001443: 20                    ; get_local
0001444: 02                    ; local index
0001445: 6c                    ; i32.mul
0001446: 41                    ; i32.const
0001447: 02                    ; i32 literal
0001448: 74                    ; i32.shl
0001449: 21                    ; set_local
000144a: 05                    ; local index
000144b: 20                    ; get_local
000144c: 00                    ; local index
000144d: 41                    ; i32.const
000144e: 08                    ; i32 literal
000144f: 10                    ; call
0001450: 07                    ; call func index (7)
0001451: 36                    ; i32.store
0001452: 02                    ; alignment
0001453: 10                    ; load offset
0001454: 20                    ; get_local
0001455: 00                    ; local index
0001456: 0f                    ; return
0001457: 0b                    ; end
 - func body 77 (Image_new)
000145a: 10                    ; func body size
0001459: 02                    ; local count
000145a: 01                    ; local index
000145b: 7f                    ; I32
000145c: 41                    ; i32.const
000145d: 18                    ; i32 literal
000145e: 10                    ; call
000145f: 07                    ; call func index (7)
0001460: 20                    ; get_local
0001461: 00                    ; local index
0001462: 20                    ; get_local
0001463: 01                    ; local index
0001464: 20                    ; get_local
0001465: 02                    ; local index
0001466: 10                    ; call
0001467: 53                    ; call func index (83)
0001468: 0b                    ; end
 - func body 78 (Image_pixOffset)
000146b: 14                    ; func body size
000146a: 00                    ; local count
000146b: 20                    ; get_local
000146c: 02                    ; local index
000146d: 20                    ; get_local
000146e: 00                    ; local index
000146f: 28                    ; i32.load
0001470: 02                    ; alignment
0001471: 00                    ; load offset
0001472: 41                    ; i32.const
0001473: 02                    ; i32 literal
0001474: 74                    ; i32.shl
0001475: 6c                    ; i32.mul
0001476: 20                    ; get_local
0001477: 01                    ; local index
0001478: 41                    ; i32.const
0001479: 02                    ; i32 literal
000147a: 74                    ; i32.shl
000147b: 6a                    ; i32.add
000147c: 0f                    ; return
000147d: 0b                    ; end
 - func body 79 (Image_setRaw)
0001480: 30                    ; func body size
000147f: 01                    ; local count
0001480: 01                    ; local index
0001481: 7f                    ; I32
0001482: 41                    ; i32.const
0001483: 00                    ; i32 literal
0001484: 21                    ; set_local
0001485: 02                    ; local index
0001486: 02                    ; block
0000008: 40                    ; block_type
0001488: 03                    ; loop
000000a: 40                    ; block_type
000148a: 20                    ; get_local
000148b: 02                    ; local index
000148c: 20                    ; get_local
000148d: 01                    ; local index
000148e: 10                    ; call
000148f: 1b                    ; call func index (27)
0001490: 48                    ; i32.lt_s
0001491: 45                    ; i32.eqz
0001492: 0d                    ; br_if
0001494: 20                    ; get_local
0001495: 00                    ; local index
0001496: 28                    ; i32.load
0001497: 02                    ; alignment
0001498: 10                    ; load offset
0001499: 20                    ; get_local
000149a: 02                    ; local index
000149b: 20                    ; get_local
000149c: 01                    ; local index
000149d: 20                    ; get_local
000149e: 02                    ; local index
000149f: 10                    ; call
00014a0: 17                    ; call func index (23)
00014a1: 10                    ; call
00014a2: 18                    ; call func index (24)
00014a3: 20                    ; get_local
00014a4: 02                    ; local index
00014a5: 41                    ; i32.const
00014a6: 01                    ; i32 literal
00014a7: 6a                    ; i32.add
00014a8: 21                    ; set_local
00014a9: 02                    ; local index
00014aa: 0c                    ; br
00014ac: 0b                    ; end
00014ad: 0b                    ; end
00014ae: 0b                    ; end
 - section: Data [0x0b]
00014b3: 0b                    ; section code
00014b4: 32                    ; section size
00014b3: 01                    ; num data segments
 - data segment header 0
00014b4: 00                    ; memory index
00014b5: 41                    ; i32.const
00014b6: 08                    ; i32 literal
00014b7: 0b                    ; end
00014b8: 2c                    ; data segment size
 - data segment data 0
00014ba: 38 00 00 00 38 00 00 00 00 00 00 00 00 00 00 00
00014ca: 00 00 00 00 00 00 00 00 ff ff ff ff 00 00 00 00
00014da: 00 00 00 00 00 00 00 00 00 00 00 00
