export class Array<T> {

    bytesLength: int32;
    elementSize: int32;

    // operator [] (index: int32): T;
    operator [] (index: int32): *T {
        let stripe = index * this.elementSize;
        if (stripe >= 0 && stripe < this.bytesLength) {
            return *((this as *int32 + 8 + stripe) as *int32) as *T;
        }
        return null;
    }

    operator []= (index: int32, value: *T): void {
        let stripe = index * this.elementSize;
        *((this as *int32 + 8 + stripe) as *int32) = value;
    }

    constructor(bytesLength: int32, elementSize: int32) {
        this.bytesLength = bytesLength;
        this.elementSize = elementSize;
    }

    get length(): int32 {
        return this.bytesLength / this.elementSize;
    }
}
