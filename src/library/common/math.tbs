const PI:float64 = 3.141592653589793;

const MAX_UNSIGNED_INTEGER_32:uint32 = 4294967295;

const MIN_INTEGER_32:int32 = -2147483648;
const MAX_INTEGER_32:int32 = 2147483647;

const MAX_UNSIGNED_INTEGER_64:int32 = 18446744073709551615;

// −(2^63) to 2^63 − 1
// const MIN_INTEGER_64:int32 = -powi64(2, 63);
// const MAX_INTEGER_64:int32 = powi64(2, 63) - 1;

// float remainder

 // export function modf64(x:float64, y:float64):float64{
 //
 //         let ir:int32,iy:int32;
 //         let r:float64,w:float64;
 //
 //         if (y == 0 || isNaN(y) || !isFinite(x)) {
 //             return (x * y) / (x * y);
 //         }
 //
 //         r = abs(x);
 //         y = abs(y);
 //         (void)frexp(y,&iy);
 //         while (r >= y) {
 //             (void)frexp(r,&ir);
 //             w = ldexp(y,ir-iy);
 //             r -= w <= r ? w : w*(double)0.5;
 //         }
 //         return x >= (double)0 ? r : -r;
 //     }
 // }