class Universe {

    values: Array<int32>;

    constructor(values: Array<int32>) {
        this.values = values;
    }

    getValues():Array<int32> {
        return this.values;
    }

}

export function test(v1:int32, v2:int32, v3:int32): Universe {
    let a = new Array<int32>(3);
    a[0] = v1;
    a[1] = v2;
    a[2] = v3;
    let u = new Universe(a);
    return u;
}

export function test2(v1:int32, v2:int32, v3:int32): Array<int32> {
    let a = new Array<int32>(3);
    a[0] = 1;//v1;
    a[1] = 2;//v2;
    a[2] = 3;//v3;
    return a;
}

export function getValues(u:Universe):Array<int32> {
    return u.values;
}

export function setValueAt(v:Array<int32>, index:int32, value:int32):void {
    v[index] = value;
}

export function getValueAt(v:Array<int32>, index:int32):int32 {
    return v[index];
}

export function getArrayByteLength(value:Array<int32>):int32 {
    return value.bytesLength;
}
export function getArrayElementSize(value:Array<int32>):int32 {
    return value.elementSize;
}