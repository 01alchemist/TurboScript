0000000: 0061 736d             ; WASM_BINARY_MAGIC
0000004: 0d00 0000             ; WASM_BINARY_VERSION
 - section: Type [0x01]
0000008: 01                    ; section code
0000009: 2b                    ; section size
0000009: 60                    ; func
000000a: 00                    ; num params
000000c: 60                    ; func
000000d: 01                    ; num params
000000e: 7f                    ; I32
000000f: 01                    ; num results
0000010: 7f                    ; I32
0000011: 60                    ; func
0000012: 01                    ; num params
0000013: 7f                    ; I32
0000015: 60                    ; func
0000016: 00                    ; num params
0000017: 01                    ; num results
0000018: 7f                    ; I32
0000019: 60                    ; func
000001a: 02                    ; num params
000001b: 7f                    ; I32
000001c: 7f                    ; I32
000001e: 60                    ; func
000001f: 04                    ; num params
0000020: 7f                    ; I32
0000021: 7d                    ; F32
0000022: 7d                    ; F32
0000023: 7d                    ; F32
0000024: 01                    ; num results
0000025: 7f                    ; I32
0000026: 60                    ; func
0000027: 02                    ; num params
0000028: 7f                    ; I32
0000029: 7f                    ; I32
000002a: 01                    ; num results
000002b: 7f                    ; I32
000002c: 60                    ; func
000002d: 03                    ; num params
000002e: 7d                    ; F32
000002f: 7d                    ; F32
0000030: 7d                    ; F32
0000031: 01                    ; num results
0000032: 7f                    ; I32
 - section: Function [0x03]
0000035: 03                    ; section code
0000036: 1c                    ; section size
0000035: 1b                    ; num functions
0000036: 00                    ; func 0 signature index
0000037: 01                    ; func 1 signature index
0000038: 02                    ; func 2 signature index
0000039: 01                    ; func 3 signature index
000003a: 01                    ; func 4 signature index
000003b: 03                    ; func 5 signature index
000003c: 03                    ; func 6 signature index
000003d: 03                    ; func 7 signature index
000003e: 03                    ; func 8 signature index
000003f: 03                    ; func 9 signature index
0000040: 03                    ; func 10 signature index
0000041: 01                    ; func 11 signature index
0000042: 01                    ; func 12 signature index
0000043: 04                    ; func 13 signature index
0000044: 04                    ; func 14 signature index
0000045: 01                    ; func 15 signature index
0000046: 02                    ; func 16 signature index
0000047: 01                    ; func 17 signature index
0000048: 02                    ; func 18 signature index
0000049: 01                    ; func 19 signature index
000004a: 05                    ; func 20 signature index
000004b: 06                    ; func 21 signature index
000004c: 07                    ; func 22 signature index
000004d: 06                    ; func 23 signature index
000004e: 02                    ; func 24 signature index
000004f: 00                    ; func 25 signature index
0000050: 00                    ; func 26 signature index
 - section: Memory [0x05]
0000053: 05                    ; section code
0000054: 03                    ; section size
0000053: 01                    ; num memories
0000054: 00                    ; memory flags
0000055: 01                    ; memory initial pages
 - section: Export [0x07]
0000058: 07                    ; section code
0000059: 2b                    ; section size
0000058: 16                    ; num exports
0000059: 06                    ; export name length
000005d: memory // export name
0000060: 00                    ; export kind
0000061: 00                    ; export memory index
0000062: 06                    ; export name length
0000066: malloc // export name
0000069: 00                    ; export kind
000006a: 01                    ; export func index
000006b: 04                    ; export name length
000006f: free // export name
0000070: 00                    ; export kind
0000071: 02                    ; export func index
0000072: 0c                    ; export name length
0000076: getFreeChunk // export name
000007f: 00                    ; export kind
0000080: 03                    ; export func index
0000081: 09                    ; export name length
0000085: findChunk // export name
000008b: 00                    ; export kind
000008c: 04                    ; export func index
000008d: 0a                    ; export name length
0000091: getHeapPtr // export name
0000098: 00                    ; export kind
0000099: 05                    ; export func index
000009a: 0d                    ; export name length
000009e: getFreeMemory // export name
00000a8: 00                    ; export kind
00000a9: 06                    ; export func index
00000aa: 12                    ; export name length
00000ae: getOriginalHeapPtr // export name
00000bd: 00                    ; export kind
00000be: 07                    ; export func index
00000bf: 10                    ; export name length
00000c3: getNumFreeChunks // export name
00000d0: 00                    ; export kind
00000d1: 08                    ; export func index
00000d2: 0c                    ; export name length
00000d6: getFirstFree // export name
00000df: 00                    ; export kind
00000e0: 09                    ; export func index
00000e1: 0b                    ; export name length
00000e5: getLastFree // export name
00000ed: 00                    ; export kind
00000ee: 0a                    ; export func index
00000ef: 08                    ; export name length
00000f3: prevFree // export name
00000f8: 00                    ; export kind
00000f9: 0b                    ; export func index
00000fa: 08                    ; export name length
00000fe: nextFree // export name
0000103: 00                    ; export kind
0000104: 0c                    ; export func index
0000105: 0c                    ; export name length
0000109: getPrevInuse // export name
0000112: 00                    ; export kind
0000113: 0f                    ; export func index
0000114: 08                    ; export name length
0000118: setInuse // export name
000011d: 00                    ; export kind
000011e: 10                    ; export func index
000011f: 08                    ; export name length
0000123: getInuse // export name
0000128: 00                    ; export kind
0000129: 11                    ; export func index
000012a: 0a                    ; export name length
000012e: clearInuse // export name
0000135: 00                    ; export kind
0000136: 12                    ; export func index
0000137: 0c                    ; export name length
000013b: getChunkSize // export name
0000144: 00                    ; export kind
0000145: 13                    ; export func index
0000146: 07                    ; export name length
000014a: newVec3 // export name
000014e: 00                    ; export kind
000014f: 16                    ; export func index
0000150: 07                    ; export name length
0000154: addVec3 // export name
0000158: 00                    ; export kind
0000159: 17                    ; export func index
000015a: 0b                    ; export name length
000015e: destroyVec3 // export name
0000166: 00                    ; export kind
0000167: 18                    ; export func index
0000168: 0b                    ; export name length
000016c: destroyTest // export name
0000174: 00                    ; export kind
0000175: 19                    ; export func index
0000176: 0a                    ; export name length
000017a: memoryTest // export name
0000181: 00                    ; export kind
0000182: 1a                    ; export func index
 - section: Start [0x08]
0000186: 08                    ; section code
0000187: 01                    ; section size
0000186: 00                    ; start function index
 - section: Code [0x0a]
0000189: 0a                    ; section code
000018a: a0                    ; section size
0000189: 1b                    ; num functions
 - function body 0 (init_malloc)
000018b: 17                    ; func body size
000018a: 00                    ; local count
000018b: 41                    ; i32.const
000018c: 00                    ; i32 literal
000018d: 41                    ; i32.const
000018e: 00                    ; i32 literal
000018f: 36                    ; i32.store
0000190: 02                    ; alignment
0000191: 14                    ; load offset
0000192: 41                    ; i32.const
0000193: 00                    ; i32 literal
0000194: 41                    ; i32.const
0000195: 00                    ; i32 literal
0000196: 36                    ; i32.store
0000197: 02                    ; alignment
0000198: 18                    ; load offset
0000199: 41                    ; i32.const
000019a: 00                    ; i32 literal
000019b: 41                    ; i32.const
000019c: 00                    ; i32 literal
000019d: 36                    ; i32.store
000019e: 02                    ; alignment
000019f: 1c                    ; load offset
00001a0: 0b                    ; end
 - function body 1 (malloc)
00001a4: ad                    ; func body size
00001a2: 06                    ; local count
00001a3: 01                    ; local index
00001a4: 7f                    ; I32
00001a5: 01                    ; local index
00001a6: 7f                    ; I32
00001a7: 01                    ; local index
00001a8: 7f                    ; I32
00001a9: 01                    ; local index
00001aa: 7f                    ; I32
00001ab: 01                    ; local index
00001ac: 7f                    ; I32
00001ad: 01                    ; local index
00001ae: 7f                    ; I32
00001af: 41                    ; i32.const
00001b0: 08                    ; i32 literal
00001b1: 21                    ; set_local
00001b2: 01                    ; local index
00001b3: 20                    ; get_local
00001b4: 00                    ; local index
00001b5: 20                    ; get_local
00001b6: 01                    ; local index
00001b7: 41                    ; i32.const
00001b8: 01                    ; i32 literal
00001b9: 6b                    ; i32.sub
00001ba: 6a                    ; i32.add
00001bb: 41                    ; i32.const
00001bc: -1                    ; i32 literal
00001bd: 20                    ; get_local
00001be: 01                    ; local index
00001bf: 41                    ; i32.const
00001c0: 01                    ; i32 literal
00001c1: 6b                    ; i32.sub
00001c2: 73                    ; i32.xor
00001c3: 71                    ; i32.and
00001c4: 21                    ; set_local
00001c5: 00                    ; local index
00001c6: 20                    ; get_local
00001c7: 00                    ; local index
00001c8: 41                    ; i32.const
00001c9: 08                    ; i32 literal
00001ca: 6a                    ; i32.add
00001cb: 21                    ; set_local
00001cc: 02                    ; local index
00001cd: 20                    ; get_local
00001ce: 02                    ; local index
00001cf: 10                    ; call
00001d0: 03                    ; call func index (3)
00001d1: 21                    ; set_local
00001d2: 03                    ; local index
00001d3: 20                    ; get_local
00001d4: 03                    ; local index
00001d5: 41                    ; i32.const
00001d6: 00                    ; i32 literal
00001d7: 4a                    ; i32.gt_s
00001d8: 04                    ; if
0000037: 40                    ; block_type
00001da: 02                    ; block
00001db: 40                    ; block_type
00001dc: 20                    ; get_local
00001dd: 03                    ; local index
00001de: 0f                    ; return
00001df: 0b                    ; end
00001e0: 0b                    ; end
00001e1: 41                    ; i32.const
00001e2: 00                    ; i32 literal
00001e3: 28                    ; i32.load
00001e4: 02                    ; alignment
00001e5: 0c                    ; load offset
00001e6: 20                    ; get_local
00001e7: 01                    ; local index
00001e8: 41                    ; i32.const
00001e9: 01                    ; i32 literal
00001ea: 6b                    ; i32.sub
00001eb: 6a                    ; i32.add
00001ec: 41                    ; i32.const
00001ed: -1                    ; i32 literal
00001ee: 20                    ; get_local
00001ef: 01                    ; local index
00001f0: 41                    ; i32.const
00001f1: 01                    ; i32 literal
00001f2: 6b                    ; i32.sub
00001f3: 73                    ; i32.xor
00001f4: 71                    ; i32.and
00001f5: 21                    ; set_local
00001f6: 04                    ; local index
00001f7: 20                    ; get_local
00001f8: 04                    ; local index
00001f9: 20                    ; get_local
00001fa: 02                    ; local index
00001fb: 6a                    ; i32.add
00001fc: 21                    ; set_local
00001fd: 05                    ; local index
00001fe: 20                    ; get_local
00001ff: 04                    ; local index
0000200: 41                    ; i32.const
0000201: 04                    ; i32 literal
0000202: 6a                    ; i32.add
0000203: 21                    ; set_local
0000204: 06                    ; local index
0000205: 20                    ; get_local
0000206: 06                    ; local index
0000207: 20                    ; get_local
0000208: 02                    ; local index
0000209: 10                    ; call
000020a: 0d                    ; call func index (13)
000020b: 20                    ; get_local
000020c: 06                    ; local index
000020d: 41                    ; i32.const
000020e: 04                    ; i32 literal
000020f: 6a                    ; i32.add
0000210: 10                    ; call
0000211: 10                    ; call func index (16)
0000212: 20                    ; get_local
0000213: 06                    ; local index
0000214: 20                    ; get_local
0000215: 02                    ; local index
0000216: 10                    ; call
0000217: 0e                    ; call func index (14)
0000218: 41                    ; i32.const
0000219: 00                    ; i32 literal
000021a: 20                    ; get_local
000021b: 05                    ; local index
000021c: 41                    ; i32.const
000021d: 04                    ; i32 literal
000021e: 6a                    ; i32.add
000021f: 36                    ; i32.store
0000220: 02                    ; alignment
0000221: 0c                    ; load offset
0000222: 20                    ; get_local
0000223: 04                    ; local index
0000224: 41                    ; i32.const
0000225: 08                    ; i32 literal
0000226: 6a                    ; i32.add
0000227: 21                    ; set_local
0000228: 04                    ; local index
0000229: 20                    ; get_local
000022a: 04                    ; local index
000022b: 21                    ; set_local
000022c: 06                    ; local index
000022d: 02                    ; block
000008c: 40                    ; block_type
000022f: 03                    ; loop
000008e: 40                    ; block_type
0000231: 20                    ; get_local
0000232: 06                    ; local index
0000233: 20                    ; get_local
0000234: 05                    ; local index
0000235: 48                    ; i32.lt_s
0000236: 45                    ; i32.eqz
0000237: 0d                    ; br_if
0000239: 20                    ; get_local
000023a: 06                    ; local index
000023b: 41                    ; i32.const
000023c: 00                    ; i32 literal
000023d: 36                    ; i32.store
000023e: 02                    ; alignment
000023f: 00                    ; load offset
0000240: 20                    ; get_local
0000241: 06                    ; local index
0000242: 41                    ; i32.const
0000243: 04                    ; i32 literal
0000244: 6a                    ; i32.add
0000245: 21                    ; set_local
0000246: 06                    ; local index
0000247: 0c                    ; br
0000249: 0b                    ; end
000024a: 0b                    ; end
000024b: 20                    ; get_local
000024c: 04                    ; local index
000024d: 0f                    ; return
000024e: 0b                    ; end
 - function body 2 (free)
0000252: 7b                    ; func body size
0000251: 01                    ; local count
0000252: 01                    ; local index
0000253: 7f                    ; I32
0000254: 20                    ; get_local
0000255: 00                    ; local index
0000256: 10                    ; call
0000257: 12                    ; call func index (18)
0000258: 41                    ; i32.const
0000259: 00                    ; i32 literal
000025a: 28                    ; i32.load
000025b: 02                    ; alignment
000025c: 18                    ; load offset
000025d: 41                    ; i32.const
000025e: 00                    ; i32 literal
000025f: 46                    ; i32.eq
0000260: 04                    ; if
0000010: 40                    ; block_type
0000262: 02                    ; block
0000263: 40                    ; block_type
0000264: 41                    ; i32.const
0000265: 00                    ; i32 literal
0000266: 20                    ; get_local
0000267: 00                    ; local index
0000268: 36                    ; i32.store
0000269: 02                    ; alignment
000026a: 18                    ; load offset
000026b: 0b                    ; end
000026c: 0b                    ; end
000026d: 41                    ; i32.const
000026e: 00                    ; i32 literal
000026f: 41                    ; i32.const
0000270: 00                    ; i32 literal
0000271: 28                    ; i32.load
0000272: 02                    ; alignment
0000273: 10                    ; load offset
0000274: 20                    ; get_local
0000275: 00                    ; local index
0000276: 10                    ; call
0000277: 13                    ; call func index (19)
0000278: 6a                    ; i32.add
0000279: 36                    ; i32.store
000027a: 02                    ; alignment
000027b: 10                    ; load offset
000027c: 20                    ; get_local
000027d: 00                    ; local index
000027e: 41                    ; i32.const
000027f: 04                    ; i32 literal
0000280: 6a                    ; i32.add
0000281: 21                    ; set_local
0000282: 01                    ; local index
0000283: 41                    ; i32.const
0000284: 00                    ; i32 literal
0000285: 28                    ; i32.load
0000286: 02                    ; alignment
0000287: 1c                    ; load offset
0000288: 41                    ; i32.const
0000289: 00                    ; i32 literal
000028a: 4b                    ; i32.gt_u
000028b: 04                    ; if
000003b: 40                    ; block_type
000028d: 02                    ; block
000028e: 40                    ; block_type
000028f: 20                    ; get_local
0000290: 01                    ; local index
0000291: 41                    ; i32.const
0000292: 00                    ; i32 literal
0000293: 28                    ; i32.load
0000294: 02                    ; alignment
0000295: 1c                    ; load offset
0000296: 36                    ; i32.store
0000297: 02                    ; alignment
0000298: 00                    ; load offset
0000299: 41                    ; i32.const
000029a: 00                    ; i32 literal
000029b: 28                    ; i32.load
000029c: 02                    ; alignment
000029d: 1c                    ; load offset
000029e: 20                    ; get_local
000029f: 00                    ; local index
00002a0: 36                    ; i32.store
00002a1: 02                    ; alignment
00002a2: 00                    ; load offset
00002a3: 0b                    ; end
00002a4: 05                    ; else
00002a5: 02                    ; block
00002a6: 40                    ; block_type
00002a7: 20                    ; get_local
00002a8: 01                    ; local index
00002a9: 41                    ; i32.const
00002aa: 00                    ; i32 literal
00002ab: 36                    ; i32.store
00002ac: 02                    ; alignment
00002ad: 00                    ; load offset
00002ae: 0b                    ; end
00002af: 0b                    ; end
00002b0: 20                    ; get_local
00002b1: 00                    ; local index
00002b2: 41                    ; i32.const
00002b3: 00                    ; i32 literal
00002b4: 36                    ; i32.store
00002b5: 02                    ; alignment
00002b6: 00                    ; load offset
00002b7: 41                    ; i32.const
00002b8: 00                    ; i32 literal
00002b9: 20                    ; get_local
00002ba: 00                    ; local index
00002bb: 36                    ; i32.store
00002bc: 02                    ; alignment
00002bd: 1c                    ; load offset
00002be: 41                    ; i32.const
00002bf: 00                    ; i32 literal
00002c0: 41                    ; i32.const
00002c1: 00                    ; i32 literal
00002c2: 28                    ; i32.load
00002c3: 02                    ; alignment
00002c4: 14                    ; load offset
00002c5: 41                    ; i32.const
00002c6: 01                    ; i32 literal
00002c7: 6a                    ; i32.add
00002c8: 36                    ; i32.store
00002c9: 02                    ; alignment
00002ca: 14                    ; load offset
00002cb: 0b                    ; end
 - function body 3 (getFreeChunk)
00002ce: 75                    ; func body size
00002cd: 01                    ; local count
00002ce: 01                    ; local index
00002cf: 7f                    ; I32
00002d0: 41                    ; i32.const
00002d1: 00                    ; i32 literal
00002d2: 28                    ; i32.load
00002d3: 02                    ; alignment
00002d4: 14                    ; load offset
00002d5: 41                    ; i32.const
00002d6: 00                    ; i32 literal
00002d7: 4b                    ; i32.gt_u
00002d8: 04                    ; if
000000c: 40                    ; block_type
00002da: 02                    ; block
00002db: 40                    ; block_type
00002dc: 20                    ; get_local
00002dd: 00                    ; local index
00002de: 10                    ; call
00002df: 04                    ; call func index (4)
00002e0: 21                    ; set_local
00002e1: 01                    ; local index
00002e2: 20                    ; get_local
00002e3: 01                    ; local index
00002e4: 41                    ; i32.const
00002e5: 00                    ; i32 literal
00002e6: 4a                    ; i32.gt_s
00002e7: 04                    ; if
000001b: 40                    ; block_type
00002e9: 02                    ; block
00002ea: 40                    ; block_type
00002eb: 20                    ; get_local
00002ec: 01                    ; local index
00002ed: 41                    ; i32.const
00002ee: 00                    ; i32 literal
00002ef: 28                    ; i32.load
00002f0: 02                    ; alignment
00002f1: 18                    ; load offset
00002f2: 46                    ; i32.eq
00002f3: 04                    ; if
0000027: 40                    ; block_type
00002f5: 02                    ; block
00002f6: 40                    ; block_type
00002f7: 41                    ; i32.const
00002f8: 00                    ; i32 literal
00002f9: 20                    ; get_local
00002fa: 01                    ; local index
00002fb: 10                    ; call
00002fc: 0c                    ; call func index (12)
00002fd: 36                    ; i32.store
00002fe: 02                    ; alignment
00002ff: 18                    ; load offset
0000300: 0b                    ; end
0000301: 0b                    ; end
0000302: 20                    ; get_local
0000303: 01                    ; local index
0000304: 41                    ; i32.const
0000305: 00                    ; i32 literal
0000306: 28                    ; i32.load
0000307: 02                    ; alignment
0000308: 1c                    ; load offset
0000309: 46                    ; i32.eq
000030a: 04                    ; if
000003e: 40                    ; block_type
000030c: 02                    ; block
000030d: 40                    ; block_type
000030e: 41                    ; i32.const
000030f: 00                    ; i32 literal
0000310: 41                    ; i32.const
0000311: 00                    ; i32 literal
0000312: 36                    ; i32.store
0000313: 02                    ; alignment
0000314: 1c                    ; load offset
0000315: 0b                    ; end
0000316: 0b                    ; end
0000317: 41                    ; i32.const
0000318: 00                    ; i32 literal
0000319: 41                    ; i32.const
000031a: 00                    ; i32 literal
000031b: 28                    ; i32.load
000031c: 02                    ; alignment
000031d: 14                    ; load offset
000031e: 41                    ; i32.const
000031f: 01                    ; i32 literal
0000320: 6b                    ; i32.sub
0000321: 36                    ; i32.store
0000322: 02                    ; alignment
0000323: 14                    ; load offset
0000324: 20                    ; get_local
0000325: 01                    ; local index
0000326: 10                    ; call
0000327: 10                    ; call func index (16)
0000328: 41                    ; i32.const
0000329: 00                    ; i32 literal
000032a: 41                    ; i32.const
000032b: 00                    ; i32 literal
000032c: 28                    ; i32.load
000032d: 02                    ; alignment
000032e: 10                    ; load offset
000032f: 20                    ; get_local
0000330: 01                    ; local index
0000331: 10                    ; call
0000332: 13                    ; call func index (19)
0000333: 6b                    ; i32.sub
0000334: 36                    ; i32.store
0000335: 02                    ; alignment
0000336: 10                    ; load offset
0000337: 20                    ; get_local
0000338: 01                    ; local index
0000339: 0f                    ; return
000033a: 0b                    ; end
000033b: 0b                    ; end
000033c: 0b                    ; end
000033d: 0b                    ; end
000033e: 41                    ; i32.const
000033f: 00                    ; i32 literal
0000340: 0f                    ; return
0000341: 0b                    ; end
 - function body 4 (findChunk)
0000344: 35                    ; func body size
0000343: 01                    ; local count
0000344: 01                    ; local index
0000345: 7f                    ; I32
0000346: 41                    ; i32.const
0000347: 00                    ; i32 literal
0000348: 28                    ; i32.load
0000349: 02                    ; alignment
000034a: 18                    ; load offset
000034b: 21                    ; set_local
000034c: 01                    ; local index
000034d: 02                    ; block
000000b: 40                    ; block_type
000034f: 03                    ; loop
000000d: 40                    ; block_type
0000351: 20                    ; get_local
0000352: 01                    ; local index
0000353: 41                    ; i32.const
0000354: 00                    ; i32 literal
0000355: 47                    ; i32.ne
0000356: 45                    ; i32.eqz
0000357: 0d                    ; br_if
0000359: 20                    ; get_local
000035a: 01                    ; local index
000035b: 10                    ; call
000035c: 13                    ; call func index (19)
000035d: 20                    ; get_local
000035e: 00                    ; local index
000035f: 46                    ; i32.eq
0000360: 04                    ; if
000001e: 40                    ; block_type
0000362: 02                    ; block
0000363: 40                    ; block_type
0000364: 20                    ; get_local
0000365: 01                    ; local index
0000366: 0f                    ; return
0000367: 0b                    ; end
0000368: 0b                    ; end
0000369: 20                    ; get_local
000036a: 01                    ; local index
000036b: 28                    ; i32.load
000036c: 02                    ; alignment
000036d: 00                    ; load offset
000036e: 21                    ; set_local
000036f: 01                    ; local index
0000370: 0c                    ; br
0000372: 0b                    ; end
0000373: 0b                    ; end
0000374: 41                    ; i32.const
0000375: 00                    ; i32 literal
0000376: 0f                    ; return
0000377: 0b                    ; end
 - function body 5 (getHeapPtr)
000037a: 08                    ; func body size
0000379: 00                    ; local count
000037a: 41                    ; i32.const
000037b: 00                    ; i32 literal
000037c: 28                    ; i32.load
000037d: 02                    ; alignment
000037e: 0c                    ; load offset
000037f: 0f                    ; return
0000380: 0b                    ; end
 - function body 6 (getFreeMemory)
0000383: 08                    ; func body size
0000382: 00                    ; local count
0000383: 41                    ; i32.const
0000384: 00                    ; i32 literal
0000385: 28                    ; i32.load
0000386: 02                    ; alignment
0000387: 10                    ; load offset
0000388: 0f                    ; return
0000389: 0b                    ; end
 - function body 7 (getOriginalHeapPtr)
000038c: 08                    ; func body size
000038b: 00                    ; local count
000038c: 41                    ; i32.const
000038d: 00                    ; i32 literal
000038e: 28                    ; i32.load
000038f: 02                    ; alignment
0000390: 08                    ; load offset
0000391: 0f                    ; return
0000392: 0b                    ; end
 - function body 8 (getNumFreeChunks)
0000395: 08                    ; func body size
0000394: 00                    ; local count
0000395: 41                    ; i32.const
0000396: 00                    ; i32 literal
0000397: 28                    ; i32.load
0000398: 02                    ; alignment
0000399: 14                    ; load offset
000039a: 0f                    ; return
000039b: 0b                    ; end
 - function body 9 (getFirstFree)
000039e: 08                    ; func body size
000039d: 00                    ; local count
000039e: 41                    ; i32.const
000039f: 00                    ; i32 literal
00003a0: 28                    ; i32.load
00003a1: 02                    ; alignment
00003a2: 18                    ; load offset
00003a3: 0f                    ; return
00003a4: 0b                    ; end
 - function body 10 (getLastFree)
00003a7: 08                    ; func body size
00003a6: 00                    ; local count
00003a7: 41                    ; i32.const
00003a8: 00                    ; i32 literal
00003a9: 28                    ; i32.load
00003aa: 02                    ; alignment
00003ab: 1c                    ; load offset
00003ac: 0f                    ; return
00003ad: 0b                    ; end
 - function body 11 (prevFree)
00003b0: 0b                    ; func body size
00003af: 00                    ; local count
00003b0: 20                    ; get_local
00003b1: 00                    ; local index
00003b2: 41                    ; i32.const
00003b3: 04                    ; i32 literal
00003b4: 6a                    ; i32.add
00003b5: 2d                    ; i32_load8_u
00003b6: 00                    ; alignment
00003b7: 00                    ; load offset
00003b8: 0f                    ; return
00003b9: 0b                    ; end
 - function body 12 (nextFree)
00003bc: 08                    ; func body size
00003bb: 00                    ; local count
00003bc: 20                    ; get_local
00003bd: 00                    ; local index
00003be: 28                    ; i32.load
00003bf: 02                    ; alignment
00003c0: 00                    ; load offset
00003c1: 0f                    ; return
00003c2: 0b                    ; end
 - function body 13 (setHeadSize)
00003c5: 12                    ; func body size
00003c4: 00                    ; local count
00003c5: 20                    ; get_local
00003c6: 00                    ; local index
00003c7: 20                    ; get_local
00003c8: 00                    ; local index
00003c9: 28                    ; i32.load
00003ca: 02                    ; alignment
00003cb: 00                    ; load offset
00003cc: 41                    ; i32.const
00003cd: 07                    ; i32 literal
00003ce: 71                    ; i32.and
00003cf: 20                    ; get_local
00003d0: 01                    ; local index
00003d1: 72                    ; i32.or
00003d2: 36                    ; i32.store
00003d3: 02                    ; alignment
00003d4: 00                    ; load offset
00003d5: 0b                    ; end
 - function body 14 (setFoot)
00003d8: 1b                    ; func body size
00003d7: 02                    ; local count
00003d8: 01                    ; local index
00003d9: 7f                    ; I32
00003da: 01                    ; local index
00003db: 7f                    ; I32
00003dc: 20                    ; get_local
00003dd: 00                    ; local index
00003de: 28                    ; i32.load
00003df: 02                    ; alignment
00003e0: 00                    ; load offset
00003e1: 21                    ; set_local
00003e2: 02                    ; local index
00003e3: 20                    ; get_local
00003e4: 00                    ; local index
00003e5: 20                    ; get_local
00003e6: 02                    ; local index
00003e7: 6a                    ; i32.add
00003e8: 21                    ; set_local
00003e9: 03                    ; local index
00003ea: 20                    ; get_local
00003eb: 03                    ; local index
00003ec: 20                    ; get_local
00003ed: 01                    ; local index
00003ee: 36                    ; i32.store
00003ef: 02                    ; alignment
00003f0: 00                    ; load offset
00003f1: 0b                    ; end
 - function body 15 (getPrevInuse)
00003f4: 14                    ; func body size
00003f3: 01                    ; local count
00003f4: 01                    ; local index
00003f5: 7f                    ; I32
00003f6: 20                    ; get_local
00003f7: 00                    ; local index
00003f8: 41                    ; i32.const
00003f9: 08                    ; i32 literal
00003fa: 6b                    ; i32.sub
00003fb: 21                    ; set_local
00003fc: 01                    ; local index
00003fd: 20                    ; get_local
00003fe: 01                    ; local index
00003ff: 28                    ; i32.load
0000400: 02                    ; alignment
0000401: 00                    ; load offset
0000402: 41                    ; i32.const
0000403: 01                    ; i32 literal
0000404: 71                    ; i32.and
0000405: 0f                    ; return
0000406: 0b                    ; end
 - function body 16 (setInuse)
0000409: 18                    ; func body size
0000408: 01                    ; local count
0000409: 01                    ; local index
000040a: 7f                    ; I32
000040b: 20                    ; get_local
000040c: 00                    ; local index
000040d: 41                    ; i32.const
000040e: 04                    ; i32 literal
000040f: 6b                    ; i32.sub
0000410: 21                    ; set_local
0000411: 01                    ; local index
0000412: 20                    ; get_local
0000413: 01                    ; local index
0000414: 20                    ; get_local
0000415: 01                    ; local index
0000416: 28                    ; i32.load
0000417: 02                    ; alignment
0000418: 00                    ; load offset
0000419: 41                    ; i32.const
000041a: 01                    ; i32 literal
000041b: 72                    ; i32.or
000041c: 36                    ; i32.store
000041d: 02                    ; alignment
000041e: 00                    ; load offset
000041f: 0b                    ; end
 - function body 17 (getInuse)
0000422: 14                    ; func body size
0000421: 01                    ; local count
0000422: 01                    ; local index
0000423: 7f                    ; I32
0000424: 20                    ; get_local
0000425: 00                    ; local index
0000426: 41                    ; i32.const
0000427: 04                    ; i32 literal
0000428: 6b                    ; i32.sub
0000429: 21                    ; set_local
000042a: 01                    ; local index
000042b: 20                    ; get_local
000042c: 01                    ; local index
000042d: 28                    ; i32.load
000042e: 02                    ; alignment
000042f: 00                    ; load offset
0000430: 41                    ; i32.const
0000431: 01                    ; i32 literal
0000432: 71                    ; i32.and
0000433: 0f                    ; return
0000434: 0b                    ; end
 - function body 18 (clearInuse)
0000437: 18                    ; func body size
0000436: 01                    ; local count
0000437: 01                    ; local index
0000438: 7f                    ; I32
0000439: 20                    ; get_local
000043a: 00                    ; local index
000043b: 41                    ; i32.const
000043c: 04                    ; i32 literal
000043d: 6b                    ; i32.sub
000043e: 21                    ; set_local
000043f: 01                    ; local index
0000440: 20                    ; get_local
0000441: 01                    ; local index
0000442: 20                    ; get_local
0000443: 01                    ; local index
0000444: 28                    ; i32.load
0000445: 02                    ; alignment
0000446: 00                    ; load offset
0000447: 41                    ; i32.const
0000448: -2                    ; i32 literal
0000449: 71                    ; i32.and
000044a: 36                    ; i32.store
000044b: 02                    ; alignment
000044c: 00                    ; load offset
000044d: 0b                    ; end
 - function body 19 (getChunkSize)
0000450: 14                    ; func body size
000044f: 01                    ; local count
0000450: 01                    ; local index
0000451: 7f                    ; I32
0000452: 20                    ; get_local
0000453: 00                    ; local index
0000454: 41                    ; i32.const
0000455: 04                    ; i32 literal
0000456: 6b                    ; i32.sub
0000457: 21                    ; set_local
0000458: 01                    ; local index
0000459: 20                    ; get_local
000045a: 01                    ; local index
000045b: 28                    ; i32.load
000045c: 02                    ; alignment
000045d: 00                    ; load offset
000045e: 41                    ; i32.const
000045f: -2                    ; i32 literal
0000460: 71                    ; i32.and
0000461: 0f                    ; return
0000462: 0b                    ; end
 - function body 20 (constructor)
0000465: 1a                    ; func body size
0000464: 00                    ; local count
0000465: 20                    ; get_local
0000466: 00                    ; local index
0000467: 20                    ; get_local
0000468: 01                    ; local index
0000469: 38                    ; f32.store
000046a: 02                    ; alignment
000046b: 00                    ; load offset
000046c: 20                    ; get_local
000046d: 00                    ; local index
000046e: 20                    ; get_local
000046f: 02                    ; local index
0000470: 38                    ; f32.store
0000471: 02                    ; alignment
0000472: 04                    ; load offset
0000473: 20                    ; get_local
0000474: 00                    ; local index
0000475: 20                    ; get_local
0000476: 03                    ; local index
0000477: 38                    ; f32.store
0000478: 02                    ; alignment
0000479: 08                    ; load offset
000047a: 20                    ; get_local
000047b: 00                    ; local index
000047c: 0f                    ; return
000047d: 0b                    ; end
 - function body 21 (add)
0000480: 2a                    ; func body size
000047f: 00                    ; local count
0000480: 41                    ; i32.const
0000481: 0c                    ; i32 literal
0000482: 10                    ; call
0000483: 01                    ; call func index (1)
0000484: 20                    ; get_local
0000485: 00                    ; local index
0000486: 2a                    ; f32.load
0000487: 02                    ; alignment
0000488: 00                    ; load offset
0000489: 20                    ; get_local
000048a: 01                    ; local index
000048b: 2a                    ; f32.load
000048c: 02                    ; alignment
000048d: 00                    ; load offset
000048e: 92                    ; f32.add
000048f: 20                    ; get_local
0000490: 00                    ; local index
0000491: 2a                    ; f32.load
0000492: 02                    ; alignment
0000493: 04                    ; load offset
0000494: 20                    ; get_local
0000495: 01                    ; local index
0000496: 2a                    ; f32.load
0000497: 02                    ; alignment
0000498: 04                    ; load offset
0000499: 92                    ; f32.add
000049a: 20                    ; get_local
000049b: 00                    ; local index
000049c: 2a                    ; f32.load
000049d: 02                    ; alignment
000049e: 08                    ; load offset
000049f: 20                    ; get_local
00004a0: 01                    ; local index
00004a1: 2a                    ; f32.load
00004a2: 02                    ; alignment
00004a3: 08                    ; load offset
00004a4: 92                    ; f32.add
00004a5: 10                    ; call
00004a6: 14                    ; call func index (20)
00004a7: 0f                    ; return
00004a8: 0b                    ; end
 - function body 22 (newVec3)
00004ab: 0f                    ; func body size
00004aa: 00                    ; local count
00004ab: 41                    ; i32.const
00004ac: 0c                    ; i32 literal
00004ad: 10                    ; call
00004ae: 01                    ; call func index (1)
00004af: 20                    ; get_local
00004b0: 00                    ; local index
00004b1: 20                    ; get_local
00004b2: 01                    ; local index
00004b3: 20                    ; get_local
00004b4: 02                    ; local index
00004b5: 10                    ; call
00004b6: 14                    ; call func index (20)
00004b7: 0f                    ; return
00004b8: 0b                    ; end
 - function body 23 (addVec3)
00004bb: 09                    ; func body size
00004ba: 00                    ; local count
00004bb: 20                    ; get_local
00004bc: 00                    ; local index
00004bd: 20                    ; get_local
00004be: 01                    ; local index
00004bf: 10                    ; call
00004c0: 15                    ; call func index (21)
00004c1: 0f                    ; return
00004c2: 0b                    ; end
 - function body 24 (destroyVec3)
00004c5: 06                    ; func body size
00004c4: 00                    ; local count
00004c5: 20                    ; get_local
00004c6: 00                    ; local index
00004c7: 10                    ; call
00004c8: 02                    ; call func index (2)
00004c9: 0b                    ; end
 - function body 25 (destroyTest)
00004cc: 1f                    ; func body size
00004cb: 01                    ; local count
00004cc: 01                    ; local index
00004cd: 7f                    ; I32
00004ce: 41                    ; i32.const
00004cf: 0c                    ; i32 literal
00004d0: 10                    ; call
00004d1: 01                    ; call func index (1)
00004d2: 43                    ; f32.const
00004d3: 01                    ; f32 literal
00004d7: 43                    ; f32.const
00004d8: 01                    ; f32 literal
00004dc: 43                    ; f32.const
00004dd: 01                    ; f32 literal
00004e1: 10                    ; call
00004e2: 14                    ; call func index (20)
00004e3: 21                    ; set_local
00004e4: 00                    ; local index
00004e5: 20                    ; get_local
00004e6: 00                    ; local index
00004e7: 10                    ; call
00004e8: 02                    ; call func index (2)
00004e9: 0b                    ; end
 - function body 26 (memoryTest)
00004ec: 3d                    ; func body size
00004eb: 02                    ; local count
00004ec: 01                    ; local index
00004ed: 7f                    ; I32
00004ee: 01                    ; local index
00004ef: 7f                    ; I32
00004f0: 41                    ; i32.const
00004f1: 00                    ; i32 literal
00004f2: 21                    ; set_local
00004f3: 00                    ; local index
00004f4: 02                    ; block
000000a: 40                    ; block_type
00004f6: 03                    ; loop
000000c: 40                    ; block_type
00004f8: 20                    ; get_local
00004f9: 00                    ; local index
00004fa: 41                    ; i32.const
00004fb: e8                    ; i32 literal
00004fd: 48                    ; i32.lt_s
00004fe: 45                    ; i32.eqz
00004ff: 0d                    ; br_if
0000501: 41                    ; i32.const
0000502: 0c                    ; i32 literal
0000503: 10                    ; call
0000504: 01                    ; call func index (1)
0000505: 43                    ; f32.const
0000506: 01                    ; f32 literal
000050a: 43                    ; f32.const
000050b: 01                    ; f32 literal
000050f: 43                    ; f32.const
0000510: 01                    ; f32 literal
0000514: 10                    ; call
0000515: 14                    ; call func index (20)
0000516: 21                    ; set_local
0000517: 01                    ; local index
0000518: 20                    ; get_local
0000519: 01                    ; local index
000051a: 10                    ; call
000051b: 02                    ; call func index (2)
000051c: 20                    ; get_local
000051d: 00                    ; local index
000051e: 41                    ; i32.const
000051f: 01                    ; i32 literal
0000520: 6a                    ; i32.add
0000521: 21                    ; set_local
0000522: 00                    ; local index
0000523: 0c                    ; br
0000525: 0b                    ; end
0000526: 0b                    ; end
0000527: 0b                    ; end
 - section: Data [0x0b]
000052c: 0b                    ; section code
000052d: 22                    ; section size
000052c: 01                    ; num data segments
 - data segment header 0
000052d: 00                    ; memory index
000052e: 41                    ; i32.const
000052f: 08                    ; i32 literal
0000530: 0b                    ; end
0000531: 1c                    ; data segment size
 - data segment data 0
0000533: 28 00 00 00 28 00 00 00 00 00 00 00 00 00 00 00
0000543: 00 00 00 00 00 00 00 00 00 00 00 00
