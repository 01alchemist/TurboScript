0000000: 0061 736d             ; WASM_BINARY_MAGIC
0000004: 0d00 0000             ; WASM_BINARY_VERSION
 - section: Type [0x01]
0000008: 01                    ; section code
0000009: 13                    ; section size
0000009: 60                    ; func
000000a: 01                    ; num params
000000b: 7f                    ; I32
000000c: 01                    ; num results
000000d: 7f                    ; I32
000000e: 60                    ; func
000000f: 03                    ; num params
0000010: 7f                    ; I32
0000011: 7f                    ; I32
0000012: 7f                    ; I32
0000014: 60                    ; func
0000015: 03                    ; num params
0000016: 7f                    ; I32
0000017: 7f                    ; I32
0000018: 7f                    ; I32
0000019: 01                    ; num results
000001a: 7f                    ; I32
 - section: Function [0x03]
000001d: 03                    ; section code
000001e: 05                    ; section size
000001d: 04                    ; num functions
000001e: 00                    ; func 0 signature index
000001f: 01                    ; func 1 signature index
0000020: 02                    ; func 2 signature index
0000021: 00                    ; func 3 signature index
 - section: Memory [0x05]
0000024: 05                    ; section code
0000025: 04                    ; section size
0000024: 01                    ; num memories
0000025: 00                    ; memory flags
0000026: ff                    ; memory initial pages
 - section: Export [0x07]
000002a: 07                    ; section code
000002b: 17                    ; section size
000002a: 02                    ; num exports
000002b: 06                    ; export name length
000002f: malloc // export name
0000032: 00                    ; export kind
0000033: 00                    ; export func index
0000034: 0a                    ; export name length
0000038: string_new // export name
000003f: 00                    ; export kind
0000040: 03                    ; export func index
 - section: Code [0x0a]
0000043: 0a                    ; section code
0000044: c6                    ; section size
0000043: 04                    ; num functions
0000045: 52                    ; func body size
0000044: 03                    ; local count
0000045: 01                    ; local index
0000046: 7f                    ; I32
0000047: 01                    ; local index
0000048: 7f                    ; I32
0000049: 01                    ; local index
000004a: 7f                    ; I32
000004b: 41                    ; i32.const
000004c: 00                    ; i32 literal
000004d: 28                    ; i32.load
000004e: 02                    ; alignment
000004f: 08                    ; load offset
0000050: 41                    ; i32.const
0000051: 07                    ; i32 literal
0000052: 6a                    ; i32.add
0000053: 41                    ; i32.const
0000054: -8                    ; i32 literal
0000055: 71                    ; i32.and
0000056: 21                    ; set_local
0000058: 20                    ; get_local
0000059: 00                    ; local index
000005a: 41                    ; i32.const
000005b: 07                    ; i32 literal
000005c: 6a                    ; i32.add
000005d: 41                    ; i32.const
000005e: -8                    ; i32 literal
000005f: 71                    ; i32.and
0000060: 21                    ; set_local
0000061: 00                    ; local index
0000062: 20                    ; get_local
0000063: 01                    ; local index
0000064: 20                    ; get_local
0000065: 00                    ; local index
0000066: 6a                    ; i32.add
0000067: 21                    ; set_local
0000069: 41                    ; i32.const
000006a: 00                    ; i32 literal
000006b: 20                    ; get_local
000006c: 02                    ; local index
000006d: 36                    ; i32.store
000006e: 02                    ; alignment
000006f: 08                    ; load offset
0000070: 41                    ; i32.const
0000072: 21                    ; set_local
0000074: 02                    ; block
0000031: 40                    ; block_type
0000076: 03                    ; loop
0000033: 40                    ; block_type
0000078: 20                    ; get_local
0000079: 03                    ; local index
000007a: 20                    ; get_local
000007b: 02                    ; local index
000007c: 48                    ; i32.lt_s
000007d: 45                    ; i32.eqz
000007e: 0d                    ; br_if
0000080: 20                    ; get_local
0000081: 03                    ; local index
0000082: 41                    ; i32.const
0000083: 00                    ; i32 literal
0000084: 36                    ; i32.store
0000085: 02                    ; alignment
0000086: 00                    ; load offset
0000087: 20                    ; get_local
0000088: 03                    ; local index
0000089: 41                    ; i32.const
000008a: 04                    ; i32 literal
000008b: 6a                    ; i32.add
000008c: 21                    ; set_local
000008d: 03                    ; local index
000008e: 0c                    ; br
0000090: 0b                    ; end
0000091: 0b                    ; end
0000092: 20                    ; get_local
0000093: 01                    ; local index
0000094: 0f                    ; return
0000095: 0b                    ; end
0000099: f3                    ; func body size
0000097: 02                    ; local count
0000098: 01                    ; local index
0000099: 7f                    ; I32
000009a: 01                    ; local index
000009b: 7f                    ; I32
000009c: 20                    ; get_local
000009d: 01                    ; local index
000009e: 41                    ; i32.const
000009f: 00                    ; i32 literal
00000a0: 46                    ; i32.eq
00000a1: 20                    ; get_local
00000a2: 00                    ; local index
00000a3: 41                    ; i32.const
00000a4: 00                    ; i32 literal
00000a5: 46                    ; i32.eq
00000a6: 72                    ; i32.or
00000a7: 41                    ; i32.const
00000a8: 01                    ; i32 literal
00000a9: 46                    ; i32.eq
00000aa: 04                    ; if
0000014: 40                    ; block_type
00000ac: 02                    ; block
00000ad: 40                    ; block_type
00000ae: 0f                    ; return
00000af: 0b                    ; end
00000b0: 0b                    ; end
00000b1: 20                    ; get_local
00000b2: 02                    ; local index
00000b3: 41                    ; i32.const
00000b4: 10                    ; i32 literal
00000b5: 4f                    ; i32.ge_u
00000b6: 20                    ; get_local
00000b7: 01                    ; local index
00000b8: 41                    ; i32.const
00000b9: 03                    ; i32 literal
00000ba: 71                    ; i32.and
00000bb: 20                    ; get_local
00000bc: 00                    ; local index
00000bd: 41                    ; i32.const
00000be: 03                    ; i32 literal
00000bf: 71                    ; i32.and
00000c0: 46                    ; i32.eq
00000c1: 71                    ; i32.and
00000c2: 41                    ; i32.const
00000c3: 01                    ; i32 literal
00000c4: 46                    ; i32.eq
00000c5: 04                    ; if
000002f: 40                    ; block_type
00000c7: 02                    ; block
00000c8: 40                    ; block_type
00000c9: 02                    ; block
0000033: 40                    ; block_type
00000cb: 03                    ; loop
0000035: 40                    ; block_type
00000cd: 20                    ; get_local
00000ce: 00                    ; local index
00000cf: 41                    ; i32.const
00000d0: 03                    ; i32 literal
00000d1: 71                    ; i32.and
00000d2: 41                    ; i32.const
00000d3: 00                    ; i32 literal
00000d4: 47                    ; i32.ne
00000d5: 45                    ; i32.eqz
00000d6: 0d                    ; br_if
00000d8: 20                    ; get_local
00000d9: 00                    ; local index
00000da: 20                    ; get_local
00000db: 01                    ; local index
00000dc: 2d                    ; i32_load8_u
00000dd: 00                    ; alignment
00000de: 00                    ; load offset
00000df: 3a                    ; i32.store8
00000e0: 00                    ; alignment
00000e1: 00                    ; load offset
00000e2: 20                    ; get_local
00000e3: 00                    ; local index
00000e4: 41                    ; i32.const
00000e5: 01                    ; i32 literal
00000e6: 6a                    ; i32.add
00000e7: 21                    ; set_local
00000e8: 00                    ; local index
00000e9: 20                    ; get_local
00000ea: 01                    ; local index
00000eb: 41                    ; i32.const
00000ec: 01                    ; i32 literal
00000ed: 6a                    ; i32.add
00000ee: 21                    ; set_local
00000ef: 01                    ; local index
00000f0: 20                    ; get_local
00000f1: 02                    ; local index
00000f2: 41                    ; i32.const
00000f3: 01                    ; i32 literal
00000f4: 6b                    ; i32.sub
00000f5: 21                    ; set_local
00000f6: 02                    ; local index
00000f7: 0c                    ; br
00000f9: 0b                    ; end
00000fa: 0b                    ; end
00000fb: 02                    ; block
0000065: 40                    ; block_type
00000fd: 03                    ; loop
0000067: 40                    ; block_type
00000ff: 20                    ; get_local
0000100: 02                    ; local index
0000101: 41                    ; i32.const
0000102: 03                    ; i32 literal
0000103: 71                    ; i32.and
0000104: 41                    ; i32.const
0000105: 00                    ; i32 literal
0000106: 47                    ; i32.ne
0000107: 45                    ; i32.eqz
0000108: 0d                    ; br_if
000010a: 20                    ; get_local
000010b: 02                    ; local index
000010c: 41                    ; i32.const
000010d: 01                    ; i32 literal
000010e: 6b                    ; i32.sub
000010f: 21                    ; set_local
0000110: 02                    ; local index
0000111: 20                    ; get_local
0000112: 00                    ; local index
0000113: 20                    ; get_local
0000114: 02                    ; local index
0000115: 6a                    ; i32.add
0000116: 20                    ; get_local
0000117: 01                    ; local index
0000118: 20                    ; get_local
0000119: 02                    ; local index
000011a: 6a                    ; i32.add
000011b: 2d                    ; i32_load8_u
000011c: 00                    ; alignment
000011d: 00                    ; load offset
000011e: 3a                    ; i32.store8
000011f: 00                    ; alignment
0000120: 00                    ; load offset
0000121: 0c                    ; br
0000123: 0b                    ; end
0000124: 0b                    ; end
0000125: 20                    ; get_local
0000126: 00                    ; local index
0000127: 20                    ; get_local
0000128: 02                    ; local index
0000129: 6a                    ; i32.add
000012a: 21                    ; set_local
000012c: 02                    ; block
0000096: 40                    ; block_type
000012e: 03                    ; loop
0000098: 40                    ; block_type
0000130: 20                    ; get_local
0000131: 00                    ; local index
0000132: 20                    ; get_local
0000133: 03                    ; local index
0000134: 48                    ; i32.lt_s
0000135: 45                    ; i32.eqz
0000136: 0d                    ; br_if
0000138: 20                    ; get_local
0000139: 00                    ; local index
000013a: 20                    ; get_local
000013b: 01                    ; local index
000013c: 28                    ; i32.load
000013d: 02                    ; alignment
000013e: 00                    ; load offset
000013f: 36                    ; i32.store
0000140: 02                    ; alignment
0000141: 00                    ; load offset
0000142: 20                    ; get_local
0000143: 00                    ; local index
0000144: 41                    ; i32.const
0000145: 04                    ; i32 literal
0000146: 6a                    ; i32.add
0000147: 21                    ; set_local
0000148: 00                    ; local index
0000149: 20                    ; get_local
000014a: 01                    ; local index
000014b: 41                    ; i32.const
000014c: 04                    ; i32 literal
000014d: 6a                    ; i32.add
000014e: 21                    ; set_local
000014f: 01                    ; local index
0000150: 0c                    ; br
0000152: 0b                    ; end
0000153: 0b                    ; end
0000154: 0b                    ; end
0000155: 05                    ; else
0000156: 02                    ; block
0000157: 40                    ; block_type
0000158: 20                    ; get_local
0000159: 00                    ; local index
000015a: 20                    ; get_local
000015b: 02                    ; local index
000015c: 6a                    ; i32.add
000015d: 21                    ; set_local
000015f: 02                    ; block
00000c9: 40                    ; block_type
0000161: 03                    ; loop
00000cb: 40                    ; block_type
0000163: 20                    ; get_local
0000164: 00                    ; local index
0000165: 20                    ; get_local
0000166: 04                    ; local index
0000167: 48                    ; i32.lt_s
0000168: 45                    ; i32.eqz
0000169: 0d                    ; br_if
000016b: 20                    ; get_local
000016c: 00                    ; local index
000016d: 20                    ; get_local
000016e: 01                    ; local index
000016f: 2d                    ; i32_load8_u
0000170: 00                    ; alignment
0000171: 00                    ; load offset
0000172: 3a                    ; i32.store8
0000173: 00                    ; alignment
0000174: 00                    ; load offset
0000175: 20                    ; get_local
0000176: 00                    ; local index
0000177: 41                    ; i32.const
0000178: 01                    ; i32 literal
0000179: 6a                    ; i32.add
000017a: 21                    ; set_local
000017b: 00                    ; local index
000017c: 20                    ; get_local
000017d: 01                    ; local index
000017e: 41                    ; i32.const
000017f: 01                    ; i32 literal
0000180: 6a                    ; i32.add
0000181: 21                    ; set_local
0000182: 01                    ; local index
0000183: 0c                    ; br
0000185: 0b                    ; end
0000186: 0b                    ; end
0000187: 0b                    ; end
0000188: 0b                    ; end
0000189: 0b                    ; end
000018d: 5e                    ; func body size
000018c: 01                    ; local count
000018d: 01                    ; local index
000018e: 7f                    ; I32
000018f: 20                    ; get_local
0000190: 00                    ; local index
0000191: 41                    ; i32.const
0000192: 00                    ; i32 literal
0000193: 46                    ; i32.eq
0000194: 20                    ; get_local
0000195: 01                    ; local index
0000196: 41                    ; i32.const
0000197: 00                    ; i32 literal
0000198: 46                    ; i32.eq
0000199: 72                    ; i32.or
000019a: 41                    ; i32.const
000019b: 01                    ; i32 literal
000019c: 46                    ; i32.eq
000019d: 04                    ; if
0000012: 40                    ; block_type
000019f: 02                    ; block
00001a0: 40                    ; block_type
00001a1: 41                    ; i32.const
00001a2: 00                    ; i32 literal
00001a3: 0f                    ; return
00001a4: 0b                    ; end
00001a5: 0b                    ; end
00001a6: 02                    ; block
000001b: 40                    ; block_type
00001a8: 03                    ; loop
000001d: 40                    ; block_type
00001aa: 20                    ; get_local
00001ab: 02                    ; local index
00001ac: 41                    ; i32.const
00001ad: 00                    ; i32 literal
00001ae: 4b                    ; i32.gt_u
00001af: 45                    ; i32.eqz
00001b0: 0d                    ; br_if
00001b2: 20                    ; get_local
00001b3: 00                    ; local index
00001b4: 2d                    ; i32_load8_u
00001b5: 00                    ; alignment
00001b6: 00                    ; load offset
00001b7: 20                    ; get_local
00001b8: 01                    ; local index
00001b9: 2d                    ; i32_load8_u
00001ba: 00                    ; alignment
00001bb: 00                    ; load offset
00001bc: 6b                    ; i32.sub
00001bd: 21                    ; set_local
00001bf: 20                    ; get_local
00001c0: 03                    ; local index
00001c1: 41                    ; i32.const
00001c2: 00                    ; i32 literal
00001c3: 47                    ; i32.ne
00001c4: 04                    ; if
0000039: 40                    ; block_type
00001c6: 02                    ; block
00001c7: 40                    ; block_type
00001c8: 20                    ; get_local
00001c9: 03                    ; local index
00001ca: 0f                    ; return
00001cb: 0b                    ; end
00001cc: 0b                    ; end
00001cd: 20                    ; get_local
00001ce: 00                    ; local index
00001cf: 41                    ; i32.const
00001d0: 01                    ; i32 literal
00001d1: 6a                    ; i32.add
00001d2: 21                    ; set_local
00001d3: 00                    ; local index
00001d4: 20                    ; get_local
00001d5: 01                    ; local index
00001d6: 41                    ; i32.const
00001d7: 01                    ; i32 literal
00001d8: 6a                    ; i32.add
00001d9: 21                    ; set_local
00001da: 01                    ; local index
00001db: 20                    ; get_local
00001dc: 02                    ; local index
00001dd: 41                    ; i32.const
00001de: 01                    ; i32 literal
00001df: 6b                    ; i32.sub
00001e0: 21                    ; set_local
00001e1: 02                    ; local index
00001e2: 0c                    ; br
00001e4: 0b                    ; end
00001e5: 0b                    ; end
00001e6: 41                    ; i32.const
00001e7: 00                    ; i32 literal
00001e8: 0f                    ; return
00001e9: 0b                    ; end
00001ec: 1d                    ; func body size
00001eb: 01                    ; local count
00001ec: 01                    ; local index
00001ed: 7f                    ; I32
00001ee: 02                    ; block
00001ef: 40                    ; block_type
00001f0: 20                    ; get_local
00001f1: 00                    ; local index
00001f2: 41                    ; i32.const
00001f3: 01                    ; i32 literal
00001f4: 74                    ; i32.shl
00001f5: 41                    ; i32.const
00001f6: 04                    ; i32 literal
00001f7: 6a                    ; i32.add
00001f8: 10                    ; call
00001f9: 00                    ; call func index
00001fa: 21                    ; set_local
00001fc: 20                    ; get_local
00001fd: 01                    ; local index
00001fe: 20                    ; get_local
00001ff: 00                    ; local index
0000200: 36                    ; i32.store
0000201: 02                    ; alignment
0000202: 00                    ; load offset
0000203: 20                    ; get_local
0000204: 01                    ; local index
0000205: 0f                    ; return
0000206: 0b                    ; end
0000207: 0b                    ; end
